{"config":{"lang":["en"],"separator":"[\\s\\u200b\\-_,:!=\\[\\]()\"`/]+|\\.(?!\\d)|&[lg]t;|(?!\\b)(?=[A-Z][a-z])","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Ukrainian Sci-fi","text":"<p>Welcome to Material for MkDocs.</p>"},{"location":"alternatives/","title":"Alternatives","text":"<p>There are tons of static site generators and themes out there and choosing the right one for your tech stack is a tough decision. If you're unsure if Material for MkDocs is the right solution for you, this section should help you evaluate alternative solutions.</p>"},{"location":"alternatives/#docusaurus","title":"Docusaurus","text":"<p>Docusaurus by Facebook is a very popular documentation generator and a good choice if you or your company are already using React to build your site. It will generate a single page application which is fundamentally different from the site Material for MkDocs generates for you.</p> <p>Advantages</p> <ul> <li>Very powerful, customizable and extendable</li> <li>Provides many components that aid in technical writing</li> <li>Large and rich ecosystem, backed by Facebook</li> </ul> <p>Challenges</p> <ul> <li>High learning curve, JavaScript knowledge mandatory</li> <li>JavaScript ecosystem is very volatile, rather high maintenance</li> <li>More time needed to get up and running</li> </ul> <p>While Docusaurus is one of the best choices when it comes to documentation sites that output a single page application, there are many more solutions, including Docz, Gatsby, Vuepress and Docsify that approach this problem similarly.</p>"},{"location":"alternatives/#jekyll","title":"Jekyll","text":"<p>Jekyll is probably one of the most mature and widespread static site generators and is written in Ruby. It is not specifically geared towards technical project documentation and has many themes to choose from, which can be challenging.</p> <p>Advantages</p> <ul> <li>Battle-tested, rich ecosystem, many themes to choose from</li> <li>Brings great capabilities for blogging  (permalinks, tags, etc.)</li> <li>Generates a SEO-friendly site, similar to Material for MkDocs</li> </ul> <p>Challenges</p> <ul> <li>Not specifically geared towards technical project documentation</li> <li>Limited Markdown capabilities, not as advanced as Python Markdown</li> <li>More time needed to get up and running</li> </ul>"},{"location":"alternatives/#sphinx","title":"Sphinx","text":"<p>Sphinx is an alternative static site generator specifically geared towards generating reference documentation, offering powerful capabilities that are lacking in MkDocs. It uses reStructured text, a format similar to Markdown, which some users find harder to use.</p> <p>Advantages</p> <ul> <li>Very powerful, customizable and extendable</li> <li>Generates reference documentation from Python docstrings</li> <li>Large and rich ecosystem, used by many Python projects</li> </ul> <p>Challenges</p> <ul> <li>High learning curve, reStructured text syntax might be challenging</li> <li>Search is less powerful than the one provided by MkDocs</li> <li>More time needed to get up and running</li> </ul> <p>If you're considering using Sphinx because you need to generate reference documentation, you should give mkdocstrings a try \u2013 an actively maintained and popular framework building on top of MkDocs, implementing Sphinx-like functionality.</p>"},{"location":"alternatives/#gitbook","title":"GitBook","text":"<p>GitBook offers a hosted documentation solution that generates a beautiful and functional site from Markdown files in your GitHub repository. However, it was once Open Source, but turned into a closed source solution some time ago.</p> <p>Advantages</p> <ul> <li>Hosted solution, minimal technical knowledge required</li> <li>Custom domains, authentication and other enterprise features</li> <li>Great collaboration features for teams</li> </ul> <p>Challenges</p> <ul> <li>Closed source, not free for proprietary projects</li> <li>Limited Markdown capabilities, not as advanced as Python Markdown</li> <li>Many Open Source projects moved away from GitBook</li> </ul> <p>Many users switched from GitBook to Material for MkDocs, as they want to keep control and ownership of their documentation, favoring an Open Source solution.</p>"},{"location":"browser-support/","title":"Browser support","text":"<p>Material for MkDocs goes at great lengths to support the largest possible range of browsers while retaining the simplest possibilities for customization via modern CSS features like custom properties and mask images.</p>"},{"location":"browser-support/#supported-browsers","title":"Supported browsers","text":"<p>The following table lists all browsers for which Material for MkDocs offers full support, so it can be assumed that all features work without degradation. If you find that something doesn't look right in a browser which is in the supported version range, please open an issue:</p> Browser Version Release date Usage desktop mobile overall  Chrome 49+ 03/2016 25.65% 38.33% 63.98%  Safari 10+ 09/2016 4.63% 14.96% 19.59%  Edge 79+ 01/2020 3.95% n/a 3.95%  Firefox 53+ 04/2017 3.40% .30% 3.70%  Opera 36+ 03/2016 1.44% .01% 1.45% 92.67% <p>Browser support matrix sourced from caniuse.com.<sup>1</sup></p> <p>Note that the usage data is based on global browser market share, so it could in fact be entirely different for your target demographic. It's a good idea to check the distribution of browser types and versions among your users.</p>"},{"location":"browser-support/#other-browsers","title":"Other browsers","text":"<p>Albeit your site might not look as perfect as when viewed with a modern browser, the following older browser versions might work with some additional effort:</p> <ul> <li> Firefox 31-52 \u2013 icons will render as little   boxes due to missing support for mask images. While this cannot be   polyfilled, it might be mitigated by hiding the icons altogether.</li> <li> Edge 16-18 \u2013 the spacing of some elements might   be a little off due to missing support for the :is pseudo selector, which   can be mitigated with some additional effort.</li> <li> Internet Explorer - no support,   mainly due to missing support for custom properties. The last version of   Material for MkDocs to support Internet Explorer is   4.6.3.</li> </ul> <ol> <li> <p>The data was collected from caniuse.com in January 2022, and is primarily based on browser support for custom properties, mask images and the :is pseudo selector which are not entirely polyfillable. Browsers with a cumulated market share of less than 1% were not considered, but might still be fully or partially supported.\u00a0\u21a9</p> </li> </ol>"},{"location":"conventions/","title":"Conventions","text":"<p>This section explains several conventions used in this documentation.</p>"},{"location":"conventions/#symbols","title":"Symbols","text":"<p>This documentation use some symbols for illustration purposes. Before you read on, please make sure you've made yourself familiar with the following list of conventions:</p>"},{"location":"conventions/#sponsors-only","title":"\u2013 Sponsors only","text":"<p>The pumping heart symbol denotes that a specific feature or behavior is only available to sponsors via Insiders. Make sure that you have access to Insiders if you want to use the feature.</p>"},{"location":"conventions/#version","title":"\u2013 Version","text":"<p>The tag symbol in conjunction with a version number denotes when a specific feature or behavior was added. Make sure you're at least on this version if you want to use it.</p>"},{"location":"conventions/#version-insiders","title":"\u2013 Version (Insiders)","text":"<p>The tag symbol with a heart in conjunction with a version number denotes that a specific feature or behavior was added to the Insiders version of Material for MkDocs.</p>"},{"location":"conventions/#default","title":"\u2013 Default value","text":"<p>Some properties in <code>mkdocs.yml</code> have default values for when the author does not explicitly define them. The default value of the property is always included.</p>"},{"location":"conventions/#default","title":"\u2013 Default value is computed","text":"<p>Some default values are not set to static values but computed from other values, like the site language, repository provider, or other settings.</p>"},{"location":"conventions/#default","title":"\u2013 Default value is empty","text":"<p>Some properties do not contain default values. This means that the functionality that is associated with them is not available unless explicitly enabled.</p>"},{"location":"conventions/#metadata","title":"\u2013 Metadata property","text":"<p>This symbol denotes that the thing described is a metadata property, which can be used in Markdown documents as part of the front matter definition.</p>"},{"location":"conventions/#multiple-instances","title":"\u2013 Multiple instances","text":"<p>This symbol denotes that the plugin supports multiple instances, i.e, that it can be used multiple times in the <code>plugins</code> setting in <code>mkdocs.yml</code>.</p>"},{"location":"conventions/#feature","title":"\u2013 Optional feature","text":"<p>Most of the features are hidden behind feature flags, which means they must be explicitly enabled via <code>mkdocs.yml</code>. This allows for the existence of potentially orthogonal features.</p>"},{"location":"conventions/#experimental","title":"\u2013 Experimental","text":"<p>Some newer features are still considered experimental, which means they might (although rarely) change at any time, including their complete removal (which hasn't happened yet).</p>"},{"location":"conventions/#plugin","title":"\u2013 Plugin","text":"<p>Several features are implemented through MkDocs excellent plugin architecture, some of which are built-in and distributed with Material for MkDocs, so no installation is required.</p>"},{"location":"conventions/#extension","title":"\u2013 Markdown extension","text":"<p>This symbol denotes that the thing described is a Markdown extension, which can be enabled in <code>mkdocs.yml</code> and adds additional functionality to the Markdown parser.</p>"},{"location":"conventions/#required","title":"\u2013 Required value","text":"<p>Some (very few in fact) properties or settings are required, which means the authors must explicitly define them.</p>"},{"location":"conventions/#customization","title":"\u2013 Customization","text":"<p>This symbol denotes that the thing described is a customization that must be added by the author.</p>"},{"location":"conventions/#utility","title":"\u2013 Utility","text":"<p>Besides plugins, there are some utilities that build on top of MkDocs in order to provide extended functionality, like for example support for versioning.</p>"},{"location":"creating-your-site/","title":"Creating your site","text":"<p>After you've installed Material for MkDocs, you can bootstrap your project documentation using the <code>mkdocs</code> executable. Go to the directory where you want your project to be located and enter:</p> <pre><code>mkdocs new .\n</code></pre> <p>Alternatively, if you're running Material for MkDocs from within Docker, use:</p> Unix, PowershellWindows (cmd) <pre><code>docker run --rm -it -v ${PWD}:/docs squidfunk/mkdocs-material new .\n</code></pre> <pre><code>docker run --rm -it -v \"%cd%\":/docs squidfunk/mkdocs-material new .\n</code></pre> <p>This will create the following structure:</p> <pre><code>.\n\u251c\u2500 docs/\n\u2502  \u2514\u2500 index.md\n\u2514\u2500 mkdocs.yml\n</code></pre>"},{"location":"creating-your-site/#configuration","title":"Configuration","text":""},{"location":"creating-your-site/#minimal-configuration","title":"Minimal configuration","text":"<p>Simply set the <code>site_name</code> and add the following lines to <code>mkdocs.yml</code> to enable the theme:</p> <pre><code>site_name: My site\nsite_url: https://mydomain.org/mysite\ntheme:\n  name: material\n</code></pre> <p>The <code>site_url</code> setting is important for a number of reasons. By default, MkDocs will assume that your site is hosted at the root of your domain. This is not the case, for example, when publishing to GitHub pages - unless you use a custom domain. Another reason is that some of the plugins require the <code>site_url</code> to be set, so you should always do this.</p> Recommended: configuration validation and auto-complete <p>In order to minimize friction and maximize productivity, Material for MkDocs provides its own schema.json<sup>1</sup> for <code>mkdocs.yml</code>. If your editor supports YAML schema validation, it's definitely recommended to set it up:</p> Visual Studio CodeOther <ol> <li>Install <code>vscode-yaml</code> for YAML language support.</li> <li> <p>Add the schema under the <code>yaml.schemas</code> key in your user or     workspace <code>settings.json</code>:</p> <pre><code>{\n  \"yaml.schemas\": {\n    \"https://squidfunk.github.io/mkdocs-material/schema.json\": \"mkdocs.yml\"\n  },\n  \"yaml.customTags\": [ // (1)!\n    \"!ENV scalar\",\n    \"!ENV sequence\",\n    \"!relative scalar\",\n    \"tag:yaml.org,2002:python/name:material.extensions.emoji.to_svg\",\n    \"tag:yaml.org,2002:python/name:material.extensions.emoji.twemoji\",\n    \"tag:yaml.org,2002:python/name:pymdownx.superfences.fence_code_format\",\n    \"tag:yaml.org,2002:python/object/apply:pymdownx.slugs.slugify mapping\"\n  ]\n}\n</code></pre> <ol> <li>This setting is necessary if you plan to use icons and emojis,     or Visual Studio Code will show errors on certain lines.</li> </ol> </li> </ol> <ol> <li>Ensure your editor of choice has support for YAML schema validation.</li> <li> <p>Add the following lines at the top of <code>mkdocs.yml</code>:</p> <pre><code># yaml-language-server: $schema=https://squidfunk.github.io/mkdocs-material/schema.json\n</code></pre> </li> </ol>"},{"location":"creating-your-site/#advanced-configuration","title":"Advanced configuration","text":"<p>Material for MkDocs comes with many configuration options. The setup section explains in great detail how to configure and customize colors, fonts, icons and much more:</p> <ul> <li>Changing the colors</li> <li>Changing the fonts</li> <li>Changing the language</li> <li>Changing the logo and icons</li> <li>Ensuring data privacy</li> <li>Setting up navigation</li> <li>Setting up site search</li> <li>Setting up site analytics</li> <li>Setting up social cards</li> <li>Setting up a blog</li> <li>Setting up tags</li> <li>Setting up versioning</li> <li>Setting up the header</li> <li>Setting up the footer</li> <li>Adding a git repository</li> <li>Adding a comment system</li> <li>Building an optimized site</li> <li>Building for offline usage</li> </ul> <p>Furthermore, see the list of supported Markdown extensions that are natively integrated with Material for MkDocs, delivering an unprecedented low-effort technical writing experience.</p>"},{"location":"creating-your-site/#templates","title":"Templates","text":"<p>If you want to jump start a new project, you can use one of our growing collection of templates:</p> <ul> <li> <p> Blog</p> <p>Create a blog</p> </li> <li> <p> Social cards</p> <p>Create documentation with social cards</p> </li> </ul>"},{"location":"creating-your-site/#previewing-as-you-write","title":"Previewing as you write","text":"<p>MkDocs includes a live preview server, so you can preview your changes as you write your documentation. The server will automatically rebuild the site upon saving. Start it with:</p> <pre><code>mkdocs serve # (1)!\n</code></pre> <ol> <li> <p>If you have a large documentation project, it might take minutes until     MkDocs has rebuilt all pages for you to preview. If you're only interested     in the current page, the <code>--dirtyreload</code> flag will make     rebuilds much faster:</p> <pre><code>mkdocs serve --dirtyreload\n</code></pre> </li> </ol> <p>If you're running Material for MkDocs from within Docker, use:</p> Unix, PowershellWindows <pre><code>docker run --rm -it -p 8000:8000 -v ${PWD}:/docs squidfunk/mkdocs-material\n</code></pre> <pre><code>docker run --rm -it -p 8000:8000 -v \"%cd%\":/docs squidfunk/mkdocs-material\n</code></pre> <p>Point your browser to localhost:8000 and you should see:</p> <p></p>"},{"location":"creating-your-site/#building-your-site","title":"Building your site","text":"<p>When you're finished editing, you can build a static site from your Markdown files with:</p> <pre><code>mkdocs build\n</code></pre> <p>If you're running Material for MkDocs from within Docker, use:</p> Unix, PowershellWindows <pre><code>docker run --rm -it -v ${PWD}:/docs squidfunk/mkdocs-material build\n</code></pre> <pre><code>docker run --rm -it -v \"%cd%\":/docs squidfunk/mkdocs-material build\n</code></pre> <p>The contents of this directory make up your project documentation. There's no need for operating a database or server, as it is completely self-contained. The site can be hosted on GitHub Pages, GitLab Pages, a CDN of your choice or your private web space.</p> <p>If you intend to distribute your documentation as a set of files to be read from a local filesystem rather than a web server (such as in a <code>.zip</code> file), please read the notes about building for offline usage.</p> <ol> <li> <p>If you're a MkDocs plugin or Markdown extension author and your project works with Material for MkDocs, you're very much invited to contribute a schema for your extension or plugin as part of a pull request on GitHub. If you already have a schema defined, or wish to self-host your schema to reduce duplication, you can add it via $ref.\u00a0\u21a9</p> </li> </ol>"},{"location":"customization/","title":"Customization","text":"<p>Project documentation is as diverse as the projects themselves and Material for MkDocs is a great starting point for making it look beautiful. However, as you write your documentation, you may reach a point where small adjustments are necessary to preserve your brand's style.</p>"},{"location":"customization/#adding-assets","title":"Adding assets","text":"<p>MkDocs provides several ways to customize a theme. In order to make a few small tweaks to Material for MkDocs, you can just add CSS and JavaScript files to the <code>docs</code> directory.</p>"},{"location":"customization/#additional-css","title":"Additional CSS","text":"<p>If you want to tweak some colors or change the spacing of certain elements, you can do this in a separate style sheet. The easiest way is by creating a new style sheet file in the <code>docs</code> directory:</p> <pre><code>.\n\u251c\u2500 docs/\n\u2502  \u2514\u2500 stylesheets/\n\u2502     \u2514\u2500 extra.css\n\u2514\u2500 mkdocs.yml\n</code></pre> <p>Then, add the following lines to <code>mkdocs.yml</code>:</p> <pre><code>extra_css:\n  - stylesheets/extra.css\n</code></pre>"},{"location":"customization/#additional-javascript","title":"Additional JavaScript","text":"<p>If you want to integrate another syntax highlighter or add some custom logic to your theme, create a new JavaScript file in the <code>docs</code> directory:</p> <pre><code>.\n\u251c\u2500 docs/\n\u2502  \u2514\u2500 javascripts/\n\u2502     \u2514\u2500 extra.js\n\u2514\u2500 mkdocs.yml\n</code></pre> <p>Then, add the following lines to <code>mkdocs.yml</code>:</p> <pre><code>extra_javascript:\n  - javascripts/extra.js\n</code></pre> How to integrate with third-party JavaScript libraries <p>It is likely that you will want to run your JavaScript code only once the page has been fully loaded by the browser. This means installing a callback function subscribing to events on the <code>document$</code> observable exported by Material for MkDocs. Using the <code>document$</code> observable is particularly important if you are using instant loading since it will not result in a page refresh in the browser - but subscribers on the observable will be notified.</p> <pre><code>document$.subscribe(function() {\n  console.log(\"Initialize third-party libraries here\")\n})\n</code></pre> <p><code>document$</code> is an RxJS Observable and you can call the <code>subscribe()</code> method any number of times to attach different functionality.</p>"},{"location":"customization/#extending-the-theme","title":"Extending the theme","text":"<p>If you want to alter the HTML source (e.g. add or remove some parts), you can extend the theme. MkDocs supports theme extension, an easy way to override parts of Material for MkDocs without forking from git. This ensures that you can update to the latest version more easily.</p>"},{"location":"customization/#setup-and-theme-structure","title":"Setup and theme structure","text":"<p>Enable Material for MkDocs as usual in <code>mkdocs.yml</code>, and create a new folder for <code>overrides</code> which you then reference using the <code>custom_dir</code> setting:</p> <pre><code>theme:\n  name: material\n  custom_dir: overrides\n</code></pre> <p>Theme extension prerequisites</p> <p>As the <code>custom_dir</code> setting is used for the theme extension process, Material for MkDocs needs to be installed via <code>pip</code> and referenced with the <code>name</code> setting in <code>mkdocs.yml</code>. It will not work when cloning from <code>git</code>.</p> <p>The structure in the <code>overrides</code> directory must mirror the directory structure of the original theme, as any file in the <code>overrides</code> directory will replace the file with the same name which is part of the original theme. Besides, further assets may also be put in the <code>overrides</code> directory:</p> <pre><code>.\n\u251c\u2500 .icons/                             # Bundled icon sets\n\u251c\u2500 assets/\n\u2502  \u251c\u2500 images/                          # Images and icons\n\u2502  \u251c\u2500 javascripts/                     # JavaScript files\n\u2502  \u2514\u2500 stylesheets/                     # Style sheets\n\u251c\u2500 partials/\n\u2502  \u251c\u2500 integrations/                    # Third-party integrations\n\u2502  \u2502  \u251c\u2500 analytics/                    # Analytics integrations\n\u2502  \u2502  \u2514\u2500 analytics.html                # Analytics setup\n\u2502  \u251c\u2500 languages/                       # Translation languages\n\u2502  \u251c\u2500 actions.html                     # Actions\n\u2502  \u251c\u2500 alternate.html                   # Site language selector\n\u2502  \u251c\u2500 comments.html                    # Comment system (empty by default)\n\u2502  \u251c\u2500 consent.html                     # Consent\n\u2502  \u251c\u2500 content.html                     # Page content\n\u2502  \u251c\u2500 copyright.html                   # Copyright and theme information\n\u2502  \u251c\u2500 feedback.html                    # Was this page helpful?\n\u2502  \u251c\u2500 footer.html                      # Footer bar\n\u2502  \u251c\u2500 header.html                      # Header bar\n\u2502  \u251c\u2500 icons.html                       # Custom icons\n\u2502  \u251c\u2500 language.html                    # Translation setup\n\u2502  \u251c\u2500 logo.html                        # Logo in header and sidebar\n\u2502  \u251c\u2500 nav.html                         # Main navigation\n\u2502  \u251c\u2500 nav-item.html                    # Main navigation item\n\u2502  \u251c\u2500 pagination.html                  # Pagination (used for blog)\n\u2502  \u251c\u2500 palette.html                     # Color palette toggle\n\u2502  \u251c\u2500 post.html                        # Blog post excerpt\n\u2502  \u251c\u2500 progress.html                    # Progress indicator\n\u2502  \u251c\u2500 search.html                      # Search interface\n\u2502  \u251c\u2500 social.html                      # Social links\n\u2502  \u251c\u2500 source.html                      # Repository information\n\u2502  \u251c\u2500 source-file.html                 # Source file information\n\u2502  \u251c\u2500 tabs.html                        # Tabs navigation\n\u2502  \u251c\u2500 tabs-item.html                   # Tabs navigation item\n\u2502  \u251c\u2500 tags.html                        # Tags\n\u2502  \u251c\u2500 toc.html                         # Table of contents\n\u2502  \u251c\u2500 toc-item.html                    # Table of contents item\n\u2502  \u2514\u2500 top.html                         # Back-to-top button\n\u251c\u2500 404.html                            # 404 error page\n\u251c\u2500 base.html                           # Base template\n\u251c\u2500 blog.html                           # Blog index page\n\u251c\u2500 blog-archive.html                   # Blog archive index page\n\u251c\u2500 blog-category.html                  # Blog category index page\n\u251c\u2500 blog-post.html                      # Blog post page\n\u2514\u2500 main.html                           # Default page\n</code></pre>"},{"location":"customization/#overriding-partials","title":"Overriding partials","text":"<p>In order to override a partial, we can replace it with a file of the same name and location in the <code>overrides</code> directory. For example, to replace the original <code>footer.html</code> partial, create a new <code>footer.html</code> partial in the <code>overrides</code> directory:</p> <pre><code>.\n\u251c\u2500 overrides/\n\u2502  \u2514\u2500 partials/\n\u2502     \u2514\u2500 footer.html\n\u2514\u2500 mkdocs.yml\n</code></pre> <p>MkDocs will now use the new partial when rendering the theme. This can be done with any file.</p>"},{"location":"customization/#overriding-blocks","title":"Overriding blocks recommended","text":"<p>Besides overriding partials, it's also possible to override (and extend) template blocks, which are defined inside the templates and wrap specific features. In order to set up block overrides, create a <code>main.html</code> file inside the <code>overrides</code> directory:</p> <pre><code>.\n\u251c\u2500 overrides/\n\u2502  \u2514\u2500 main.html\n\u2514\u2500 mkdocs.yml\n</code></pre> <p>Then, e.g. to override the site title, add the following lines to <code>main.html</code>:</p> <pre><code>{% extends \"base.html\" %}\n\n{% block htmltitle %}\n  &lt;title&gt;Lorem ipsum dolor sit amet&lt;/title&gt;\n{% endblock %}\n</code></pre> <p>If you intend to add something to a block rather than to replace it altogether with new content, use <code>{{ super() }}</code> inside the block to include the original block content. This is particularly useful when adding third-party scripts to your docs, e.g.</p> <pre><code>{% extends \"base.html\" %}\n\n{% block scripts %}\n  &lt;!-- Add scripts that need to run before here --&gt;\n  {{ super() }}\n  &lt;!-- Add scripts that need to run afterwards here --&gt;\n{% endblock %}\n</code></pre> <p>The following template blocks are provided by the theme:</p> Block name Purpose <code>analytics</code> Wraps the Google Analytics integration <code>announce</code> Wraps the announcement bar <code>config</code> Wraps the JavaScript application config <code>container</code> Wraps the main content container <code>content</code> Wraps the main content <code>extrahead</code> Empty block to add custom meta tags <code>fonts</code> Wraps the font definitions <code>footer</code> Wraps the footer with navigation and copyright <code>header</code> Wraps the fixed header bar <code>hero</code> Wraps the hero teaser (if available) <code>htmltitle</code> Wraps the <code>&lt;title&gt;</code> tag <code>libs</code> Wraps the JavaScript libraries (header) <code>outdated</code> Wraps the version warning <code>scripts</code> Wraps the JavaScript application (footer) <code>site_meta</code> Wraps the meta tags in the document head <code>site_nav</code> Wraps the site navigation and table of contents <code>styles</code> Wraps the style sheets (also extra sources) <code>tabs</code> Wraps the tabs navigation (if available)"},{"location":"customization/#theme-development","title":"Theme development","text":"<p>Material for MkDocs is built on top of TypeScript, RxJS and SASS, and uses a lean, custom build process to put everything together.<sup>1</sup> If you want to make more fundamental changes, it may be necessary to make the adjustments directly in the source of the theme and recompile it.</p>"},{"location":"customization/#environment-setup","title":"Environment setup","text":"<p>First, clone the repository for the edition you want to work on. If you want to clone the Insiders repository, you need to become a sponsor first to gain access.</p> Material for MkDocsInsiders <pre><code>git clone https://github.com/squidfunk/mkdocs-material\ncd mkdocs-material\n</code></pre> <p>You will need to have a GitHub access token as described in the Insiders documentation and make it available in the <code>$GH_TOKEN</code> variable.</p> <pre><code>git clone https://${GH_TOKEN}@github.com/squidfunk/mkdocs-material-insiders.git # (1)!\n</code></pre> <ol> <li> <p>If you are using SSH keys for authenticating with GitHub, you can     clone Insiders with this command:</p> <pre><code>git clone git@github.com:squidfunk/mkdocs-material-insiders.git\n</code></pre> </li> </ol> <p>Next, create a new Python virtual environment and activate it:</p> <pre><code>python -m venv venv\nsource venv/bin/activate\n</code></pre> <p>Ensure pip always runs in a virtual environment</p> <p>If you set the environment variable <code>PIP_REQUIRE_VIRTUALENV</code> to <code>true</code>, <code>pip</code> will refuse to install anything outside a virtual environment. Forgetting to activate a <code>venv</code> can be very annoying as it will install all sorts of things outside virtual environments over time, possibly leading to further errors. So, you may want to add this to your <code>.bashrc</code> or <code>.zshrc</code> and re-start your shell:</p> <pre><code>export PIP_REQUIRE_VIRTUALENV=true\n</code></pre> <p>Then, install all Python dependencies:</p> Material for MkDocsInsiders <pre><code>pip install -e \".[recommended]\"\npip install nodeenv\n</code></pre> <pre><code>pip install -e \".[recommended, imaging]\"\npip install nodeenv\n</code></pre> <p>In addition, you will need to install the <code>cairo</code> and <code>pngquant</code> libraries in your system, as described in the image processing requirements guide.</p> <p>Finally, install the Node.js LTS version into the Python virtual environment and install all Node.js dependencies:</p> <pre><code>nodeenv -p -n lts\nnpm install\n</code></pre>"},{"location":"customization/#development-mode","title":"Development mode","text":"<p>Start the watcher with:</p> <pre><code>npm start\n</code></pre> <p>Then, in a second terminal window, start the MkDocs live preview server with:</p> <pre><code>mkdocs serve --watch-theme\n</code></pre> <p>Point your browser to localhost:8000 and you should see this very documentation in front of you.</p> <p>Automatically generated files</p> <p>Never make any changes in the <code>material</code> directory, as the contents of this directory are automatically generated from the <code>src</code> directory and will be overwritten when the theme is built.</p>"},{"location":"customization/#building-the-theme","title":"Building the theme","text":"<p>When you're finished making your changes, you can build the theme by invoking:</p> <pre><code>npm run build # (1)!\n</code></pre> <ol> <li> <p>While this command will build all theme files, it will skip the overrides     used in Material for MkDocs' own documentation which are not distributed     with the theme. If you forked the theme and want to build the overrides     as well, e.g. before submitting a PR with changes, use:</p> <pre><code>npm run build:all\n</code></pre> <p>This will take longer, as now the icon search index, schema files, as well as additional style sheet and JavaScript files are built.</p> </li> </ol> <p>This triggers the production-level compilation and minification of all style sheets and JavaScript files. After the command exits, the compiled files are located in the <code>material</code> directory. When running <code>mkdocs build</code>, you should now see your changes to the original theme.</p> <ol> <li> <p>Prior to 7.0.0 the build was based on Webpack, resulting in occasional broken builds due to incompatibilities with loaders and plugins. Therefore, we decided to swap Webpack for a leaner solution which is now based on RxJS as the application itself. This allowed for the pruning of more than 500 dependencies (~30% less).\u00a0\u21a9</p> </li> </ol>"},{"location":"enterprise-support/","title":"Enterprise Feedback","text":"<p>We highly value the insights of our enterprise users, and we're eager to hear from you. Your feedback is immensely valuable to us. If you're utilizing Material for MkDocs in an enterprise context and would like to share your experiences with us, we'd love to connect and discuss:</p> <ul> <li>What you are building with it</li> <li>What aspects you like about it</li> <li>What challenges you are facing</li> <li>What could be improved</li> </ul>"},{"location":"enterprise-support/#lets-connect","title":"Let's Connect","text":"<p>To schedule a convenient appointment, please reach out to us via email at contact@squidfunk.com and provide us with the following details:</p> <ul> <li>Your company's name</li> <li>How you are using Material for MkDocs</li> <li>Any specific questions or topics you'd like to address</li> </ul> <p>Once we have this information, we'll promptly get in touch with you to arrange a 30-minute call. Please note that this call is exclusively intended for enterprise users and is not meant for technical support. Instead, it's an opportunity for us to engage in a casual conversation to better understand your unique needs.</p> <p>We look forward to our discussion!</p>"},{"location":"getting-started/","title":"Oleh Shynkarenko","text":"<p>PhD Candidate in Philosophy University of P\u00e9cs, Faculty of Philosophy</p> <p></p> <ul> <li> <p>Google Scholar</p> </li> <li> <p>ORCID</p> </li> <li> <p>Academia</p> </li> </ul> <p>I am a Ukrainian journalist, writer, and researcher with a lifelong passion for literature, philosophy, and science fiction. My journey spans from engineering to creative writing, from journalism to academic research, and I am excited to share my work and experiences with you.</p>"},{"location":"getting-started/#professional-background","title":"Professional Background","text":"<p>Born in Zaporizhzhya, Ukraine, I hold a bachelor's degree in Automation of Technological Processes and Production from Zaporizhzhya State Engineering Academy and a postgraduate diploma in English Translation from the Classic Private University in Ukraine. I am currently pursuing my PhD at the University of P\u00e9cs<sup>1</sup>, focusing on the intersection of science fiction, philosophy, and cultural studies.</p> <p>My professional experience includes over:</p> <ul> <li>20 years in journalism and creative writing,</li> <li>10 years in video and audio production,</li> <li>7 years as a technical writer specializing in software and hardware documentation.</li> </ul> My CV <p>GlobalLogic | Senior Technical Writer</p> <p>\ud83d\udcc5 Nov 2021 \u2013 Feb 2025 | Kyiv, Ukraine</p> <p>Created developer and user documentation using MkDocs, GitHub, and VS Code. Developed and edited manuals, user guides, and API documentation. Prepared change requests, risk assessments, and user stories. Conducted manual testing, reported bugs, and documented test results. Clients: 3M, Verizon, NuvoAir (healthcare, telecom, software industries).</p> <p>BJet | Senior Technical Writer</p> <p>\ud83d\udcc5 Aug 2021 \u2013 Nov 2021 | Lviv, Ukraine</p> <p>Documented ERP systems (Odoo), dashboards, and legal policies. Created user guides, software documentation, and video tutorials. Worked with RoboHelp, Confluence, and localization tools (Poedit, POEditor).</p> <p>ASBIS Ukraine | Technical Writer</p> <p>\ud83d\udcc5 Sep 2020 \u2013 Aug 2021 | Kyiv, Ukraine</p> <p>Developed user guides, quickstart manuals, and online help content. Produced video tutorials and managed software documentation.</p> <p>EGIS Ukraina | Technical Writer &amp; Project Manager</p> <p>\ud83d\udcc5 Dec 2018 \u2013 Sep 2020 | Kyiv Region, Ukraine</p> <p>Created technical reports, executive summaries, and mitigation strategies. Managed web content, social media, and communications.</p> <p>Ukrainian Helsinki Human Rights Union | Journalist &amp; Project Manager</p> <p>\ud83d\udcc5 Jun 2015 \u2013 Dec 2018 | Kyiv, Ukraine</p> <p>Reported on court cases, legal reforms, and human rights issues. Produced articles, reports, blogs, and social media content. Managed web content, media outreach, and video projects.</p> <p>Hromadske Radio | Broadcast Journalist</p> <p>\ud83d\udcc5 Sep 2013 \u2013 Jul 2018 | Kyiv, Ukraine</p> <p>Hosted legal and philosophy podcasts (e.g., \"Legal Alphabet\", \"Philosophical Drum\"). Produced news reports and media content.</p> <p>Previous Journalism Roles</p> <p>NGO Telekrytyka (2010 \u2013 2013) \u2013 Media analyst, video reporter.</p> <p>Evening News (2009 \u2013 2010) \u2013 Political &amp; economic journalist.</p> <p>Delo Newspaper (2008 \u2013 2009) \u2013 Business &amp; political journalist.</p> <p>Automation &amp; Instrumentation Engineer</p> <p>\ud83d\udcc5 Jun 2001 \u2013 Jul 2007 | Zaporizhzhya, Ukraine</p> <p>Managed automation unit and technical documentation in heating networks.</p> <p>Skills &amp; Tools</p> <p>\u2714 Technical Documentation: MkDocs, Markdown, GitHub, API Docs, RoboHelp</p> <p>\u2714 Software &amp; Testing: Manual Testing, Test Planning, Bug Tracking, REST APIs</p> <p>\u2714 Content Development: User Manuals, Software Guides, Online Help, Video Tutorials</p> <p>\u2714 Journalism &amp; Media: Report Writing, Content Management, Podcasting</p> <p>\u2714 Tools: Git, Confluence, OneNote, Microsoft Office, CSS, JavaScript, HTML</p> <p>Academic and Research Interests:</p> <p>My PhD research, titled \"From Utopia to Dystopia: Ukrainian Science Fiction and the Collapse of Techno-Communism\", explores Ukrainian science fiction as a form of intellectual resistance and philosophical inquiry. Key areas of focus include:</p> <ul> <li>Postcolonial Studies: Examining Ukraine as a cultural space under Russian oppression.</li> <li>Ukrainian Sci-Fi and Positivism: Analyzing its response to the rise and decline of Soviet positivist ideologies.</li> <li>Postmodern and Metamodern Shifts: Investigating literary transitions after the collapse of the USSR.</li> <li>Global Connections: Exploring how Ukrainian sci-fi interacts with and is influenced by global science fiction traditions. Through my research, I aim to highlight the cultural and philosophical richness of Ukrainian science fiction and its relevance to understanding broader societal changes.</li> </ul>"},{"location":"getting-started/#creative-and-journalistic-achievements","title":"Creative and Journalistic Achievements","text":"<p>I have authored six fiction books, including:</p> <ul> <li>Kaharlyk (2014), a satirical dystopia exploring identity in post-apocalyptic Ukraine.</li> <li>The First Ukrainian Robots (2016), a reflection on humanity and technology.</li> <li>Cherep (2017), an exploration the irrational roots of the so-called \"Russian world\", which led to the growth of aggression and militarization of modern Russian society.</li> <li>Bandera Distortion (2019), a provocative take on historical and cultural narratives.</li> </ul> <p>My work has been published in both Ukrainian and English, with international recognition for my unique voice and perspective. Beyond literature, I have produced over 600 articles and 200+ radio podcasts, engaging with topics ranging from philosophy to human rights.</p>"},{"location":"getting-started/#publications-and-presentations","title":"Publications and Presentations","text":"<p>I am proud to have presented my research at international conferences, including:</p> <ul> <li>Budapest Workshop on Philosophy and Technology 2023 (BudPT23): keynote \"Science Fiction in Ukraine: 1920\u20132020.\"</li> <li>Interdisciplinary Doctoral Student Conference 2024 (IDK2024): Award-winning presentation on \"The Decline of Positivism in the 20<sup>th</sup> Century through Ukrainian Sci-Fi.\" </li> <li>Collision Points XI (2024): Presentation on the genre's transitions in Ukrainian sci-fi literature.</li> <li>Passau Summer School for Applied Ethics (2024): Accepted to discuss my topic in a multidisciplinary setting.</li> <li>SOFIKON 2025 Szent\u00e1gothai Higher Education Interdisciplinary Conference (2025) Presentation \u201cThe Decline of Positivism and the Evolution of Ukrainian Science Fiction\u201d.</li> <li>Collision Points XII (2025): Presentation \"From Mysticism to Mechanism: The Intellectual Evolution of the Human Mind\" (Savchenko, Baudrillard, and Dennett: postmodern representation of individuality).</li> </ul>"},{"location":"getting-started/#organizational-and-leadership-experience","title":"Organizational and Leadership Experience","text":"<p>During my tenure as Public Relations Manager for the Ukrainian Helsinki Human Rights Union, I organized numerous public events, including conferences, workshops, and outreach programs. I excel in event planning, communication, and fostering engagement, skills I now bring to my academic and professional endeavors.</p>"},{"location":"getting-started/#why-ukrainian-sci-fi","title":"Why Ukrainian Sci-Fi?","text":"<p>Growing up in a society where philosophy was often censored, I found intellectual refuge in Ukrainian science fiction. Works by authors like Volodymyr Savchenko inspired me to explore profound philosophical questions, blending my love for literature and critical thinking. Today, I believe Ukrainian science fiction is not only a lens through which to understand the cultural history of Ukraine but also a key to its future as part of a vibrant, global intellectual community.</p> <ol> <li> <p>Doctoral School of Philosophy - BTK-FILO-DNM, Doctorate course (PhD/DLA, Full-time training, Admission year: 2023/24/1) Start of legal relation: 1 September 2023 \u21a9</p> </li> </ol>"},{"location":"license/","title":"License","text":"<p>MIT License</p> <p>Copyright \u00a9 2016-2025 Martin Donath</p> <p>Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:</p> <p>The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.</p> <p>THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.</p>"},{"location":"philosophy/","title":"Philosophy","text":"<p>Before settling for Material for MkDocs, it's a good idea to understand the philosophy behind the project, in order to make sure it aligns with your goals. This page explains the design principles anchored in Material for MkDocs, and discusses the conventions used in this documentation.</p>"},{"location":"philosophy/#design-principles","title":"Design principles","text":"<ul> <li> <p>It's just Markdown: Focus on the content of your documentation and create a professional static site in minutes. No need to know HTML, CSS or JavaScript \u2013 let Material for MkDocs do the heavy lifting for you.</p> </li> <li> <p>Works on all devices: Serve your documentation with confidence \u2013 Material for MkDocs automatically adapts to perfectly fit the available screen estate, no matter the type or size of the viewing device. Desktop. Tablet. Mobile. All great.</p> </li> <li> <p>Made to measure: Make it yours \u2013 change the colors, fonts, language, icons, logo, and more with a few lines of configuration. Material for MkDocs can be easily extended and provides many options to alter appearance and behavior.</p> </li> <li> <p>Fast and lightweight: Don't let your users wait \u2013 get incredible value with a small footprint by using one of the fastest themes available with excellent performance, yielding optimal search engine rankings and happy users that return.</p> </li> <li> <p>Maintain ownership: Make accessibility a priority \u2013 users can navigate your   documentation with touch devices, keyboard, and screen readers. Semantic   markup ensures that your documentation works for everyone.</p> </li> <li> <p>Open Source: You're in good company \u2013 choose a mature and actively maintained solution built with state-of-the-art Open Source technologies, trusted by more than 50.000 individuals and organizations. Licensed under MIT.</p> </li> </ul>"},{"location":"publishing-your-site/","title":"Publishing your site","text":"<p>The great thing about hosting project documentation in a <code>git</code> repository is the ability to deploy it automatically when new changes are pushed. MkDocs makes this ridiculously simple.</p>"},{"location":"publishing-your-site/#github-pages","title":"GitHub Pages","text":"<p>If you're already hosting your code on GitHub, GitHub Pages is certainly the most convenient way to publish your project documentation. It's free of charge and pretty easy to set up.</p>"},{"location":"publishing-your-site/#with-github-actions","title":"with GitHub Actions","text":"<p>Using GitHub Actions you can automate the deployment of your project documentation. At the root of your repository, create a new GitHub Actions workflow, e.g. <code>.github/workflows/ci.yml</code>, and copy and paste the following contents:</p> Material for MkDocsInsiders <pre><code>name: ci # (1)!\non:\n  push:\n    branches:\n      - master # (2)!\n      - main\npermissions:\n  contents: write\njobs:\n  deploy:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v4\n      - name: Configure Git Credentials\n        run: |\n          git config user.name github-actions[bot]\n          git config user.email 41898282+github-actions[bot]@users.noreply.github.com\n      - uses: actions/setup-python@v5\n        with:\n          python-version: 3.x\n      - run: echo \"cache_id=$(date --utc '+%V')\" &gt;&gt; $GITHUB_ENV # (3)!\n      - uses: actions/cache@v4\n        with:\n          key: mkdocs-material-${{ env.cache_id }}\n          path: .cache # (4)!\n          restore-keys: |\n            mkdocs-material-\n      - run: pip install mkdocs-material # (5)!\n      - run: mkdocs gh-deploy --force\n</code></pre> <ol> <li> <p>You can change the name to your liking.</p> </li> <li> <p>At some point, GitHub renamed <code>master</code> to <code>main</code>. If your default branch     is named <code>master</code>, you can safely remove <code>main</code>, vice versa.</p> </li> <li> <p>Store the <code>cache_id</code> environmental variable to access it later during cache     <code>key</code> creation. The name is case-sensitive, so be sure to align it with <code>${{ env.cache_id }}</code>.</p> <ul> <li>The <code>--utc</code> option makes sure that each workflow runner uses the same time zone.</li> <li>The <code>%V</code> format assures a cache update once a week.</li> <li>You can change the format to <code>%F</code> to have daily cache updates.</li> </ul> <p>You can read the manual page to learn more about the formatting options of the <code>date</code> command.</p> </li> <li> <p>Some Material for MkDocs plugins use caching to speed up repeated     builds, and store the results in the <code>.cache</code> directory.</p> </li> <li> <p>This is the place to install further MkDocs plugins or Markdown     extensions with <code>pip</code> to be used during the build:</p> <pre><code>pip install \\\n  mkdocs-material \\\n  mkdocs-awesome-pages-plugin \\\n  ...\n</code></pre> </li> </ol> <pre><code>name: ci\non:\n  push:\n    branches:\n      - master\n      - main\npermissions:\n  contents: write\njobs:\n  deploy:\n    runs-on: ubuntu-latest\n    if: github.event.repository.fork == false\n    steps:\n      - uses: actions/checkout@v4\n      - name: Configure Git Credentials\n        run: |\n          git config user.name github-actions[bot]\n          git config user.email 41898282+github-actions[bot]@users.noreply.github.com\n      - uses: actions/setup-python@v5\n        with:\n          python-version: 3.x\n      - run: echo \"cache_id=$(date --utc '+%V')\" &gt;&gt; $GITHUB_ENV\n      - uses: actions/cache@v4\n        with:\n          key: mkdocs-material-${{ env.cache_id }}\n          path: .cache # (1)!\n          restore-keys: |\n            mkdocs-material-\n      - run: apt-get install pngquant # (2)!\n      - run: pip install git+https://${GH_TOKEN}@github.com/squidfunk/mkdocs-material-insiders.git\n      - run: mkdocs gh-deploy --force\nenv:\n  GH_TOKEN: ${{ secrets.GH_TOKEN }} # (3)!\n</code></pre> <ol> <li> <p>Some Material for MkDocs plugins use caching to speed up repeated     builds, and store the results in the <code>.cache</code> directory.</p> </li> <li> <p>This step is only necessary if you want to use the     built-in optimize plugin to automatically compress images.</p> </li> <li> <p>Remember to set the <code>GH_TOKEN</code> repository secret to the value of your     personal access token when deploying Insiders, which can be done     using GitHub secrets.</p> </li> </ol> <p>Now, when a new commit is pushed to either the <code>master</code> or <code>main</code> branches, the static site is automatically built and deployed. Push your changes to see the workflow in action.</p> <p>If the GitHub Page doesn't show up after a few minutes, go to the settings of your repository and ensure that the publishing source branch for your GitHub Page is set to <code>gh-pages</code>.</p> <p>Your documentation should shortly appear at <code>&lt;username&gt;.github.io/&lt;repository&gt;</code>.</p>"},{"location":"publishing-your-site/#with-mkdocs","title":"with MkDocs","text":"<p>If you prefer to deploy your project documentation manually, you can just invoke the following command from the directory containing the <code>mkdocs.yml</code> file:</p> <pre><code>mkdocs gh-deploy --force\n</code></pre> <p>This will build your documentation and deploy it to a branch <code>gh-pages</code> in your repository. See this overview in the MkDocs documentation for more information. For a description of the arguments, see the documentation for the command.</p>"},{"location":"publishing-your-site/#gitlab-pages","title":"GitLab Pages","text":"<p>If you're hosting your code on GitLab, deploying to GitLab Pages can be done by using the GitLab CI task runner. At the root of your repository, create a task definition named <code>.gitlab-ci.yml</code> and copy and paste the following contents:</p> Material for MkDocsInsiders <pre><code>pages:\n  stage: deploy\n  image: python:latest\n  script:\n    - pip install mkdocs-material\n    - mkdocs build --site-dir public\n  artifacts:\n    paths:\n      - public\n  rules:\n    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'\n</code></pre> <pre><code>pages:\n  stage: deploy\n  image: python:latest\n  script: # (1)!\n    - pip install git+https://${GH_TOKEN}@github.com/squidfunk/mkdocs-material-insiders.git\n    - mkdocs build --site-dir public\n  artifacts:\n    paths:\n      - public\n  rules:\n    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'\n</code></pre> <ol> <li>Remember to set the <code>GH_TOKEN</code> repository secret to the value of your     personal access token when deploying Insiders, which can be done     using masked custom variables.</li> </ol> <p>Now, when a new commit is pushed to the default branch (typically <code>master</code> or <code>main</code>), the static site is automatically built and deployed. Commit and push the file to your repository to see the workflow in action.</p> <p>Your documentation is not published under <code>&lt;username&gt;.gitlab.io/&lt;repository&gt;</code> by default since GitLab 17.4 <sup>1</sup>. However, if you prefer a cleaner URL structure, such as <code>&lt;username&gt;.gitlab.io/&lt;repository&gt;</code>, you need to adjust your configuration.</p> <p>To switch from a unique domain to the traditional URL structure, follow these steps:</p> <ol> <li>Locate Your Repository</li> <li>Go to Settings \u203a Pages in the repository menu.</li> <li>In the Unique domain settings section, uncheck the box labeled</li> <li>Use unique domain.</li> <li>Click Save changes to apply the update.</li> </ol> <p>Now you can reach your documentation under <code>&lt;username&gt;.gitlab.io/&lt;repository&gt;</code>.</p>"},{"location":"publishing-your-site/#other","title":"Other","text":"<p>Since we can't cover all possible platforms, we rely on community contributed guides that explain how to deploy websites built with Material for MkDocs to other providers:</p> <ul> <li> Cloudflare Pages</li> <li> DigitalOcean</li> <li> Fly.io</li> <li> Netlify</li> <li> Vercel</li> <li> Scaleway</li> </ul> <ol> <li> <p>Release notes for Gitlab 17.4 \u21a9</p> </li> </ol>"},{"location":"support/","title":"Support","text":"<p>At the heart of Material for MkDocs is an open and supportive community dedicated to freely sharing knowledge and insights. We strive to offer support to this community, balancing our development efforts with the need to address community questions effectively.</p> <p>In order to streamline communication and direct you to the most appropriate support channel, we've outlined our support structure below.</p>"},{"location":"support/#sponsoring-support","title":"Sponsoring support","text":"<p>If you have questions about Insiders or are considering becoming a sponsor, @katharinalisalin is here to help. She handles all non-technical sponsorship-related inquiries and is happy to provide the guidance you need. Feel free to contact her at sponsors@squidfunk.com.</p>"},{"location":"support/#technical-support","title":"Technical support","text":"<p>We are committed to providing technical support, ensuring all interactions remain transparent and accessible. Our primary channels for technical inquiries, therefore, are our discussion board and our issue tracker which are open to the entire community.</p>"},{"location":"support/#discussion-board","title":"Discussion board","text":"<p>Our discussion board serves as the primary point of contact for technical discussions, supported by both our community and our Community Experts. We encourage searching the board for existing answers before posting new questions.</p> <p>Direct support, particularly for core feature-related queries, is actively provided here, whereas customization tips are often sourced from and shared by our amazing community.</p>"},{"location":"support/#issue-tracker","title":"Issue Tracker","text":"<p>For reporting bugs or submitting change requests, our issue tracker offers a transparent platform for community contributions. We encourage reporting bugs found in the Insiders edition and in the community edition with the help of our contributing guides through the public issue tracker, mindful of not disclosing the private Insiders' source code in line with our fair use policy.</p> <p>This transparent approach ensures that solutions can benefit the entire community and feature requests can get upvoted by the community which will affect the speed of its development.</p>"},{"location":"support/#prioritized-support","title":"Prioritized support","text":"<p>Organizational sponsors at \"The Organization\" tier or higher are entitled to prioritized bug support. While we cannot guarantee immediate resolution, as some problems are harder to fix than others, it ensures that your issues are addressed with urgency.</p>"},{"location":"upgrade/","title":"How to upgrade","text":"<p>Upgrade to the latest version with:</p> <pre><code>pip install --upgrade --force-reinstall mkdocs-material\n</code></pre> <p>Show the currently installed version with:</p> <pre><code>pip show mkdocs-material\n</code></pre>"},{"location":"upgrade/#upgrading-from-8x-to-9x","title":"Upgrading from 8.x to 9.x","text":"<p>This major release includes a brand new search implementation that is faster and allows for rich previews, advanced tokenization and better highlighting. It was available as part of Insiders for over a year, and now that the funding goal was hit, makes its way into the community edition.</p>"},{"location":"upgrade/#changes-to-mkdocsyml","title":"Changes to <code>mkdocs.yml</code>","text":""},{"location":"upgrade/#contentcodecopy","title":"<code>content.code.copy</code>","text":"<p>The copy-to-clipboard buttons are now opt-in and can be enabled or disabled per block. If you wish to enable them for all code blocks, add the following lines to <code>mkdocs.yml</code>:</p> <pre><code>theme:\n  features:\n    - content.code.copy\n</code></pre>"},{"location":"upgrade/#contentaction","title":"<code>content.action.*</code>","text":"<p>A \"view source\" button can be shown next to the \"edit this page\" button, both of which must now be explicitly enabled. Add the following lines to <code>mkdocs.yml</code>:</p> <pre><code>theme:\n  features:\n    - content.action.edit\n    - content.action.view\n</code></pre>"},{"location":"upgrade/#navigationfooter","title":"<code>navigation.footer</code>","text":"<p>The previous and next buttons in the footer are now opt-in. If you wish to keep them for your documentation, add the following lines to <code>mkdocs.yml</code>:</p> <pre><code>theme:\n  features:\n    - navigation.footer\n</code></pre>"},{"location":"upgrade/#themelanguage","title":"<code>theme.language</code>","text":"<p>The Korean and Norwegian language codes were renamed, as they were non-standard:</p> <ul> <li><code>kr</code> to <code>ko</code></li> <li><code>no</code> to <code>nb</code></li> </ul>"},{"location":"upgrade/#feedbackratings","title":"<code>feedback.ratings</code>","text":"<p>The old, nameless placeholders were removed (after being deprecated for several months). Make sure to switch to the new named placeholders <code>{title}</code> and <code>{url}</code>:</p> <pre><code>https://github.com/.../issues/new/?title=[Feedback]+{title}+-+{url}\n</code></pre>"},{"location":"upgrade/#changes-to-html-files","title":"Changes to <code>*.html</code> files","text":"<p>The templates have undergone a series of changes. If you have customized Material for MkDocs with theme extension, be sure to incorporate the latest changes into your templates. A good starting point is to inspect the diff.</p> <p>Built-in plugins not working after upgrade?</p> <p>If one of the built-in plugins (search or tags) doesn't work anymore without any apparent error or cause, it is very likely related to custom overrides. MkDocs 1.4.1 and above allow themes to namespace built-in plugins, which Material for MkDocs 9 now does in order to allow authors to use third-party plugins with the same name as built-in plugins. Search your overrides for <code>\"in config.plugins\"</code> and add the <code>material/</code> namespace. Affected partials:</p> <ul> <li><code>content.html</code></li> <li><code>header.html</code></li> </ul>"},{"location":"upgrade/#upgrading-from-7x-to-8x","title":"Upgrading from 7.x to 8.x","text":""},{"location":"upgrade/#whats-new","title":"What's new?","text":"<ul> <li>Added support for code annotations</li> <li>Added support for anchor tracking</li> <li>Added support for version warning</li> <li>Added <code>copyright</code> partial for easier override</li> <li>Removed deprecated content tabs legacy implementation</li> <li>Removed deprecated <code>seealso</code> admonition type</li> <li>Removed deprecated <code>site_keywords</code> setting (unsupported by MkDocs)</li> <li>Removed deprecated prebuilt search index support</li> <li>Removed deprecated web app manifest \u2013 use customization</li> <li>Removed <code>extracopyright</code> variable \u2013 use new <code>copyright</code> partial</li> <li>Removed Disqus integration \u2013 use customization</li> <li>Switched to <code>:is()</code> selectors for simple selector lists</li> <li>Switched autoprefixer from <code>last 4 years</code> to <code>last 2 years</code></li> <li>Improved CSS overall to match modern standards</li> <li>Improved CSS variable semantics for fonts</li> <li>Improved extensibility by restructuring partials</li> <li>Improved handling of <code>details</code> when printing</li> <li>Improved keyboard navigation for footnotes</li> <li>Fixed #3214: Search highlighting breaks site when empty</li> </ul>"},{"location":"upgrade/#changes-to-mkdocsyml_1","title":"Changes to <code>mkdocs.yml</code>","text":""},{"location":"upgrade/#pymdownxtabbed","title":"<code>pymdownx.tabbed</code>","text":"<p>Support for the legacy style of the Tabbed extension was dropped in favor of the new, alternate implementation which has better behavior on mobile viewports:</p> 8.x7.x <pre><code>markdown_extensions:\n  - pymdownx.tabbed:\n      alternate_style: true\n</code></pre> <pre><code>markdown_extensions:\n  - pymdownx.tabbed\n</code></pre>"},{"location":"upgrade/#pymdownxsuperfences","title":"<code>pymdownx.superfences</code>","text":"<p>The <code>*-experimental</code> suffix must be removed from the custom fence class property, which is used to target code blocks to be rendered as diagrams using Mermaid.js:</p> 8.x7.x <pre><code>markdown_extensions:\n  - pymdownx.superfences:\n      custom_fences:\n        - name: mermaid\n          class: mermaid\n          format: !!python/name:pymdownx.superfences.fence_code_format\n</code></pre> <pre><code>markdown_extensions:\n  - pymdownx.superfences:\n      custom_fences:\n        - name: mermaid\n          class: mermaid-experimental\n          format: !!python/name:pymdownx.superfences.fence_code_format\n</code></pre>"},{"location":"upgrade/#google_analytics","title":"<code>google_analytics</code>","text":"<p>This option was deprecated in MkDocs 1.2.0, as the implementation of a JavaScript-based analytics integration is the responsibility of a theme. The following lines must be changed:</p> 8.x7.x <pre><code>extra:\n  analytics:\n    provider: google\n    property: UA-XXXXXXXX-X\n</code></pre> <pre><code>google_analytics:\n  - UA-XXXXXXXX-X\n  - auto\n</code></pre>"},{"location":"upgrade/#upgrading-from-6x-to-7x","title":"Upgrading from 6.x to 7.x","text":""},{"location":"upgrade/#whats-new_1","title":"What's new?","text":"<ul> <li>Added support for deploying multiple versions</li> <li>Added support for integrating a language selector</li> <li>Added support for rendering admonitions as inline blocks</li> <li>Rewrite of the underlying reactive architecture</li> <li>Removed Webpack in favor of reactive build strategy (\u2013480 dependencies)</li> <li>Fixed keyboard navigation for code blocks after content tabs switch</li> </ul>"},{"location":"upgrade/#changes-to-mkdocsyml_2","title":"Changes to <code>mkdocs.yml</code>","text":""},{"location":"upgrade/#extraversionmethod","title":"<code>extra.version.method</code>","text":"<p>The versioning method configuration was renamed to <code>extra.version.provider</code> to allow for different versioning strategies in the future:</p> 7.x6.x <pre><code>extra:\n  version:\n    provider: mike\n</code></pre> <pre><code>extra:\n  version:\n    method: mike\n</code></pre>"},{"location":"upgrade/#upgrading-from-5x-to-6x","title":"Upgrading from 5.x to 6.x","text":""},{"location":"upgrade/#whats-new_2","title":"What's new?","text":"<ul> <li>Improved search result look and feel</li> <li>Improved search result stability while typing</li> <li>Improved search result grouping (pages + headings)</li> <li>Improved search result relevance and scoring</li> <li>Added display of missing query terms to search results</li> <li>Reduced size of vendor bundle by 25% (84kb \u2192 67kb)</li> <li>Reduced size of the Docker image to improve CI build performance</li> <li>Removed hero partial in favor of custom implementation</li> <li>Removed deprecated front matter features</li> </ul>"},{"location":"upgrade/#changes-to-mkdocsyml_3","title":"Changes to <code>mkdocs.yml</code>","text":"<p>Following is a list of changes that need to be made to <code>mkdocs.yml</code>. Note that you only have to adjust the value if you defined it, so if your configuration does not contain the key, you can skip it.</p>"},{"location":"upgrade/#themefeatures","title":"<code>theme.features</code>","text":"<p>All feature flags that can be set from <code>mkdocs.yml</code>, like tabs and instant loading, are now prefixed with the name of the component or function they apply to, e.g. <code>navigation.*</code>:</p> 6.x5.x <pre><code>theme:\n  features:\n    - navigation.tabs\n    - navigation.instant\n</code></pre> <pre><code>theme:\n  features:\n    - tabs\n    - instant\n</code></pre>"},{"location":"upgrade/#upgrading-from-4x-to-5x","title":"Upgrading from 4.x to 5.x","text":""},{"location":"upgrade/#whats-new_3","title":"What's new?","text":"<ul> <li>Reactive architecture \u2013 try <code>app.dialog$.next(\"Hi!\")</code> in the console</li> <li>Instant loading \u2013 make Material behave like a Single Page Application</li> <li>Improved CSS customization with CSS variables \u2013 set your brand's colors</li> <li>Improved CSS resilience, e.g. proper sidebar locking for customized headers</li> <li>Improved icon integration and configuration \u2013 now including over 5k icons</li> <li>Added possibility to use any icon for logo, repository and social links</li> <li>Search UI does not freeze anymore (moved to web worker)</li> <li>Search index built only once when using instant loading</li> <li>Improved extensible keyboard handling</li> <li>Support for prebuilt search indexes</li> <li>Support for displaying stars and forks for GitLab repositories</li> <li>Support for scroll snapping of sidebars and search results</li> <li>Reduced HTML and CSS footprint due to deprecation of Internet Explorer support</li> <li>Slight facelifting of some UI elements (admonitions, tables, ...)</li> </ul>"},{"location":"upgrade/#changes-to-mkdocsyml_4","title":"Changes to <code>mkdocs.yml</code>","text":"<p>Following is a list of changes that need to be made to <code>mkdocs.yml</code>. Note that you only have to adjust the value if you defined it, so if your configuration does not contain the key, you can skip it.</p>"},{"location":"upgrade/#themefeature","title":"<code>theme.feature</code>","text":"<p>Optional features like tabs and instant loading are now implemented as flags and can be enabled by listing them in <code>mkdocs.yml</code> under <code>theme.features</code>:</p> 5.x4.x <pre><code>theme:\n  features:\n    - tabs\n    - instant\n</code></pre> <pre><code>theme:\n  feature:\n    tabs: true\n</code></pre>"},{"location":"upgrade/#themelogoicon","title":"<code>theme.logo.icon</code>","text":"<p>The logo icon configuration was centralized under <code>theme.icon.logo</code> and can now be set to any of the icons bundled with the theme:</p> 5.x4.x <pre><code>theme:\n  icon:\n    logo: material/cloud\n</code></pre> <pre><code>theme:\n  logo:\n    icon: cloud\n</code></pre>"},{"location":"upgrade/#extrarepo_icon","title":"<code>extra.repo_icon</code>","text":"<p>The repo icon configuration was centralized under <code>theme.icon.repo</code> and can now be set to any of the icons bundled with the theme:</p> 5.x4.x <pre><code>theme:\n  icon:\n    repo: fontawesome/brands/gitlab\n</code></pre> <pre><code>extra:\n  repo_icon: gitlab\n</code></pre>"},{"location":"upgrade/#extrasearch","title":"<code>extra.search.*</code>","text":"<p>Search is now configured as part of the plugin options. Note that the search languages must now be listed as an array of strings and the <code>tokenizer</code> was renamed to <code>separator</code>:</p> 5.x4.x <pre><code>plugins:\n  - search:\n      separator: '[\\s\\-\\.]+'\n      lang:\n        - en\n        - de\n        - ru\n</code></pre> <pre><code>extra:\n  search:\n    language: en, de, ru\n    tokenizer: '[\\s\\-\\.]+'\n</code></pre>"},{"location":"upgrade/#extrasocial","title":"<code>extra.social.*</code>","text":"<p>Social links stayed in the same place, but the <code>type</code> key was renamed to <code>icon</code> in order to match the new way of specifying which icon to be used:</p> 5.x4.x <pre><code>extra:\n  social:\n    - icon: fontawesome/brands/github-alt\n      link: https://github.com/squidfunk\n</code></pre> <pre><code>extra:\n  social:\n    - type: github\n      link: https://github.com/squidfunk\n</code></pre>"},{"location":"upgrade/#upgrading-from-3x-to-4x","title":"Upgrading from 3.x to 4.x","text":""},{"location":"upgrade/#whats-new_4","title":"What's new?","text":"<p>Material for MkDocs 4 fixes incorrect layout on Chinese systems. The fix includes a mandatory change of the base font-size from <code>10px</code> to <code>20px</code> which means all <code>rem</code> values needed to be updated. Within the theme, <code>px</code> to <code>rem</code> calculation is now encapsulated in a new function called <code>px2rem</code> which is part of the SASS code base.</p> <p>If you use Material for MkDocs with custom CSS that is based on <code>rem</code> values, note that those values must now be divided by 2. Now, <code>1.0rem</code> doesn't map to <code>10px</code>, but <code>20px</code>. To learn more about the problem and implications, please refer to #911 in which the problem was discovered and fixed.</p>"},{"location":"upgrade/#changes-to-mkdocsyml_5","title":"Changes to <code>mkdocs.yml</code>","text":"<p>None.</p>"},{"location":"upgrade/#changes-to-html-files_5","title":"Changes to <code>*.html</code> files","text":"<p>None.</p>"},{"location":"authors/","title":"Ukrainian Science Fiction Writers and Their Evolution","text":"<p>Ukrainian science fiction (SF) has undergone significant transformations over the past century, influenced by shifting political ideologies, technological advancements, and cultural movements. The early 20<sup>th</sup> century saw the emergence of Sandro Kasyanyuk, an industrial worker-turned-writer who pioneered Ukrainian proto-science fiction with his cycle Omachynennia Liudstva (The Mechanization of Humanity). His works reflected a na\u00efve socialist utopianism, glorifying machines and portraying humans as mere operators of technology in the socialist future.</p> <p>The 1920s and 1930s were marked by communist propaganda-driven SF, with works like Volodymyr Vladko\u2019s Iron Rebellion and Aero-torpedos Turn Back, which promoted Soviet superiority and global communist revolution. Dmytro Buzko's Crystal Paradise depicted a utopian USSR built through scientific progress. However, the era also saw the tragic fate of Geo Shkurupii, a futurist writer executed during Stalinist purges.</p> <p>By the 1940s and 1950s, Ukrainian SF transitioned into \"short-sighted fiction\", where novels like Mykola Trublaini's The Deep Path and Vasyl Berezhny\u2019s To the Starry Worlds focused on technological advancements within the framework of Soviet ideology, often portraying the West as an antagonist.</p> <p>The 1960s introduced a new wave of Ukrainian SF, moving away from strict positivism towards mysticism and cosmic philosophy. Oles Berdnyk, a dissident and visionary writer, became known as a \"hippie-cosmist,\" blending science fiction with spiritual and nationalist elements. His novel The Star Corsair explored Ukrainian identity in the cosmic future, presenting an alternative to communist materialism.</p> <p>Ukrainian SF writers have consistently reflected the political and ideological struggles of their time, from industrial utopianism to dystopian critiques of totalitarianism. Their legacy remains a fascinating study of how literature can both serve ideology and challenge it.</p>"},{"location":"authors/berezhny/","title":"Vasyl Pavlovych Berezhnyi","text":""},{"location":"authors/berezhny/#biography","title":"Biography","text":"<p>Vasyl Pavlovych Berezhnyi (June 26, 1918 \u2013 March 19, 1988) was a Ukrainian writer, journalist, and translator, best known for his contributions to science fiction literature. His works were widely published and translated into multiple languages, earning him recognition both in Ukraine and abroad.</p>"},{"location":"authors/berezhny/#early-life-and-education","title":"Early Life and Education","text":"<p>Born in the village of Bakhmach, Chernihiv Oblast, into a peasant family, Berezhnyi showed an early interest in literature and journalism. After completing his general education, he enrolled in the Ukrainian Technical School of Journalism in Kharkiv, graduating in 1937. During his time in Kharkiv, he visited an observatory, an experience that left a profound impression on him and inspired his first science fiction story, \"The Planet Will Live\" (\u041f\u043b\u0430\u043d\u0435\u0442\u0430 \u0436\u0438\u0442\u0438\u043c\u0435), published in 1938.</p>"},{"location":"authors/berezhny/#journalism-and-wartime-experience","title":"Journalism and Wartime Experience","text":"<p>After completing his studies, Berezhnyi worked as a journalist for the newspapers \"Prapor Komuny\" (\u041f\u0440\u0430\u043f\u043e\u0440 \u043a\u043e\u043c\u0443\u043d\u0438) in Bakhmach and \"Molodyi Komunar\" (\u041c\u043e\u043b\u043e\u0434\u0438\u0439 \u043a\u043e\u043c\u0443\u043d\u0430\u0440) in Chernihiv. His career was interrupted by World War II, during which he served in the tank forces of the Soviet Army. He fought in the battles of Grodno and Baranovichi, later retreating through Vyazma, where he was severely wounded. Returning to the battlefield in 1943, he served on the First Belarusian Front and was awarded multiple military honors.</p>"},{"location":"authors/berezhny/#postwar-literary-career","title":"Postwar Literary Career","text":"<p>After the war, Berezhnyi resumed his work as a journalist in Kyiv, contributing to newspapers such as \"Molod Ukrainy\" (\u041c\u043e\u043b\u043e\u0434\u044c \u0423\u043a\u0440\u0430\u0457\u043d\u0438), and magazines including \"Dnipro\" (\u0414\u043d\u0456\u043f\u0440\u043e), \"Vitchyzna\" (\u0412\u0456\u0442\u0447\u0438\u0437\u043d\u0430), and \"Ukraina\" (\u0423\u043a\u0440\u0430\u0457\u043d\u0430). He also pursued higher education, graduating from Taras Shevchenko National University of Kyiv in 1952. During this period, he began writing essays, short stories, and literary critiques before transitioning to longer forms.</p>"},{"location":"authors/berezhny/#science-fiction-and-notable-works","title":"Science Fiction and Notable Works","text":"<p>Berezhnyi is best known for his contributions to Ukrainian science fiction. His first science fiction novel, \"To the Starry Worlds\" (\u0423 \u0437\u043e\u0440\u044f\u043d\u0456 \u0441\u0432\u0456\u0442\u0438), was published in 1956 with a print run of 65,000 copies, followed by a reprint of 100,000 copies in 1958. His works gained widespread popularity, and he became a leading figure in the genre.</p> <p>Berezhnyi published over fifteen science fiction novels and more than fifty short stories, many of which were compiled into ten collections. His works were translated into numerous languages, including English, Hungarian, Spanish, Latvian, Moldovan, Polish, Russian, Slovak, and French.</p>"},{"location":"authors/berezhny/#selected-works","title":"Selected Works","text":""},{"location":"authors/berezhny/#novels","title":"Novels","text":"<ul> <li>1956 \u2013 To the Starry Worlds (\u0423 \u0437\u043e\u0440\u044f\u043d\u0456 \u0441\u0432\u0456\u0442\u0438)</li> <li>1961 \u2013 The Blue Planet (\u0411\u043b\u0430\u043a\u0438\u0442\u043d\u0430 \u043f\u043b\u0430\u043d\u0435\u0442\u0430)</li> <li>1963 \u2013 Demyanko Derevyanko, or the Adventures of the Electronic Boy (\u0414\u0435\u043c\u2019\u044f\u043d\u043a\u043e \u0414\u0435\u0440\u0435\u0432\u2019\u044f\u043d\u043a\u043e, \u0430\u0431\u043e \u041f\u0440\u0438\u0433\u043e\u0434\u0438 \u0435\u043b\u0435\u043a\u0442\u0440\u043e\u043d\u043d\u043e\u0433\u043e \u0445\u043b\u043e\u043f\u0447\u0438\u043a\u0430)</li> <li>1965 \u2013 The Truth is Near (\u0406\u0441\u0442\u0438\u043d\u0430 \u043f\u043e\u0440\u0443\u0447)</li> <li>1970 \u2013 Archeoscript (\u0410\u0440\u0445\u0435\u043e\u0441\u043a\u0440\u0438\u043f\u0442)</li> <li>1971 \u2013 Under the Ice Shield (\u041f\u0456\u0434 \u043a\u0440\u0438\u0436\u0430\u043d\u0438\u043c \u0449\u0438\u0442\u043e\u043c)</li> <li>1971 \u2013 Sakura (\u0421\u0430\u043a\u0443\u0440\u0430)</li> <li>1975 \u2013 The Younger Brother of the Sun (\u041c\u043e\u043b\u043e\u0434\u0448\u0438\u0439 \u0431\u0440\u0430\u0442 \u0421\u043e\u043d\u0446\u044f)</li> <li>1978 \u2013 Cosmic Gulf Stream (\u041a\u043e\u0441\u043c\u0456\u0447\u043d\u0438\u0439 \u0413\u043e\u043b\u044c\u0444\u0441\u0442\u0440\u0456\u043c)</li> <li>1984 \u2013 Labyrinth (\u041b\u0430\u0431\u0456\u0440\u0438\u043d\u0442)</li> </ul>"},{"location":"authors/berezhny/#collections","title":"Collections","text":"<ul> <li>1960 \u2013 Oasis in the Ice (\u041e\u0430\u0437\u0430 \u0432 \u043b\u044c\u043e\u0434\u0430\u0445)</li> <li>1962 \u2013 In the Sky \u2013 Earth (\u0412 \u043d\u0435\u0431\u0456 \u2013 \u0417\u0435\u043c\u043b\u044f)</li> <li>1970 \u2013 In the Light of Two Suns (\u0423 \u043f\u0440\u043e\u043c\u0456\u043d\u043d\u0456 \u0434\u0432\u043e\u0445 \u0441\u043e\u043d\u0446\u044c)</li> <li>1971 \u2013 Under the Ice Shield (\u041f\u0456\u0434 \u043a\u0440\u0438\u0436\u0430\u043d\u0438\u043c \u0449\u0438\u0442\u043e\u043c)</li> <li>1975 \u2013 The Air Lens (\u041f\u043e\u0432\u0456\u0442\u0440\u044f\u043d\u0430 \u043b\u0456\u043d\u0437\u0430)</li> <li>1978 \u2013 Returning \"Galaxy\" (\u041f\u043e\u0432\u0435\u0440\u043d\u0435\u043d\u043d\u044f \u00ab\u0413\u0430\u043b\u0430\u043a\u0442\u0438\u043a\u0438\u00bb)</li> <li>1980 \u2013 Cosmic Gulf Stream (\u041a\u043e\u0441\u043c\u0456\u0447\u043d\u0438\u0439 \u0413\u043e\u043b\u044c\u0444\u0441\u0442\u0440\u0456\u043c)</li> <li>1984 \u2013 And a Whale Came to Us (\u0410 \u0434\u043e \u043d\u0430\u0441 \u043a\u0438\u0442 \u043f\u0440\u0438\u043f\u043b\u0438\u0432)</li> <li>1986 \u2013 Labyrinth (\u041b\u0430\u0431\u0456\u0440\u0438\u043d\u0442)</li> </ul>"},{"location":"authors/berezhny/#short-stories","title":"Short Stories","text":"<ul> <li>1938 \u2013 The Planet Will Live (\u041f\u043b\u0430\u043d\u0435\u0442\u0430 \u0436\u0438\u0442\u0438\u043c\u0435)</li> <li>1958 \u2013 What the Glass Eye Didn\u2019t See (\u0427\u043e\u0433\u043e \u043d\u0435 \u043f\u043e\u0431\u0430\u0447\u0438\u043b\u043e \u0441\u043a\u043b\u044f\u043d\u0435 \u043e\u043a\u043e)</li> <li>1959 \u2013 Returning \"Galaxy\" (\u041f\u043e\u0432\u0435\u0440\u043d\u0435\u043d\u043d\u044f \u00ab\u0413\u0430\u043b\u0430\u043a\u0442\u0438\u043a\u0438\u00bb)</li> <li>1960 \u2013 Oasis in the Ice (\u041e\u0430\u0437\u0430 \u0432 \u043b\u044c\u043e\u0434\u0430\u0445)</li> <li>1962 \u2013 The Mysterious Statue (\u0422\u0430\u0454\u043c\u043d\u0438\u0447\u0430 \u0441\u0442\u0430\u0442\u0443\u044f)</li> <li>1963 \u2013 The Last Flight of \"Buran\" (\u041e\u0441\u0442\u0430\u043d\u043d\u0456\u0439 \u0440\u0435\u0439\u0441 \u00ab\u0411\u0443\u0440\u0430\u043d\u0430\u00bb)</li> <li>1970 \u2013 The Ephemeris of Love (\u0415\u0444\u0435\u043c\u0435\u0440\u0438\u0434\u0430 \u043a\u043e\u0445\u0430\u043d\u043d\u044f)</li> <li>1971 \u2013 Cosmic Niagara (\u041a\u043e\u0441\u043c\u0456\u0447\u043d\u0430 \u041d\u0456\u0430\u0433\u0430\u0440\u0430)</li> <li>1971 \u2013 Contact of Civilizations (\u041a\u043e\u043d\u0442\u0430\u043a\u0442 \u0446\u0438\u0432\u0456\u043b\u0456\u0437\u0430\u0446\u0456\u0439)</li> <li>1975 \u2013 The Secret of the House of Eternity (\u0422\u0430\u0454\u043c\u043d\u0438\u0446\u044f \u0414\u043e\u043c\u0443 \u0432\u0456\u0447\u043d\u043e\u0441\u0442\u0456)</li> <li>1980 \u2013 Homo Novus (Homo Novus)</li> <li>1986 \u2013 The Pendulum Man (\u041b\u044e\u0434\u0438\u043d\u0430-\u043c\u0430\u044f\u0442\u043d\u0438\u043a)</li> <li>1986 \u2013 The Formula of the Cosmos (\u0424\u043e\u0440\u043c\u0443\u043b\u0430 \u041a\u043e\u0441\u043c\u043e\u0441\u0443)</li> </ul>"},{"location":"authors/berezhny/#translations-and-contributions","title":"Translations and Contributions","text":"<p>In addition to his original works, Berezhnyi translated Russian novels and plays into Ukrainian, including works by A. Koptyelov, M. Pogodin, and A. Sofronov. He also authored the literary portrait \"Oles Honchar\" in 1978.</p>"},{"location":"authors/berezhny/#international-recognition-and-legacy","title":"International Recognition and Legacy","text":"<p>Berezhnyi was an active participant in international science fiction events, including:</p> <ul> <li>1970 \u2013 First World Symposium of Science Fiction Writers in Tokyo, Japan, as part of EXPO-70</li> <li>1976 \u2013 Third European Congress of Science Fiction Writers in Poland</li> </ul> <p>His contributions to science fiction literature influenced an entire generation of Ukrainian readers and writers. In recognition of his legacy, a street in Bakhmach, Chernihiv Oblast, was named after him in 2015.</p>"},{"location":"authors/berezhny/#personal-life","title":"Personal Life","text":"<p>Berezhnyi lived in Kyiv for most of his life. He was married to Liubov Florianivna Berezhna, a doctor. They had two children: Andriy Vasylovych Berezhnyi and Oksana Vasylivna Berezhna. His grandchildren include Vasyl Andriyovych Berezhnyi, Olha Andriivna Berezhna, and Yuliia Andriivna Berezhna.</p>"},{"location":"authors/berezhny/#death","title":"Death","text":"<p>Vasyl Berezhnyi passed away on March 19, 1988, in Kyiv, leaving behind a lasting literary legacy in Ukrainian science fiction.</p>"},{"location":"authors/kasyanyuk/","title":"Sandro Kasyanyuk","text":""},{"location":"authors/kasyanyuk/#sandro-kasyanyuk-ukrainian-soviet-writer-and-pioneer-of-proto-science-fiction","title":"Sandro Kasyanyuk \u2013 Ukrainian Soviet Writer and Pioneer of Proto-Science Fiction","text":"<p>Biographical Overview</p> <p>Sandro Kasyanyuk (presumably Alexander Kasyanyuk) was a Ukrainian Soviet writer of the 1920s, known for his early contributions to Ukrainian proto-science fiction. Little is known about his birth date, place of origin, or personal background. He was not a professional writer; instead, he worked as a factory worker at the \"Elektrosila\" plant in Kharkiv. Despite this, his literary works were highly regarded by contemporary critics, and he was associated with the Ukrainian proletarian literary organization \"Hart.\"</p> <p>Kasyanyuk's most notable work is the cycle of science fiction stories titled \"Omachynennia Liudstva\" (\"The Mechanization of Humanity\"), considered the first example of Ukrainian proto-science fiction.</p>"},{"location":"authors/kasyanyuk/#literary-contributions-and-influence","title":"Literary Contributions and Influence","text":"<p>Though he did not pursue literature professionally, Kasyanyuk's works were recognized by literary critics of his time. The prominent Ukrainian literary scholar Oleksandr Biletsky believed that Kasyanyuk could have become \"the Ukrainian H.G. Wells with a proletarian ideology.\" Another critic, Volodymyr Koriak, also appreciated Kasyanyuk\u2019s works, considering them unique and thought-provoking. His writings have been analyzed by Vasyl Pivtoraadni (\"Ukrainian Literature of the Early Revolutionary Years (1917\u20131923),\" 1968) and Volodymyr (Walter) Smyrniw (\"Ukrainian Science Fiction: A Historical and Thematic Review,\" 2013).</p> <p>Kasyanyuk's stories celebrated machines and technology, reflecting a na\u00efve socialist utopianism. In his vision of the future, machines were almost living beings, majestic creations of the new world built by humanity. His characters believed in a better life under socialism, with aspirations to become engineers, machinists, or mechanics to serve society.</p> <p>His works parallel the prose poetry of Aleksei Gastev, a key ideologist of the Proletkult movement, who viewed industrialization and mechanization as pathways to human progress.</p>"},{"location":"authors/kasyanyuk/#science-fiction-and-utopian-themes","title":"Science Fiction and Utopian Themes","text":"<p>Kasyanyuk\u2019s short story \"Nova Utopiya\" (\"A New Utopia\") is regarded as one of the earliest examples of Ukrainian proto-science fiction, if not the first Ukrainian science fiction work. According to literary researcher Yaryna Tsymbal, the entire \"Omachynennia Liudstva\" cycle represents Ukrainian proto-science fiction.</p> <p>In \"Nova Utopiya\", the protagonist is transported through imagination into the Era of Machines, a distant future where technology has been seamlessly integrated into everyday communist life. On a massive ship that serves as a floating island, a traveler from the past witnesses the wonders of mechanization in a society where routine labor has been fully automated. Kasyanyuk\u2019s vision portrays the future human as a master of nature and a conqueror of elemental forces, with his characters embracing mechanized labor over mundane, repetitive tasks.</p>"},{"location":"authors/kasyanyuk/#bibliography","title":"Bibliography","text":"<ul> <li>1922 \u2013 \"Kroky Pershi\" (\"First Steps\") \u2013 published in Shliakhy Mystetstva literary journal, Issue No. 1(3)</li> <li>1922 \u2013 \"Nova Utopiya\" (\"A New Utopia\") \u2013 published in Shliakhy Mystetstva literary journal, Issue No. 2(4)</li> <li>1923 \u2013 \"Zatoky Zhyttia\" (\"The Bays of Life\") \u2013 a play, published separately by \"Hart\" publishing house in Kharkiv</li> <li>1925 \u2013 \"Mashynove Vesillia\" (\"The Mechanical Wedding\") \u2013 published in Kultura i Pobut newspaper, Issue No. 12</li> <li>1927 \u2013 \"Hai ta Radio\" (\"The Groves and Radio\") \u2013 published in Kultura i Pobut newspaper, Issue No. 7</li> </ul> <p>His play \"Zatoky Zhyttia\" (\"The Bays of Life\") was published separately with the help of Valerian Polishchuk, a key figure of the \"Executed Renaissance\", a generation of Ukrainian writers repressed by the Soviet regime.</p>"},{"location":"authors/kasyanyuk/#legacy-and-recognition","title":"Legacy and Recognition","text":"<p>Although Kasyanyuk's exact date of death remains unknown, it is confirmed that he lived beyond 1927. His idealistic portrayals of a mechanized future, infused with socialist optimism, positioned him as one of the earliest pioneers of Ukrainian science fiction.</p> <p>His works capture the spirit of early Soviet utopianism, where the relationship between humans and machines was envisioned as a harmonious, transformative force for a socialist society. Despite being a factory worker rather than a full-time writer, Kasianyuk left a lasting impact on Ukrainian speculative fiction, earning recognition from both his contemporaries and modern literary scholars.</p>"},{"location":"authors/polozhiy/","title":"Viktor Ivanovych Polozhiy","text":"<p>Birth: August 11, 1949, Staroziniv, Bilopillia Raion, Sumy Oblast, Ukrainian SSR Death: May 21, 2004, Ukraine Occupation: Writer, literary critic, editor, educator Languages: Ukrainian, Russian Notable Works: Ashes on Wounds, The Sunny Wind, The City That Never Was, Eternal City Affiliations: Member of the Union of Soviet Writers, Member of the Union of Ukrainian Writers  </p>"},{"location":"authors/polozhiy/#biography","title":"Biography","text":""},{"location":"authors/polozhiy/#early-life-and-education","title":"Early Life and Education","text":"<p>Viktor Polozhiy was born in Staroziniv, Bilopillia Raion, Sumy Oblast, and completed his education at the Ternivka Secondary School. He pursued higher studies at the Philology Faculty of Taras Shevchenko National University of Kyiv. </p> <p>After university, Polozhiy worked as a teacher and later as a school director in Vysochne, Ratne Raion, Volyn Oblast. In 1983, he completed postgraduate studies at the Institute of Literature of the Academy of Sciences of the Ukrainian SSR, where he later worked as a researcher. His doctoral dissertation focused on the works of Yuri Bondarev and was later published as a monograph.</p>"},{"location":"authors/polozhiy/#literary-career","title":"Literary Career","text":"<p>Polozhiy debuted in science fiction with his short story Something is Wrong... (1980). He soon gained recognition with the publication of the novel Ashes on Wounds (1981) and the collection of novellas Little Journeys.</p> <p>He became known for his masculine, rigorous narrative style, as seen in works like Ashes on Wounds, A Vacation with Family Visits, Stratification, The Ball, and Once Upon a Time There Was Ivan. His writing was highly acclaimed in Moscow, earning multiple literary awards, and was translated into English, Spanish, Bulgarian, and Slovak.</p> <p>Apart from fiction, he was a prominent literary critic and served as an editor: - Editor of the prose department in the journal Kyiv - Chief editor of the Dovzhenko Film Studio (from 1985) - Editor of the film association \"Zemlya\" </p> <p>He was also the compiler of science fiction anthologies, including Adventures, Travels, and Science Fiction-80 (\u041f\u041f\u0424-80) and PFF-84, and a reviewer for PFF-86. His novella Once Upon a Time There Was Ivan gained significant literary attention.</p>"},{"location":"authors/polozhiy/#illness-and-death","title":"Illness and Death","text":"<p>Polozhiy suffered from a severe heart condition, and doctors suggested waiting for a transplant. However, he passed away on May 21, 2004, at the age of 54. He was laid to rest next to his father, Ivan Mykolayovych Polozhiy, at the village cemetery in Yasnohorodka, Makariv Raion, Kyiv Oblast.</p>"},{"location":"authors/polozhiy/#literary-works","title":"Literary Works","text":""},{"location":"authors/polozhiy/#novel","title":"Novel","text":"<ul> <li>1981 \u2013 \u041f\u043e\u043f\u0456\u043b \u043d\u0430 \u0440\u0430\u043d\u0438 (Ashes on Wounds)  </li> </ul>"},{"location":"authors/polozhiy/#novellas","title":"Novellas","text":"<ul> <li>1980 \u2013 \u0429\u043e\u0441\u044c \u043d\u0435\u0433\u0430\u0440\u0430\u0437\u0434 (Something is Wrong...)  </li> <li>1982 \u2013 \u0412\u0456\u0434\u043f\u0443\u0441\u0442\u043a\u0430 \u0437 \u0432\u0456\u0434\u0432\u0456\u0434\u0438\u043d\u0430\u043c\u0438 \u0431\u043b\u0438\u0437\u044c\u043a\u0438\u0445 (A Vacation with Family Visits)  </li> <li>1982 \u2013 \u0416\u0438\u0432-\u0431\u0443\u0432 \u0406\u0432\u0430\u043d (Once Upon a Time There Was Ivan)  </li> <li>1982 \u2013 \u041c'\u044f\u0447 (The Ball)  </li> <li>1982 \u2013 \u041f\u043e\u0434\u043e\u0440\u043e\u0436\u0456 \u0437 \u043c\u0430\u043b\u0435\u043d\u044c\u043a\u043e\u044e \u0434\u043e\u0447\u043a\u043e\u044e (Journeys with a Little Daughter)  </li> <li>1982 \u2013 \u0420\u043e\u0437\u0448\u0430\u0440\u0443\u0432\u0430\u043d\u043d\u044f (Stratification)  </li> <li>1986 \u2013 \u041f\u0456\u043b\u043e\u0442 \u0442\u0440\u0430\u043d\u0441\u0433\u0430\u043b\u0430\u043a\u0442\u0438\u0447\u043d\u043e\u0433\u043e (Pilot of the Transgalactic)  </li> <li>1986 \u2013 \u041f\u0440\u0438\u0432\u0430\u0442\u043d\u0430 \u043a\u043b\u0456\u043d\u0456\u043a\u0430 \u0434\u043e\u043a\u0442\u043e\u0440\u0430 \u0411\u0443\u0430\u0442\u0440\u0435\u0433\u0430\u043d\u043e (Doctor Buatregan\u2019s Private Clinic)  </li> <li>1987 \u2013 \u0418\u0433\u0440\u0430 \u0432 \u043c\u0438\u0440\u0430\u0436\u0438 (Game in Mirages)  </li> <li>1988 \u2013 \u0412\u0435\u0447\u043d\u044b\u0439 \u0433\u043e\u0440\u043e\u0434 (Eternal City)  </li> </ul>"},{"location":"authors/polozhiy/#short-stories","title":"Short Stories","text":"<ul> <li>1981 \u2013 \u0427\u043e\u0432\u0435\u043d \u0443 \u0442\u0443\u043c\u0430\u043d\u0456 (Boat in the Fog)  </li> <li>1982 \u2013 \u0428\u043c\u0430\u0442 \u0445\u043b\u0456\u0431\u0430 (A Piece of Bread)  </li> <li>1982 \u2013 \u041a\u0443\u0437\u043d\u0435\u0446 \u041c\u0438\u0442\u0440\u043e\u0448\u0430 (Blacksmith Mitrosha)  </li> <li>1982 \u2013 \u0427\u0435\u0440\u0435\u0437 \u0442\u0440\u0438\u0434\u0446\u044f\u0442\u044c \u0440\u043e\u043a\u0456\u0432 (Thirty Years Later)  </li> <li>1986 \u2013 \u0410 \u0432 \u0442\u0456\u0439 \u043a\u0443\u0437\u043d\u0456 \u043a\u043e\u0432\u0430\u043b\u044c \u043a\u043b\u0435\u043f\u043b\u0435\u2026 (And in That Forge, the Blacksmith Hammers...)  </li> <li>1986 \u2013 \u0412\u0435\u043b\u0438\u043a\u0456 \u043e\u0447\u0456 \u0412\u043e\u043b\u0438\u043d\u0456 (The Big Eyes of Volyn)  </li> <li>1986 \u2013 \u0413\u043e\u043b\u0438 \u043f\u0456\u0434 \u0437\u0430\u0432\u0456\u0441\u0443 (Goals at the End)  </li> <li>1986 \u2013 \u041a\u043e\u0440\u0430\u0431\u043b\u0456 \u0432 \u043b\u0456\u0441\u0456 (Ships in the Forest)  </li> <li>1986 \u2013 \u041a\u043e\u0440\u043e\u0431\u043e\u0440\u043e </li> <li>1986 \u2013 \u041f\u043e\u043f\u043e\u0432\u043d\u0435\u043d\u043d\u044f (Reinforcement)  </li> <li>1986 \u2013 \u041f\u0440\u043e \u043a\u043e\u0440\u0438\u0441\u0442\u044c \u0456\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0456\u0439 (On the Usefulness of Instructions)  </li> <li>1986 \u2013 \u0422\u0440\u0435\u0442\u044f \u0441\u043f\u0440\u043e\u0431\u0430 (The Third Attempt)  </li> <li>1986 \u2013 \u0426\u0435\u043d\u0442\u0440 \u0412\u0441\u0435\u0441\u0432\u0456\u0442\u0443 (The Center of the Universe)  </li> <li>1986 \u2013 \u0428\u0430\u0431\u043b\u044f \u043f\u0440\u0438\u0431\u0443\u043b\u044c\u0446\u044f (The Alien\u2019s Saber)  </li> <li>1988 \u2013 \u041f\u043b\u0430\u043d\u0435\u0442\u0430 \u0437 \u0434\u0456\u0440\u043a\u043e\u044e (Planet with a Hole)  </li> <li>2009 \u2013 \u041e\u0431\u0456\u0439\u0441\u0442\u044f \u041a\u043e\u0442\u0438\u0447\u0430 \u0456 \u0441\u0432\u0456\u0442 \u0434\u043e\u0432\u043a\u043e\u043b\u0430 (Kotych\u2019s Homestead and the World Around It) \u2013 Published posthumously </li> </ul>"},{"location":"authors/polozhiy/#literary-criticism","title":"Literary Criticism","text":"<ul> <li>1985 \u2013 \u041f\u0440\u0435\u043a\u0440\u0430\u0441\u043d\u044b\u0439 \u0438 \u0441\u0443\u0440\u043e\u0432\u044b\u0439 \u043c\u0438\u0440 \u0410\u043b\u0435\u043a\u0441\u0430\u043d\u0434\u0440\u0430 \u0413\u0440\u0438\u043d\u0430 (The Beautiful and Harsh World of Alexander Grin) \u2013 Afterword to Scarlet Sails </li> </ul>"},{"location":"authors/polozhiy/#bibliography","title":"Bibliography","text":""},{"location":"authors/polozhiy/#notable-collections","title":"Notable Collections","text":"<ul> <li>1986 \u2013 \u0421\u043e\u043d\u044f\u0447\u043d\u0438\u0439 \u0432\u0456\u0442\u0435\u0440 (The Sunny Wind) \u2013 Sci-Fi Stories  </li> <li>Anthologies: PFF-80, PFF-84, PFF-86 </li> </ul>"},{"location":"authors/polozhiy/#periodical-publications","title":"Periodical Publications","text":"<ul> <li>1980 \u2013 \u0429\u043e\u0441\u044c \u043d\u0435\u0433\u0430\u0440\u0430\u0437\u0434 (Something is Wrong...) \u2013 Debut sci-fi short story </li> <li>1986 \u2013 \u0421\u043e\u043d\u044f\u0447\u043d\u0438\u0439 \u0432\u0456\u0442\u0435\u0440 (The Sunny Wind) \u2013 Collection of novellas and short stories </li> <li>1986 \u2013 \u0410 \u0432 \u0442\u0456\u0439 \u043a\u0443\u0437\u043d\u0456 \u043a\u043e\u0432\u0430\u043b\u044c \u043a\u043b\u0435\u043f\u043b\u0435... \u2013 Published in Kyiv magazine  </li> <li>1988 \u2013 \u041f\u043b\u0430\u043d\u0435\u0442\u0430 \u0437 \u0434\u0456\u0440\u043a\u043e\u044e (Planet with a Hole) \u2013 Published in Moscow literary journals </li> </ul>"},{"location":"authors/polozhiy/#translations","title":"Translations","text":"<p>Polozhiy\u2019s works were translated into: - Russian - English - Spanish - Bulgarian - Slovak </p>"},{"location":"authors/polozhiy/#legacy","title":"Legacy","text":"<p>Viktor Polozhiy was a notable figure in Ukrainian literature, blending realism and science fiction. His works stood out for their rigorous and masculine tone, and he gained international recognition through translations and awards. </p> <p>Beyond fiction, he contributed criticism, editorial work, and screenwriting. His deep love for literature, unique humor, and passion for football were well known among his peers. </p> <p>Though his life was cut short, his influence on Ukrainian science fiction and literature remains significant, and his stories continue to captivate readers today.</p>"},{"location":"authors/zayets/","title":"Volodymyr Apollinaryovych Zayets","text":"<p>Birth: September 9, 1949, Velyka Bugayivka, Vasylkiv Raion, Kyiv Oblast, Ukrainian SSR Death: December 20, 2002, Yemen Occupation: Science fiction writer, editor, translator, pediatrician Languages: Ukrainian, Russian Pseudonyms: Veld Chernouz, Vladimir Chernoza Notable Works: The Machine of Oblivion, Temponauts, The City That Never Was, The Heavy Shadows Affiliations: Member of the Union of Soviet Writers (1987), Member of the Council of the Ukrainian Science Fiction Fan Club  </p>"},{"location":"authors/zayets/#biography","title":"Biography","text":""},{"location":"authors/zayets/#early-life-and-education","title":"Early Life and Education","text":"<p>Volodymyr Zayets was born into a family of civil servants in Velyka Bugayivka, Vasylkiv Raion, Kyiv Oblast. He pursued a medical career, graduating from the Kyiv Medical Institute in 1972, specializing in pediatrics. After graduation, he worked as a pediatrician at the Vyshhorod Emergency Medical Center.</p>"},{"location":"authors/zayets/#literary-career","title":"Literary Career","text":"<p>Zayets began his literary career with a humorous short story submitted to the satirical magazine Perec in 1972. His first science fiction work, Byli starogo kosmogatora (1978), marked the beginning of a humorous space adventure cycle featuring Antoniy Endotelius, a cosmic wanderer and storyteller.</p> <p>Throughout his career, he wrote in both Ukrainian and Russian, publishing in Ukrainian magazines (Perec, Dnipro, Ranok) and the Leningrad-based journal Aurora. He was actively involved in the Ukrainian science fiction community and participated in the famous Maleevka science fiction seminar.</p> <p>In 1991, Zayets became the chief editor of the magazine \"Flint\", which only published one issue. During the collapse of the Soviet Union, he compiled an anthology of Ukrainian science fiction, \"Zemlya ne obetovannaya\" (The Unpromised Land), but it was never published.</p>"},{"location":"authors/zayets/#later-years-and-mysterious-death","title":"Later Years and Mysterious Death","text":"<p>In the late 1990s, Zayets relocated to Yemen, working as a pediatrician under contract. He died under mysterious circumstances on December 20, 2002. The official cause of death was reported as methanol poisoning, but suspicions arose that he had been deliberately poisoned to avoid contract payment. His body was initially buried in Yemen, and his wife, Lyudmyla Tkach, struggled for months to have his remains repatriated to Ukraine. He was finally buried in March 2003 in Kyiv.</p> <p>His son, who also became a doctor, emigrated to the United States over 25 years ago. Lyudmyla later joined their son in the U.S., and no known contacts remain with them.</p>"},{"location":"authors/zayets/#literary-works","title":"Literary Works","text":""},{"location":"authors/zayets/#books","title":"Books","text":"<ul> <li>1984 \u2013 \u041c\u0430\u0448\u0438\u043d\u0430 \u0437\u0430\u0431\u0443\u0442\u0442\u044f (The Machine of Oblivion)  </li> <li>1986 \u2013 \u0422\u0435\u043c\u043f\u043e\u043d\u0430\u0432\u0442\u0438 (Temponauts)  </li> </ul>"},{"location":"authors/zayets/#novellas","title":"Novellas","text":"<ul> <li>1985 \u2013 \u0413\u043e\u0440\u043e\u0434, \u043a\u043e\u0442\u043e\u0440\u043e\u0433\u043e \u043d\u0435 \u0431\u044b\u043b\u043e (The City That Never Was)  </li> <li>1987 \u2013 \u0417\u0435\u043c\u043b\u044f \u043d\u0435 \u043e\u0431\u0435\u0442\u043e\u0432\u0430\u043d\u043d\u0430\u044f (The Unpromised Land)  </li> <li>1990 \u2013 \u0413\u0438\u043f\u0441\u043e\u0432\u0430\u044f \u0441\u0443\u0434\u043e\u0440\u043e\u0433\u0430 (Gypsum Spasm)  </li> <li>1991 \u2013 \u0422\u044f\u0436\u0435\u043b\u044b\u0435 \u0442\u0435\u043d\u0438 (The Heavy Shadows)  </li> </ul>"},{"location":"authors/zayets/#short-stories","title":"Short Stories","text":"<ul> <li>1973 \u2013 \u0414\u043b\u044f \u043f\u0440\u043e\u0444\u0438\u043b\u0430\u043a\u0442\u0438\u043a\u0438 (For Prevention)  </li> <li>1974 \u2013 \u0424\u0438\u043b\u043e\u0441\u043e\u0444 (Philosopher)  </li> <li>1974 \u2013 \u0421\u0432\u0438\u0434\u0430\u043d\u0438\u0435 (Date)  </li> <li>1975 \u2013 \u0418\u043d\u0442\u0443\u0438\u0446\u0438\u044f (Intuition)  </li> <li>1975 \u2013 \u041f\u043e\u0448\u0443\u0442\u0438\u043b (Joked)  </li> <li>1978-1991 \u2013 \u0426\u0438\u043a\u043b \u00ab\u0411\u044b\u043b\u0438 \u0441\u0442\u0430\u0440\u043e\u0433\u043e \u043a\u043e\u0441\u043c\u043e\u0433\u0430\u0442\u043e\u0440\u0430\u00bb (Tales of the Old Cosmigator)  </li> <li>1980 \u2013 \u0414\u0435\u0434 \u041f\u0430\u0442\u0440\u0430\u0442\u0438\u0439 (Grandfather Patraty)  </li> <li>1981 \u2013 \u0422\u0435\u043c\u043f\u043e\u043d\u0430\u0432\u0442\u044b \u2013 \u0442\u0430\u043a \u0438\u0445 \u043d\u0430\u0437\u043e\u0432\u0443\u0442 (They Will Call Them Temponauts)  </li> <li>1986 \u2013 \u0418 \u0431\u0443\u0434\u0435\u0442 \u0434\u0435\u043d\u044c \u043d\u043e\u0432\u044b\u0439... (And There Will Be a New Day...)  </li> <li>1988 \u2013 \u041f\u043e\u0431\u0435\u0433 (Escape)  </li> <li>1989 \u2013 \u041d\u0435\u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0430\u0441\u043f\u0435\u043a\u0442\u044b \u0441\u043e\u0432\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0433\u043e \u0432\u0435\u0434\u044c\u043c\u043e\u0432\u0435\u0434\u0435\u043d\u0438\u044f (Some Aspects of Modern Witchcraft Studies)  </li> <li>1990 \u2013 \u042d\u0444\u0444\u0435\u043a\u0442 \u0444\u0430\u0440\u0430\u043e\u043d\u0430 (The Pharaoh Effect)  </li> </ul>"},{"location":"authors/zayets/#science-fiction-anthologies","title":"Science Fiction Anthologies","text":"<ul> <li>1990 \u2013 \u041f\u0440\u0438\u0433\u043e\u0434\u0438, \u043f\u043e\u0434\u043e\u0440\u043e\u0436\u0456, \u0444\u0430\u043d\u0442\u0430\u0441\u0442\u0438\u043a\u0430-90 (Adventures, Travels, Science Fiction-90) \u2013 Editor </li> </ul>"},{"location":"authors/zayets/#filmography","title":"Filmography","text":"<ul> <li>1984 \u2013 \u0412\u0441\u0442\u0440\u0435\u0447\u0430 (Meeting) \u2013 Screenplay for an animated film (Kievnauchfilm Studio, USSR)  </li> </ul>"},{"location":"authors/zayets/#bibliography","title":"Bibliography","text":""},{"location":"authors/zayets/#notable-collections","title":"Notable Collections","text":"<ul> <li>1991 \u2013 \u0422\u044f\u0436\u0435\u043b\u044b\u0435 \u0442\u0435\u043d\u0438: \u0424\u0430\u043d\u0442\u0430\u0441\u0442\u0438\u0447\u0435\u0441\u043a\u0430\u044f \u043f\u043e\u0432\u0435\u0441\u0442\u044c, \u0440\u0430\u0441\u0441\u043a\u0430\u0437\u044b (The Heavy Shadows: A Sci-Fi Novella and Stories)  </li> <li>2012 \u2013 \u0411\u044b\u043b\u0438 \u0441\u0442\u0430\u0440\u043e\u0433\u043e \u043a\u043e\u0441\u043c\u043e\u0433\u0430\u0442\u043e\u0440\u0430 (Tales of the Old Cosmigator)  </li> </ul>"},{"location":"authors/zayets/#periodical-publications","title":"Periodical Publications","text":"<ul> <li>1978 \u2013 \u0424\u0430\u043d\u0442\u0430\u0441\u0442\u0438\u043a\u0430-78 (Fantastika-78) \u2013 Story: \u0411\u044b\u043b\u0438 \u0441\u0442\u0430\u0440\u043e\u0433\u043e \u043a\u043e\u0441\u043c\u043e\u0433\u0430\u0442\u043e\u0440\u0430 (Tales of the Old Cosmigator)  </li> <li>1983 \u2013 \u0424\u0430\u043d\u0442\u0430\u0441\u0442\u0438\u043a\u0430-83 (Fantastika-83) \u2013 Story: \u0422\u0435\u043c\u043f\u043e\u043d\u0430\u0432\u0442\u044b \u2013 \u0442\u0430\u043a \u0438\u0445 \u043d\u0430\u0437\u043e\u0432\u0443\u0442 (They Will Call Them Temponauts)  </li> <li>1987 \u2013 \u041c\u043e\u043b\u043e\u0434\u044c (Youth) \u2013 Novella: \u0417\u0435\u043c\u043b\u044f \u043d\u0435 \u043e\u0431\u0435\u0442\u043e\u0432\u0430\u043d\u043d\u0430\u044f (The Unpromised Land)  </li> <li>1990 \u2013 \u041c\u043e\u043b\u043e\u0434\u0430\u044f \u0433\u0432\u0430\u0440\u0434\u0438\u044f (Young Guard) \u2013 Novella: \u0413\u0438\u043f\u0441\u043e\u0432\u0430\u044f \u0441\u0443\u0434\u043e\u0440\u043e\u0433\u0430 (Gypsum Spasm)  </li> <li>1991 \u2013 \u0424\u043b\u0438\u043d\u0442 (Flint Magazine) \u2013 Story: \u041c\u0430\u0440\u0441\u0438\u0430\u043d\u0441\u043a\u0438\u0439 \u0441\u0443\u0432\u0435\u043d\u0438\u0440 (Martian Souvenir)  </li> </ul>"},{"location":"authors/zayets/#translations-and-editorial-work","title":"Translations and Editorial Work","text":"<ul> <li>1991 \u2013 Translated Miss Shumway and the Magic Wand by James Hadley Chase  </li> <li>1991 \u2013 Editor of Soviet Literature \u2013 Temponauts (translated into English)  </li> <li>1983 \u2013 Dra\u017eba na planet\u011b Gij: Fantastika 83 \u2013 P\u0159\u00edb\u011bhy star\u00e9ho kosmog\u00e1tora (translated into Czech)  </li> </ul>"},{"location":"authors/zayets/#legacy","title":"Legacy","text":"<p>Vladimir Zayets was a prominent figure in Ukrainian and Soviet science fiction, known for his ironic and satirical style, as well as his deep interest in speculative fiction. His work explored themes of human nature, space exploration, and ethical dilemmas in science. Despite the tragic and mysterious circumstances of his death, his literary contributions remain a significant part of Ukrainian and Russian science fiction history.</p>"},{"location":"authors/extensions/","title":"Extensions","text":""},{"location":"authors/extensions/python-markdown-extensions/","title":"Python Markdown Extensions","text":""},{"location":"authors/extensions/python-markdown/","title":"Python Markdown","text":""},{"location":"blog/","title":"Blog","text":""},{"location":"blog/2023/11/30/adding-a-badge-to-your-project/","title":"Adding a  badge to your project","text":"<p>You enjoy working with Material for MkDocs? Share the love! You can now add a badge to your project's README, showing that your project is built with Material for MkDocs.</p> <p>Material for MkDocs' logo was just added to Simple Icons, which is used by Shields.io to include logos in badges. We generated a badge for you, which you can add to your project's README:</p> <p></p>"},{"location":"blog/2023/11/30/adding-a-badge-to-your-project/#usage","title":"Usage","text":"<p>Just copy the following snippet and paste it into your project's <code>README.md</code>:</p> <pre><code>[![Built with Material for MkDocs](https://img.shields.io/badge/Material_for_MkDocs-526CFE?style=for-the-badge&amp;logo=MaterialForMkDocs&amp;logoColor=white)](https://squidfunk.github.io/mkdocs-material/)\n</code></pre>"},{"location":"blog/2022/09/12/blog-support-just-landed/","title":"Blog support just landed","text":"<p>Hey there! You're looking at our new blog, built with the brand new built-in blog plugin. With this plugin, you can easily build a blog alongside your documentation or standalone.</p> <p>Proper support for blogging, as requested by many users over the past few years, was something that was desperately missing from Material for MkDocs' feature set. While everybody agreed that blogging support was a blind spot, it was not obvious whether MkDocs could be extended in a way to allow for blogging as we know it from Jekyll and friends. The built-in blog plugin proves that it is, after all, possible to build a blogging engine on top of MkDocs, in order to create a technical blog alongside your documentation, or as the main thing.</p> <p>This article explains how to build a standalone blog with Material for MkDocs. If you want to build a blog alongside your documentation, please refer to the plugin's documentation.</p>"},{"location":"blog/2022/09/12/blog-support-just-landed/#quick-start","title":"Quick start","text":""},{"location":"blog/2022/09/12/blog-support-just-landed/#creating-a-standalone-blog","title":"Creating a standalone blog","text":"<p>You can bootstrap a new project using the <code>mkdocs</code> executable:</p> <pre><code>mkdocs new .\n</code></pre> <p>This will create the following structure:</p> <pre><code>.\n\u251c\u2500 docs/\n\u2502  \u2514\u2500 index.md\n\u2514\u2500 mkdocs.yml\n</code></pre>"},{"location":"blog/2022/09/12/blog-support-just-landed/#configuration","title":"Configuration","text":"<p>In this article, we're going to build a standalone blog, which means that the blog lives at the root of your project. For this reason, open <code>mkdocs.yml</code>, and replace its contents with:</p> <pre><code>site_name: My Blog\ntheme:\n  name: material\n  features:\n    - navigation.sections\nplugins:\n  - blog:\n      blog_dir: . # (1)!\n  - search\n  - tags\nnav:\n  - index.md\n</code></pre> <ol> <li>This is the important part \u2013 we're hosting the blog at the root of the     project, and not in a subdirectory. For more information, see the     <code>blog_dir</code> configuration option.</li> </ol>"},{"location":"blog/2022/09/12/blog-support-just-landed/#blog-setup","title":"Blog setup","text":"<p>The blog index page lives in <code>docs/index.md</code>. This page was pre-filled by MkDocs with some content, so we're going to replace it with what we need to bootstrap the blog:</p> <pre><code># Blog\n</code></pre> <p>That's it.</p>"},{"location":"blog/2022/09/12/blog-support-just-landed/#writing-your-first-post","title":"Writing your first post","text":"<p>Now that we have set up the built-in blog plugin, we can start writing our first post. All blog posts are written with the exact same Markdown flavor as already included with Material for MkDocs. First, create a folder called <code>posts</code> with a file called <code>hello-world.md</code>:</p> <pre><code>.\n\u251c\u2500 docs/\n\u2502  \u251c\u2500 posts/\n\u2502  \u2502  \u2514\u2500 hello-world.md # (1)!\n\u2502  \u2514\u2500 index.md\n\u2514\u2500 mkdocs.yml\n</code></pre> <ol> <li>If you'd like to arrange posts differently, you're free to do so. The URLs     are built from the format specified in <code>post_url_format</code> and     the titles and dates of posts, no matter how they are organized     inside the <code>posts</code> directory.</li> </ol> <p>Then, open up <code>hello-world.md</code>, and add the following lines:</p> <pre><code>---\ndraft: true # (1)!\ndate: 2022-01-31\ncategories:\n  - Hello\n  - World\n---\n\n# Hello world!\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque nec\nmaximus ex. Sed consequat, nulla quis malesuada dapibus, elit metus vehicula\nerat, ut egestas tellus eros at risus. In hac habitasse platea dictumst.\nPhasellus id lacus pulvinar erat consequat pretium. Morbi malesuada arcu mauris\nNam vel justo sem. Nam placerat purus non varius luctus. Integer pretium leo in\nsem rhoncus, quis gravida orci mollis. Proin id aliquam est. Vivamus in nunc ac\nmetus tristique pellentesque. Suspendisse viverra urna in accumsan aliquet.\n\n&lt;!-- more --&gt;\n\nDonec volutpat, elit ac volutpat laoreet, turpis dolor semper nibh, et dictum\nmassa ex pulvinar elit. Curabitur commodo sit amet dolor sed mattis. Etiam\ntempor odio eu nisi gravida cursus. Maecenas ante enim, fermentum sit amet\nmolestie nec, mollis ac libero. Vivamus sagittis suscipit eros ut luctus.\n\nNunc vehicula sagittis condimentum. Cras facilisis bibendum lorem et feugiat.\nIn auctor accumsan ligula, at consectetur erat commodo quis. Morbi ac nunc\npharetra, pellentesque risus in, consectetur urna. Nulla id enim facilisis\narcu tincidunt pulvinar. Vestibulum laoreet risus scelerisque porta congue.\nIn velit purus, dictum quis neque nec, molestie viverra risus. Nam pellentesque\ntellus id elit ultricies, vel finibus erat cursus.\n</code></pre> <ol> <li>If you mark a post as a draft, a red marker appears next to the post date     on index pages. When the site is built, drafts are not included in the     output. This behavior can be changed, e.g. for rendering drafts when     building deploy previews.</li> </ol> <p>When you spin up the live preview server, you should be greeted by your first post! You'll also realize, that archive and category indexes have been automatically generated for you:</p> <p></p> <p>However, this is just the start. The built-in blog plugin packs a lot of functionality needed in day-to-day blogging. Visit the documentation of the plugin to learn about the following topics:</p> <ul> <li>Adding an excerpt</li> <li>Adding authors</li> <li>Adding categories</li> <li>Adding tags</li> <li>Adding related links</li> <li>Linking from and to posts</li> <li>Setting the reading time</li> <li>Setting defaults</li> </ul> <p>Additionally, the built-in blog plugin has dozens of configuration options which allow for fine-tuning the output. You can configure post slugs, general behavior and much more.</p>"},{"location":"blog/2022/09/12/blog-support-just-landed/#whats-next","title":"What's next?","text":"<p>Getting basic blogging support out the door was quite a challenge \u2013 the built-in blog plugin is probably the biggest release this year and already packs a lot of functionality. However, Material for MkDocs is used in many different contexts, which is why we'd expect to iterate, as always.</p> <p>Some ideas already proposed by users:</p> <ul> <li> <p>Blog series: Authors should be able to create so called blog series and   assign posts to a blog series using simple identifiers. For each post that is   part of a series, a list with links to all other posts should be included in   the post's content.</p> </li> <li> <p>Author indexes: Besides archive and category indexes, authors should   be able to create per-author indexes, which list all posts linked to an   author. Additionally, a profile should be created for each author and linked   from posts.</p> </li> <li> <p>Social share buttons: It should be easy to share blog posts via social   media or other ways. For this reason, it should be possible to automatically   include social sharing buttons with each post.</p> </li> </ul> <p>What's still missing from the brand new built-in blog plugin? Feel free to share your ideas in the comments. Together, we can build one of the best modern engines for technical blogging!</p>"},{"location":"blog/2022/05/05/chinese-search-support/","title":"Chinese search support \u2013 \u4e2d\u6587\u641c\u7d22\u200b\u652f\u6301","text":"<p>Insiders adds experimental Chinese language support for the built-in search plugin \u2013 a feature that has been requested for a long time given the large number of Chinese users.</p> <p>After the United States and Germany, the third-largest country of origin of Material for MkDocs users is China. For a long time, the built-in search plugin didn't allow for proper segmentation of Chinese characters, mainly due to missing support in lunr-languages which is used for search tokenization and stemming. The latest Insiders release adds long-awaited Chinese language support for the built-in search plugin, something that has been requested by many users.</p> <p>Material for MkDocs\u7d42\u65bc\u200b\u652f\u6301\u200b\u4e2d\u6587\u200b\u4e86\uff01\u6587\u672c\u200b\u88ab\u200b\u6b63\u78ba\u200b\u5206\u5272\u200b\u4e26\u4e14\u200b\u66f4\u200b\u5bb9\u6613\u200b\u627e\u5230\u3002</p> <p>This article explains how to set up Chinese language support for the built-in search plugin in a few minutes.</p>"},{"location":"blog/2022/05/05/chinese-search-support/#configuration","title":"Configuration","text":"<p>Chinese language support for Material for MkDocs is provided by jieba, an excellent Chinese text segmentation library. If jieba is installed, the built-in search plugin automatically detects Chinese characters and runs them through the segmenter. You can install jieba with:</p> <pre><code>pip install jieba\n</code></pre> <p>The next step is only required if you specified the <code>separator</code> configuration in <code>mkdocs.yml</code>. Text is segmented with zero-width whitespace characters, so it renders exactly the same in the search modal. Adjust <code>mkdocs.yml</code> so that the <code>separator</code> includes the <code>\\u200b</code> character:</p> <pre><code>plugins:\n  - search:\n      separator: '[\\s\\u200b\\-]'\n</code></pre> <p>That's all that is necessary.</p>"},{"location":"blog/2022/05/05/chinese-search-support/#usage","title":"Usage","text":"<p>If you followed the instructions in the configuration guide, Chinese words will now be tokenized using jieba. Try searching for  \u652f\u6301 to see how it integrates with the built-in search plugin.</p> <p>Note that this is an experimental feature, and I, @squidfunk, am not proficient in Chinese (yet?). If you find a bug or think something can be improved, please open an issue.</p>"},{"location":"blog/2021/09/26/excluding-content-from-search/","title":"Excluding content from search","text":"<p>The latest Insiders release brings three new simple ways to exclude dedicated parts of a document from the search index, allowing for more fine-grained control.</p> <p>Two weeks ago, Material for MkDocs Insiders shipped a brand new search plugin, yielding massive improvements in usability, but also in speed and size of the search index. Interestingly, as discussed in the previous blog article, we only scratched the surface of what's now possible. This release brings some useful features that enhance the writing experience, allowing for more fine-grained control of what pages, sections and blocks of a Markdown file should be indexed by the built-in search functionality.</p> <p>The following section discusses existing solutions for excluding pages and sections from the search index. If you immediately want to learn what's new, skip to the section just after that.</p>"},{"location":"blog/2021/09/26/excluding-content-from-search/#prior-art","title":"Prior art","text":"<p>MkDocs has a rich and thriving ecosystem of plugins, and it comes as no surprise that there's already a fantastic plugin by @chrieke to exclude specific sections of a Markdown file \u2013 the mkdocs-exclude-search plugin. It can be installed with:</p> <pre><code>pip install mkdocs-exclude-search\n</code></pre> <p>How it works: the plugin post-processes the <code>search_index.json</code> file that is generated by the built-in search plugin, giving the author the ability to exclude certain pages and sections by adding a few lines of configuration to <code>mkdocs.yml</code>. An example:</p> <pre><code>plugins:\n  - search\n  - exclude-search:\n      exclude:\n        - page.md\n        - page.md#section\n        - directory/*\n        - /*/page.md\n</code></pre> <p>It's easy to see that the plugin follows a configuration-centric approach, which adds support for advanced filtering techniques like infix- and suffix-filtering using wildcards. While this is a very powerful idea, it comes with some downsides:</p> <ol> <li> <p>Exclusion patterns and content are not co-located: exclusion patterns     need to be defined in <code>mkdocs.yml</code>, and not as part of the respective     document or section to be excluded. This might result in stale exclusion     patterns, leading to unintended behavior:</p> <ul> <li> <p>When a headline is changed, its slug (permalink) also changes, which might   suddenly match (or unmatch) a pattern, e.g., when an author fixes a typo   in a headline.</p> </li> <li> <p>As exclusion patterns support the use of wildcards, different authors   might overwrite each other's patterns without any immediate feedback since   the plugin does only report the number of excluded documents \u2013 not what   has been excluded.<sup>1</sup></p> </li> </ul> </li> <li> <p>Exclusion control might be too coarse: The mkdocs-exclude-search     plugin only allows for the exclusion of pages and sections. It's not     possible to exclude parts of a section, e.g., content that is irrelevant     to search but must be included as part of the documentation.</p> </li> </ol>"},{"location":"blog/2021/09/26/excluding-content-from-search/#whats-new","title":"What's new?","text":"<p>The latest Insiders release brings fine-grained control for excluding pages, sections, and blocks from the search index, implemented through front matter, as well as the Attribute Lists. Note that it doesn't replace the mkdocs-exclude-search plugin but complements it.</p>"},{"location":"blog/2021/09/26/excluding-content-from-search/#excluding-pages","title":"Excluding pages","text":"<p>An entire page can be excluded from the search index by adding a simple directive to the front matter of the respective Markdown file. The good thing is that the author now only has to check the top of the document to learn whether it is excluded or not:</p> <pre><code>---\nsearch:\n  exclude: true\n---\n\n# Page title\n...\n</code></pre>"},{"location":"blog/2021/09/26/excluding-content-from-search/#excluding-sections","title":"Excluding sections","text":"<p>If a section should be excluded, the author can use the Attribute Lists extension to add a pragma called <code>data-search-exclude</code> at the end of a heading. The pragma is not included in the final HTML, as search pragmas are filtered by the search plugin before the page is rendered:</p> <code>docs/page.md</code> <code>search_index.json</code> <pre><code># Page title\n\n## Section 1\n\nThe content of this section is included\n\n## Section 2 { data-search-exclude }\n\nThe content of this section is excluded\n</code></pre> <pre><code>{\n  ...\n  \"docs\": [\n    {\n      \"location\":\"page/\",\n      \"text\":\"\",\n      \"title\":\"Document title\"\n    },\n    {\n      \"location\":\"page/#section-1\",\n      \"text\":\"&lt;p&gt;The content of this section is included&lt;/p&gt;\",\n      \"title\":\"Section 1\"\n    }\n  ]\n}\n</code></pre>"},{"location":"blog/2021/09/26/excluding-content-from-search/#excluding-blocks","title":"Excluding blocks","text":"<p>If even more fine-grained control is desired, the pragma can be added to any block-level element or inline-level element that is officially supported by the Attribute Lists extension:</p> <code>docs/page.md</code> <code>search_index.json</code> <pre><code># Page title\n\nThe content of this block is included\n\nThe content of this block is excluded\n{ data-search-exclude }\n</code></pre> <pre><code>{\n  ...\n  \"docs\": [\n    {\n      \"location\":\"page/\",\n      \"text\":\"&lt;p&gt;The content of this block is included&lt;/p&gt;\",\n      \"title\":\"Document title\"\n    },\n  ]\n}\n</code></pre>"},{"location":"blog/2021/09/26/excluding-content-from-search/#conclusion","title":"Conclusion","text":"<p>The latest release brings three simple ways to control more precisely what goes into the search index and what doesn't. It complements the already very powerful mkdocs-exclude-search plugin, allowing for new methods of shaping the structure, size and content of the search index.</p> <ol> <li> <p>When the log level is set to <code>DEBUG</code>, the plugin will report exactly which pages and sections have been excluded from the search index, but MkDocs will now flood the terminal with debug output from its core and other plugins.\u00a0\u21a9</p> </li> </ol>"},{"location":"blog/2023/09/22/using-git-sparse-checkout-for-faster-documentation-builds/","title":"Using <code>git sparse-checkout</code> for faster documentation builds","text":"<p>Leveraging <code>git sparse-checkout</code> in GitHub Actions enabled us to speed up documentation builds in our repository, cutting checkout times from 20 to 30 seconds to just 2 seconds.</p> <p>Developing an efficient approach to build documentation in CI workflows is essential, especially when working in large repositories with thousands of commits, like ours. Of course, we want to build documentation quickly and efficiently, ensuring fast and productive workflows. When using both the wonderful <code>git-committers</code> and <code>git-revision-date-localized</code> plugins to display document contributors and dates at the bottom of each page, we are required to set <code>fetch-depth: 0</code>, which resulted in checkout times of 20 to 30 seconds on our repository. By leveraging <code>git sparse-checkout</code> within GitHub Actions, check out time was brought down to 2 seconds.</p>"},{"location":"blog/2023/09/22/using-git-sparse-checkout-for-faster-documentation-builds/#a-primer","title":"A Primer","text":"<p><code>git sparse-checkout</code> allows you to check out only a subset of the files in a repository, making it incredibly useful for large repositories where a full checkout takes long and includes many files that are not relevant when building documentation.</p>"},{"location":"blog/2023/09/22/using-git-sparse-checkout-for-faster-documentation-builds/#github-actions","title":"GitHub Actions","text":"<p>To enable <code>git sparse-checkout</code> within GitHub Actions and ensure that you are only building the documentation that you need, add the following lines to your workflow file:</p> <pre><code>- uses: actions/checkout@v4\n  with:\n    fetch-depth: 0\n    sparse-checkout: |\n      docs\n      includes\n</code></pre> <p><code>git sparse-checkout</code> always checks out all files residing in the repository\u2019s root. This means that regardless of the specified paths or directories for sparse checkout, the files located in the root of the repository will always be included in the checkout process.</p> <p>Thus, you only need to specify the directories that are necessary for building documentation. In our case, we only need the <code>docs</code> and <code>includes</code> folders, but if you need additional directories, you can just add them to the end of the list. A complete example workflow for GitHub Actions:</p> <pre><code>name: documentation\non:\n  push:\n    branches:\n      - master\n      - main\npermissions:\n  contents: write\njobs:\n  deploy:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v4\n        with:\n          fetch-depth: 0\n          sparse-checkout: |\n            docs\n            includes\n      - uses: actions/setup-python@v4\n        with:\n          python-version: 3.x\n      - run: pip install mkdocs-material\n      - run: mkdocs gh-deploy --force\n</code></pre>"},{"location":"blog/2023/09/22/using-git-sparse-checkout-for-faster-documentation-builds/#conclusion","title":"Conclusion","text":"<p>That's all there is! We're super happy with the results and hope that this will help you to speed up your documentation builds in GitHub Actions as well. As always, feel free to share your thoughts and experiences in the comments below.</p>"},{"location":"blog/2021/09/13/search-better-faster-smaller/","title":"Search: better, faster, smaller","text":"<p>This is the story of how we managed to completely rebuild client-side search, delivering a significantly better user experience while making it faster and smaller at the same time.</p> <p>The search of Material for MkDocs is by far one of its best and most-loved assets: multilingual, offline-capable, and most importantly: all client-side. It provides a solution to empower the users of your documentation to find what they're searching for instantly without the headache of managing additional servers. However, even though several iterations have been made, there's still some room for improvement, which is why we rebuilt the search plugin and integration from the ground up. This article shines some light on the internals of the new search, why it's much more powerful than the previous version, and what's about to come.</p> <p>The next section discusses the architecture and issues of the current search implementation. If you immediately want to learn what's new, skip to the section just after that.</p>"},{"location":"blog/2021/09/13/search-better-faster-smaller/#architecture","title":"Architecture","text":"<p>Material for MkDocs uses lunr together with lunr-languages to implement its client-side search capabilities. When a documentation page is loaded and JavaScript is available, the search index as generated by the built-in search plugin during the build process is requested from the server:</p> <pre><code>const index$ = document.forms.namedItem(\"search\")\n  ? __search?.index || requestJSON&lt;SearchIndex&gt;(\n    new URL(\"search/search_index.json\", config.base)\n  )\n  : NEVER\n</code></pre>"},{"location":"blog/2021/09/13/search-better-faster-smaller/#search-index","title":"Search index","text":"<p>The search index includes a stripped-down version of all pages. Let's take a look at an example to understand precisely what the search index contains from the original Markdown file:</p> Expand to inspect example <code>docs/page.md</code> <code>search_index.json</code> <pre><code># Example\n\n## Text\n\nIt's very easy to make some words **bold** and other words *italic*\nwith Markdown. You can even add [links](#), or even `code`:\n\n```\nif (isAwesome) {\n  return true\n}\n```\n\n## Lists\n\nSometimes you want numbered lists:\n\n1. One\n2. Two\n3. Three\n\nSometimes you want bullet points:\n\n* Start a line with a star\n* Profit!\n</code></pre> <pre><code>{\n  \"config\": {\n    \"indexing\": \"full\",\n    \"lang\": [\n      \"en\"\n    ],\n    \"min_search_length\": 3,\n    \"prebuild_index\": false,\n    \"separator\": \"[\\\\s\\\\-]+\"\n  },\n  \"docs\": [\n    {\n      \"location\": \"page/\",\n      \"title\": \"Example\",\n      \"text\": \"Example Text It's very easy to make some words bold and other words italic with Markdown. You can even add links , or even code : if (isAwesome) { return true } Lists Sometimes you want numbered lists: One Two Three Sometimes you want bullet points: Start a line with a star Profit!\"\n    },\n    {\n      \"location\": \"page/#example\",\n      \"title\": \"Example\",\n      \"text\": \"\"\n    },\n    {\n      \"location\": \"page/#text\",\n      \"title\": \"Text\",\n      \"text\": \"It's very easy to make some words bold and other words italic with Markdown. You can even add links , or even code : if (isAwesome) { return true }\"\n    },\n    {\n      \"location\": \"page/#lists\",\n      \"title\": \"Lists\",\n      \"text\": \"Sometimes you want numbered lists: One Two Three Sometimes you want bullet points: Start a line with a star Profit!\"\n    }\n  ]\n}\n</code></pre> <p>If we inspect the search index, we immediately see several problems:</p> <ol> <li> <p>All content is included twice: the search index contains one entry       with the entire contents of the page, and one entry for each section of       the page, i.e., each block preceded by a headline or subheadline. This       significantly contributes to the size of the search index.</p> </li> <li> <p>All structure is lost: when the search index is built, all structural       information like HTML tags and attributes are stripped from the content.       While this approach works well for paragraphs and inline formatting, it       might be problematic for lists and code blocks. An excerpt:</p> <pre><code>\u2026 links , or even code : if (isAwesome) { \u2026 } Lists Sometimes you want \u2026\n</code></pre> <ul> <li> <p>Context: for an untrained eye, the result can look like gibberish, as   it's not immediately apparent what classifies as text and what as code.   Furthermore, it's not clear that <code>Lists</code> is a headline as it's merged   with the code block before and the paragraph after it.</p> </li> <li> <p>Punctuation: inline elements like links that are immediately followed   by punctuation are separated by whitespace (see <code>,</code> and <code>:</code> in the   excerpt). This is because all extracted text is joined with a whitespace   character during the construction of the search index.</p> </li> </ul> </li> </ol> <p>It's not difficult to see that it can be quite challenging to implement a good search experience for theme authors, which is why Material for MkDocs (up to now) did some monkey patching to be able to render slightly more meaningful search previews.</p>"},{"location":"blog/2021/09/13/search-better-faster-smaller/#search-worker","title":"Search worker","text":"<p>The actual search functionality is implemented as part of a web worker<sup>1</sup>, which creates and manages the lunr search index. When search is initialized, the following steps are taken:</p> <ol> <li> <p>Linking sections with pages: The search index is parsed, and each     section is linked to its parent page. The parent page itself is not     indexed, as it would lead to duplicate results, so only the sections     remain. Linking is necessary, as search results are grouped by page.</p> </li> <li> <p>Tokenization: The <code>title</code> and <code>text</code> values of each section are split     into tokens by using the <code>separator</code> as configured in     <code>mkdocs.yml</code>. Tokenization itself is carried out by     lunr's default tokenizer, which doesn't allow for     lookahead or separators spanning multiple characters.</p> <p>Why is this important and a big deal? We will see later how much more we can achieve with a tokenizer that is capable of separating strings with lookahead.</p> </li> <li> <p>Indexing: As a final step, each section is indexed. When querying the     index, if a search query includes one of the tokens as returned by step 2.,     the section is considered to be part of the search result and passed to the     main thread.</p> </li> </ol> <p>Now, that's basically how the search worker operates. Sure, there's a little more magic involved, e.g., search results are post-processed and rescored to account for some shortcomings of lunr, but in general, this is how data gets into and out of the index.</p>"},{"location":"blog/2021/09/13/search-better-faster-smaller/#search-previews","title":"Search previews","text":"<p>Users should be able to quickly scan and evaluate the relevance of a search result in the given context, which is why a concise summary with highlighted occurrences of the search terms found is an essential part of a great search experience.</p> <p>This is where the current search preview generation falls short, as some of the search previews appear not to include any occurrence of any of the search terms. This was due to the fact that search previews were truncated after a maximum of 320 characters, as can be seen here:</p> <p></p> <p>The first two results look like they're not relevant, as they don't seem to include the query string the user just searched for. Yet, they are.</p> <p>A better solution to this problem has been on the roadmap for a very, very long time, but in order to solve this once and for all, several factors need to be carefully considered:</p> <ol> <li> <p>Word boundaries: some themes<sup>2</sup> for static site generators generate    search previews by expanding the text left and right next to an occurrence,    stopping at a whitespace character when enough words have been consumed. A    preview might look like this:</p> <pre><code>\u2026 channels, e.g., or which can be configured via mkdocs.yml \u2026\n</code></pre> <p>While this may work for languages that use whitespace as a separator between words, it breaks down for languages like Japanese or Chinese<sup>3</sup>, as they have non-whitespace word boundaries and use dedicated segmenters to split strings into tokens.</p> </li> <li> <p>Context-awareness: Although whitespace doesn't work for all languages,     one could argue that it could be a good enough solution. Unfortunately, this     is not necessarily true for code blocks, as the removal of whitespace might     change meaning in some languages.</p> </li> <li> <p>Structure: Preserving structural information is not a must, but     apparently beneficial to build more meaningful search previews which allow     for a quick evaluation of relevance. If a word occurrence is part of a code     block, it should be rendered as a code block.</p> </li> </ol>"},{"location":"blog/2021/09/13/search-better-faster-smaller/#whats-new","title":"What's new?","text":"<p>After we built a solid understanding of the problem space and before we dive into the internals of our new search implementation to see which of the problems it already solves, a quick overview of what features and improvements it brings:</p> <ul> <li>Better: support for rich search previews, preserving the structural   information of code blocks, inline code, and lists, so they are rendered   as-is, as well as lookahead tokenization, more accurate highlighting, and   improved stability of typeahead. Also, a slightly better UX.</li> <li>Faster and smaller: significant decrease in search index size of up   to 48% due to improved extraction and construction techniques, resulting in a   search experience that is up to 95% faster, which is particularly helpful for   large documentation projects.</li> </ul>"},{"location":"blog/2021/09/13/search-better-faster-smaller/#rich-search-previews","title":"Rich search previews","text":"<p>As we rebuilt the search plugin from scratch, we reworked the construction of the search index to preserve the structural information of code blocks, inline code, as well as unordered and ordered lists. Using the example from the search index section, here's how it looks:</p> NowBefore <p></p> <p></p> <p>Now, code blocks are first-class citizens of search previews, and even inline code formatting is preserved. Let's take a look at the new structure of the search index to understand why:</p> Expand to inspect search index NowBefore <pre><code>{\n  ...\n  \"docs\": [\n    {\n      \"location\": \"page/\",\n      \"title\": \"Example\",\n      \"text\": \"\"\n    },\n    {\n      \"location\": \"page/#text\",\n      \"title\": \"Text\",\n      \"text\": \"&lt;p&gt;It's very easy to make some words bold and other words italic with Markdown. You can even add links, or even &lt;code&gt;code&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;if (isAwesome){\\n  return true\\n}\\n&lt;/code&gt;&lt;/pre&gt;\"\n    },\n    {\n      \"location\": \"page/#lists\",\n      \"title\": \"Lists\",\n      \"text\": \"&lt;p&gt;Sometimes you want numbered lists:&lt;/p&gt; &lt;ol&gt; &lt;li&gt;One&lt;/li&gt; &lt;li&gt;Two&lt;/li&gt; &lt;li&gt;Three&lt;/li&gt; &lt;/ol&gt; &lt;p&gt;Sometimes you want bullet points:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Start a line with a star&lt;/li&gt; &lt;li&gt;Profit!&lt;/li&gt; &lt;/ul&gt;\"\n    }\n  ]\n}\n</code></pre> <pre><code>{\n  ...\n  \"docs\": [\n    {\n      \"location\": \"page/\",\n      \"title\": \"Example\",\n      \"text\": \"Example Text It's very easy to make some words bold and other words italic with Markdown. You can even add links , or even code : if (isAwesome) { return true } Lists Sometimes you want numbered lists: One Two Three Sometimes you want bullet points: Start a line with a star Profit!\"\n    },\n    {\n      \"location\": \"page/#example\",\n      \"title\": \"Example\",\n      \"text\": \"\"\n    },\n    {\n      \"location\": \"page/#text\",\n      \"title\": \"Text\",\n      \"text\": \"It's very easy to make some words bold and other words italic with Markdown. You can even add links , or even code : if (isAwesome) { return true }\"\n    },\n    {\n      \"location\": \"page/#lists\",\n      \"title\": \"Lists\",\n      \"text\": \"Sometimes you want numbered lists: One Two Three Sometimes you want bullet points: Start a line with a star Profit!\"\n    }\n  ]\n}\n</code></pre> <p>If we inspect the search index again, we can see how the situation improved:</p> <ol> <li> <p>Content is included only once: the search index does not include the     content of the page twice, as only the sections of a page are part of the     search index. This leads to a significant reduction in size, fewer bytes to     transfer, and a smaller search index.</p> </li> <li> <p>Some structure is preserved: each section of the search index includes     a small subset of HTML to provide the necessary structure to allow for more     sophisticated search previews. Revisiting our example from before, let's     look at an excerpt:</p> NowBefore <pre><code>\u2026 links, or even &lt;code&gt;code&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;if (isAwesome){ \u2026 }\\n&lt;/code&gt;&lt;/pre&gt;\n</code></pre> <pre><code>\u2026 links , or even code : if (isAwesome) { \u2026 }\n</code></pre> <p>The punctuation issue is gone, as no additional whitespace is inserted, and the preserved markup yields additional context to make scanning search results more effective.</p> </li> </ol> <p>On to the next step in the process: tokenization.</p>"},{"location":"blog/2021/09/13/search-better-faster-smaller/#tokenizer-lookahead","title":"Tokenizer lookahead","text":"<p>The default tokenizer of lunr uses a regular expression to split a given string by matching each character against the <code>separator</code> as defined in <code>mkdocs.yml</code>. This doesn't allow for more complex separators based on lookahead or multiple characters.</p> <p>Fortunately, our new search implementation provides an advanced tokenizer that doesn't have these shortcomings and supports more complex regular expressions. As a result, Material for MkDocs just changed its own separator configuration to the following value:</p> <pre><code>[\\s\\-,:!=\\[\\]()\"/]+|(?!\\b)(?=[A-Z][a-z])|\\.(?!\\d)|&amp;[lg]t;\n</code></pre> <p>While the first part up to the first <code>|</code> contains a list of single control characters at which the string should be split, the following three sections explain the remainder of the regular expression.<sup>4</sup></p>"},{"location":"blog/2021/09/13/search-better-faster-smaller/#case-changes","title":"Case changes","text":"<p>Many programming languages use <code>PascalCase</code> or <code>camelCase</code> naming conventions. When a user searches for the term <code>case</code>, it's quite natural to expect for <code>PascalCase</code> and <code>camelCase</code> to show up. By adding the following match group to the separator, this can now be achieved with ease:</p> <pre><code>(?!\\b)(?=[A-Z][a-z])\n</code></pre> <p>This regular expression is a combination of a negative lookahead (<code>\\b</code>, i.e., not a word boundary) and a positive lookahead (<code>[A-Z][a-z]</code>, i.e., an uppercase character followed by a lowercase character), and has the following behavior:</p> <ul> <li><code>PascalCase</code> <code>Pascal</code>, <code>Case</code></li> <li><code>camelCase</code> <code>camel</code>, <code>Case</code></li> <li><code>UPPERCASE</code> <code>UPPERCASE</code></li> </ul> <p>Searching for  searchHighlight now brings up the section discussing the <code>search.highlight</code> feature flag, which also demonstrates that this now even works properly for search queries.<sup>5</sup></p>"},{"location":"blog/2021/09/13/search-better-faster-smaller/#version-numbers","title":"Version numbers","text":"<p>Indexing version numbers is another problem that can be solved with a small lookahead. Usually, <code>.</code> should be considered a separator to split words like <code>search.highlight</code>. However, splitting version numbers at <code>.</code> will make them undiscoverable. Thus, the following expression:</p> <pre><code>\\.(?!\\d)\n</code></pre> <p>This regular expression matches a <code>.</code> only if not immediately followed by a digit <code>\\d</code>, which leaves version numbers discoverable. Searching for  7.2.6 brings up the 7.2.6 release notes.</p>"},{"location":"blog/2021/09/13/search-better-faster-smaller/#htmlxml-tags","title":"HTML/XML tags","text":"<p>If your documentation includes HTML/XML code examples, you may want to allow users to find specific tag names. Unfortunately, the <code>&lt;</code> and <code>&gt;</code> control characters are encoded in code blocks as <code>&amp;lt;</code> and <code>&amp;gt;</code>. Now, adding the following expression to the separator allows for just that:</p> <pre><code>&amp;[lg]t;\n</code></pre> <p>We've only just begun to scratch the surface of the new possibilities tokenizer lookahead brings. If you found other useful expressions, you're invited to share them in the comment section.</p>"},{"location":"blog/2021/09/13/search-better-faster-smaller/#accurate-highlighting","title":"Accurate highlighting","text":"<p>Highlighting is the last step in the process of search and involves the highlighting of all search term occurrences in a given search result. For a long time, highlighting was implemented through dynamically generated regular expressions.<sup>6</sup></p> <p>This approach has some problems with non-whitespace languages like Japanese or Chinese<sup>3</sup> since it only works if the highlighted term is at a word boundary. However, Asian languages are tokenized using a dedicated segmenter, which cannot be modeled with regular expressions.</p> <p>Now, as a direct result of the new tokenization approach, our new search implementation uses token positions for highlighting, making it exactly as powerful as tokenization:</p> <ol> <li> <p>Word boundaries: as the new highlighter uses token positions, word     boundaries are equal to token boundaries. This means that more complex cases     of tokenization (e.g., case changes, version numbers, HTML/XML tags),     are now all highlighted accurately.</p> </li> <li> <p>Context-awareness: as the new search index preserves some of the     structural information of the original document, the content of a section     is now divided into separate content blocks \u2013 paragraphs, code blocks, and     lists.</p> <p>Now, only the content blocks that actually contain occurrences of one of the search terms are considered for inclusion into the search preview. If a term only occurs in a code block, it's the code block that gets rendered, see, for example, the results of  twitter.</p> </li> </ol>"},{"location":"blog/2021/09/13/search-better-faster-smaller/#benchmarks","title":"Benchmarks","text":"<p>We conducted two benchmarks \u2013 one with the documentation of Material for MkDocs itself, and one with a very massive corpus of Markdown files with more than 800,000 words \u2013 a size most documentation projects will likely never reach:</p> Before Now Relative Material for MkDocs Index size 573 kB 335 kB \u201342% Index size (<code>gzip</code>) 105 kB 78 kB \u201327% Indexing time<sup>7</sup> 265 ms 177 ms \u201334% KJV Markdown<sup>8</sup> Index size 8.2 MB 4.4 MB \u201347% Index size (<code>gzip</code>) 2.3 MB 1.2 MB \u201348% Indexing time 2,700 ms 1,390 ms \u201348% <p>Benchmark results</p> <p>The results show that indexing time, which is the time that it takes to set up the search when the page is loaded, has dropped by up to 48%, which means the new search is up to 95% faster. This is a significant improvement, particularly relevant for large documentation projects.</p> <p>While 1,3s still may sound like a long time, using the new client-side search together with instant loading only creates the search index on the initial page load. When navigating, the search index is preserved across pages, so the cost does only have to be paid once.</p>"},{"location":"blog/2021/09/13/search-better-faster-smaller/#user-interface","title":"User interface","text":"<p>Additionally, some small improvements have been made, most prominently the more results on this page button, which now sticks to the top of the search result list when open. This enables the user to jump out of the list more quickly.</p>"},{"location":"blog/2021/09/13/search-better-faster-smaller/#whats-next","title":"What's next?","text":"<p>Our new search implementation is a big improvement to Material for MkDocs. It solves some long-standing issues which needed to be tackled for years. Yet, it's only the start of a search experience that is going to get better and better. Next up:</p> <ul> <li> <p>Context-aware search summarization: currently, the first two matching   content blocks are rendered as a search preview. With the new tokenization   technique, we laid the groundwork for more sophisticated shortening and   summarization methods, which we're tackling next.</p> </li> <li> <p>User interface improvements: as we now gained full control over the   search plugin, we can now add meaningful metadata to provide more context and   a better experience. We'll explore some of those paths in the future.</p> </li> </ul> <p>If you've made it this far, thank you for your time and interest in Material for MkDocs! This is the first blog article that I decided to write after a short [Twitter survey] made me to. You're invited to leave a comment to share your experiences with the new search implementation.</p> <ol> <li> <p>Prior to 5.0.0, search was carried out in the main thread  which locked up the browser, rendering it unusable. This problem was first reported in #904 and, after some back and forth, fixed and released in 5.0.0.\u00a0\u21a9</p> </li> <li> <p>At the time of writing, Just the Docs and Docusaurus use this method for generating search previews. Note that the latter also integrates with Algolia, which is a fully managed server-based solution.\u00a0\u21a9</p> </li> <li> <p>China and Japan are both within the top 5 countries of origin of users of Material for MkDocs.\u00a0\u21a9\u21a9</p> </li> <li> <p>As a fun fact: the <code>separator</code> default value of the search plugin being <code>[\\s\\-]+</code> always has been kind of irritating, as it suggests that multiple characters can be considered being a separator. However, the <code>+</code> is completely irrelevant, as regular expression groups involving multiple characters were never supported by lunr's default tokenizer.\u00a0\u21a9</p> </li> <li> <p>Previously, the search query was not correctly tokenized due to the way lunr treats wildcards, as it disables the pipeline for search terms that contain wildcards. In order to provide a good typeahead experience, Material for MkDocs adds wildcards to the end of each search term not explicitly preceded with <code>+</code> or <code>-</code>, effectively disabling tokenization.\u00a0\u21a9</p> </li> <li> <p>Using the separator as defined in <code>mkdocs.yml</code>, a regular expression was constructed that was trying to mimic the tokenizer. As an example, the search query <code>search highlight</code> was transformed into the rather cumbersome regular expression <code>(^|&lt;separator&gt;)(search|highlight)</code>, which only matches at word boundaries.\u00a0\u21a9</p> </li> <li> <p>Smallest value of ten distinct runs.\u00a0\u21a9</p> </li> <li> <p>We agnostically use KJV Markdown as a tool for testing to learn how Material for MkDocs behaves on large corpora, as it's a very large set of Markdown files with over 800k words.\u00a0\u21a9</p> </li> </ol>"},{"location":"blog/2023/10/02/sunsetting-gitter-towards-efficient-community-engagement/","title":"Sunsetting Gitter: Towards Efficient Community Engagement","text":"<p>As we're starting to build a team around Material for MkDocs, we've decided to sunset and archive our Gitter channel on October 13, 2023 in favor of GitHub Discussions.</p> <p>As part of our efforts to improve the processes for maintaining Material for MkDocs and for supporting the community, we have reviewed the use of different communication channels. At the moment, both Gitter and GitHub Discussions allow to ask the community for support and to discuss ideas and issues. In the past weeks, we have begun to question whether this duplication is in the best interest of our project. This post explains the rationale behind our decision.</p>"},{"location":"blog/2023/10/02/sunsetting-gitter-towards-efficient-community-engagement/#the-constraints-of-gitter","title":"The Constraints of Gitter","text":"<p>In the first years of Material for MkDocs, Gitter served as a helpful platform for quick community interactions and questions. However, there are some inherent constraints that necessitated a shift. Here's a breakdown of the challenges we encountered:</p> <ol> <li> <p>Thread utilization \u2013    Even with the introduction of threads, many Gitter users were reticent to    use them, leading to cluttered and disconnected conversations, making it     difficult to follow.</p> </li> <li> <p>Search and discovery \u2013    Gitter's structure and interface makes it cumbersome to search for and    retrieve past messages, resulting in lost insights and repeated conversations.</p> </li> <li> <p>User interface \u2013    After the acquisition by Element, the user interface of Gitter has    experienced a severe decline, becoming more complicated, less intuitive and    user-friendly.</p> </li> <li> <p>Access mandate \u2013    The necessity for users to grant access to their GitHub accounts to use    Gitter posed an unnecessary access barrier and potential security concerns.</p> </li> </ol>"},{"location":"blog/2023/10/02/sunsetting-gitter-towards-efficient-community-engagement/#github-discussions","title":"GitHub Discussions","text":"<p>Thankfully, GitHub Discussions emerged and continues to evolve to be a much better alternative, eliminating many of Gitter's constraints and offering enhanced functionality:</p> <ol> <li> <p>Threaded conversations \u2013    GitHub Discussions supports structured, threaded conversations, ensuring    discussions are coherent, contextual, and easy to follow for everyone.</p> </li> <li> <p>Integration and linking \u2013    the platform facilitates seamless linking to other discussions, issues, code,    and much more, enriching conversations and providing comprehensive context.</p> </li> <li> <p>A unified platform \u2013    GitHub acts as a one-stop shop for support, allowing users to access varied    resources and support channels in one place, greatly improving user    experience.</p> </li> <li> <p>Discoverability \u2013    GitHub Discussions are easily searchable and allow for categorization,    preventing loss of valuable insights and fostering knowledge sharing.</p> </li> </ol>"},{"location":"blog/2023/10/02/sunsetting-gitter-towards-efficient-community-engagement/#conclusion","title":"Conclusion","text":"<p>Sunsetting Gitter is a leap towards creating more efficient, user-friendly, and enriched community interactions. By consolidating communication to GitHub Discussions, we seek to mitigate the fragmentation of information, ease the user journey, and fortify the bonds within our community.</p> <p>This concentrated approach enables us to provide consistent, fast and quality support to our users. In the past, the nature of queries raised on Gitter typically necessitated supplementary information or reproductions, prompting us to advise users to initiate a discussion subsequently. The shift to a centralized discussion forum is designed to simplify and accelerate this procedure, ensuring swift and efficient resolutions for our community. It is a testament to our ongoing commitment to support the community that helps Material for MkDocs flourish.</p> <p>We are confident that this streamlined approach will spur more fruitful discussions, innovative ideas, and collective growth, and we are excited to continue our journey with the unwavering support and active participation of our community.</p>"},{"location":"blog/2021/12/27/the-past-present-and-future/","title":"The past, present and future","text":"<p>2021 was a fantastic year for this project as we shipped many new awesome features, saw significant user growth and leveraged GitHub Sponsors to make the project sustainable.</p> <p>Today, together, MkDocs and Material for MkDocs are among the most popular options when it comes to choosing a static site generator and theme for your technical documentation project. Material for MkDocs ensures that your content is always perfectly presented to your audience, regardless of screen resolution or device capabilities. It has evolved to a framework for technical writing, offering many features, some of which are yet to be found in other static site generators. However, we're far from the end, as 2022 is going to bring some interesting new capabilities.</p> <p>This article showcases all features that were added in 2021 and gives an outlook on what's going to drop in 2022. Additionally, it provides some context on the history of the project.</p>"},{"location":"blog/2021/12/27/the-past-present-and-future/#a-little-history","title":"A little history","text":"<p>In 2015, albeit 10 years in the industry, I was still quite new in Open Source. I wanted to release my latest Open Source project protobluff, a zero-copy Protocol Buffers implementation for C, which I've created as part of my former startup. As the project has a significant degree of complexity, I quickly realized that I was in need of good user documentation.</p> <p>After evaluating static site generators in general and Hugo, Sphinx and MkDocs in particular, I quickly decided that MkDocs seemed a good choice, as it was specifically aimed at technical project documentation and easy to use. Unfortunately, all of the available themes looked dated and given that I'm a very visual person, I just couldn't convince myself to call it a day.</p> <p>I had to build a theme.</p> <p>Months later, in February 2016, I released the first version of Material for MkDocs (and with it, protobluff, the project I wanted to release in the first place), and it looked like this:</p> <p></p> <p>It was already fully responsive and overall, well, quite okayish, but barely customizable, as only the logo could be changed. Beyond that, it had no options: No color or navigation options, no instant loading, etc. The search was very rudimentary and only supported section titles:</p> <p></p> <p>It's important to know that at this point in time I've built Material for MkDocs for protobluff, the project I was really caring about. Almost 6 years later, nobody knows protobluff, but this little side project has taken off. If back in those days, you would've told me big organizations like AWS, Microsoft and CERN, as well as extremely popular Open Source projects like FastAPI and Kubernetes will be using this project in the future \u2013 I would've declared you insane.</p> <p>I still find the success of this project quite surprising, as I thought that themes exist in abundance and are very much a solved problem. There's no glory in themes, no stars to earn (remember that I was new in Open Source, so this was the metric I was optimizing for), as there are thousands and thousands of options. However, as the years progressed, I learned that execution matters: although Material for MkDocs solves a problem for which thousands of solutions exist, it excels in a specific niche, and that niche is to be known as technical project documentation.</p> <p>Today, this project is not only popular but funded by almost 300 individuals and organizations, resulting in a yearly budget of more than $50,000. This allows me to set aside enough time for the development of new features, bug fixing, stability improvement, issue triage and general support and still feels like a dream to me, as there are many failed stories of Open Source funding and people telling you: don't do Open Source, you'll be working for free.</p> <p>Making Open Source sustainable is, after all, possible in 2021.</p>"},{"location":"blog/2021/12/27/the-past-present-and-future/#2021-in-numbers","title":"2021 in numbers","text":"<p>2021 was an exciting year, as the project has seen significant growth.</p> <p>166k people visited the official documentation in 2021, totalling in 1,6m page views which is an increase of 83% when compared to 2020. The average visitor spends 1,5min on the site. While mobile phones make up 12% of visits, tablets only account for 0.6%. Visitors come from as many as 213 countries, which covers almost the whole world.</p>"},{"location":"blog/2021/12/27/the-past-present-and-future/#features","title":"Features","text":"<p>It's absolutely mind-blowing that 38 new features were added to Material for MkDocs throughout 2021 \u2013 that's a new feature every 9,6 days \u2013 which was only possible because of the constantly improving funding situation. Following is a list of all features shipped in alphabetical order, some of which are still exclusively available to sponsors as part of Insiders:</p> <ul> <li>Admonition inline blocks</li> <li>Advanced search highlighting</li> <li>Anchor tracking</li> <li>Back-to-top button</li> <li>Boosting pages in search</li> <li>Brand new search plugin</li> <li>Code annotations</li> <li>Code annotations: anchor links</li> <li>Code annotations: strip comments</li> <li>Code block titles</li> <li>Code block line anchors</li> <li>Color palette toggle</li> <li>Content tabs: improved support</li> <li>Content tabs: auto-linking</li> <li>Content tabs: animated indicator</li> <li>Cookie consent</li> <li>Custom admonition icons</li> <li>Dark mode support for images</li> <li>Dismissable announcement bar</li> <li>Excluding content from search</li> <li>Latest release tag</li> <li>Mermaid.js integration</li> <li>Navigation icons</li> <li>Remove generator notice</li> <li>Rich search previews</li> <li>Stay on page when switching versions</li> <li>Search highlighting</li> <li>Search sharing</li> <li>Search suggestions</li> <li>Section index pages</li> <li>Site language selection</li> <li>Social cards</li> <li>Sticky navigation tabs</li> <li>Tags with search integration</li> <li>Tokenizer with lookahead</li> <li>Versioning</li> <li>Version warning</li> <li>Was this page helpful?</li> </ul> <p>Additionally, a lot of bugs were fixed in the 1,000 commits that were pushed to the repository this year. The changelog includes a list of all fixes. Furthermore, a large amount of time was invested into refactoring the code base to keep it in good shape. While the <code>mkdocs-material</code> package was released 55 times, <code>mkdocs-material-insiders</code> was shipped 72 times.</p>"},{"location":"blog/2021/12/27/the-past-present-and-future/#funding","title":"Funding","text":"<p>In 2021, monthly funding increased from $1,050 in the beginning of January to more than $4,300 (Dec 27, 2021), totaling in a yearly budget of more than $50,000. Compared to last year, revenue from funding has increased by 617% \u2013 which is absolutely unbelievable:</p> <p></p> <p>I'm solely providing these numbers to fulfill the transparency pledge I'm giving to my awesome sponsors, and to show that it's possible to make existing Open Source projects sustainable by following a well-designed release strategy.</p> <p>You can learn about the strategy in the Insiders guide.</p>"},{"location":"blog/2021/12/27/the-past-present-and-future/#2022","title":"2022","text":"<p>Standing at the verge of the next year, it's safe to say that the project will continue to prosper and evolve, yielding many awesome features that will make technical writing more comfortable and flexible. Here's an excerpt of the features that will see the light of day in 2022:</p> <ul> <li> <p>Instant previews: instant previews will render a specific page section   inside a tooltip when hovering an internal link, which will allow to implement   things like glossaries. Further support for improving glossary functionality   will also be investigated.</p> </li> <li> <p>Text annotations: as a logical progression of code annotations which   were added in 2021, authors will be able to add annotations to plain text,   yielding excellent opportunities for side content. Of course, text annotations   will be as easy to use as code annotations.</p> </li> <li> <p>Navigation pruning: to optimize large documentation projects, Material   for MkDocs will introduce a new feature flag called <code>navigation.prune</code> that   will lead to significantly smaller HTML files for documentation projects with   huge navigation hierarchies.</p> </li> <li> <p>Navigation status badge: as an addition to the recently added   navigation icon support, a status will be attributable to   each page, allowing to mark a page in the navigation tree with an icon as    new or  deprecated.   Custom status types will also be supported.</p> </li> <li> <p>Card grids: as a further component in the toolkit of technical writing,   card grids will allow arranging content in grids, which is especially   useful for overview pages. They will allow to arrange arbitrary content,   including code blocks, admonitions, etc.</p> </li> <li> <p>Blog support: blogging support is still under investigation and expected   to be one of the major additions in 2022. Blogging will perfectly integrate   with writing documentation, allowing to use all components available in   Material for MkDocs.</p> </li> </ul> <p>This list is incomplete. Additionally, many new smaller features will be added next year, just as in 2021. You can follow @squidfunk on X to stay updated.</p> <p>Happy new year! </p>"},{"location":"blog/2024/08/19/how-were-transforming-material-for-mkdocs/","title":"Transforming Material for MkDocs","text":"<p>We are working on an amazing set of features which has required some behind-the-scenes work we are now ready to share in a series of posts. Here, we give an overview of our goals, features in the making, things that kept us up at night, and our commitment to Open Source.</p> <p>We know it's been quite a while since our last update, which is why we're eager to share what's happening in and around Material for MkDocs with you. For the largest part of 2024, we've been focused on transforming the core of Material for MkDocs preparing the ground for new, interconnected features that are amongst the most frequently requested.</p> <p>This article is the first in a series where we'll explore how we aim to support our users through improved information retrieval, provide better support for multi-lingual sites and versioning, as well as improve the overall authoring experience. We outline our vision for the projects' evolution and describe what we have been working on. In this and the coming blog posts, we will share our progress with you, and we're excited to hear your thoughts.</p> <p>Please note that this post includes several technical details in the footnotes, specifically on challenges. Feel free to skip them if you're not interested in the specifics.</p>"},{"location":"blog/2024/08/19/how-were-transforming-material-for-mkdocs/#a-success-story","title":"A success story","text":"<p>In 2024, Material for MkDocs has firmly established itself as a leading tool in the documentation framework landscape, with more than 5 million downloads each month as of this writing. What began as @squidfunk's personal project has evolved into a versatile resource for creating comprehensive documentation sites, personal websites, blogs, and notably, for managing knowledge both within and outside of organizations.</p> <p>With almost 50,000 public GitHub projects depending on Material for MkDocs, it's clear that the framework has made a substantial impact. Tens of thousands of authors rely on us to deliver documentation to millions of users each month.<sup>1</sup> Beyond its adoption by many popular Open Source projects, Material for MkDocs is trusted and financially supported by major corporations such as AWS, Microsoft, and Siemens, among many other companies and individuals. We're very grateful for the continued support we receive, which allows us to devote our time to this project, making writing documentation enjoyable.</p> <p>Our users particularly appreciate Material for MkDocs for its ease of use and straightforward setup. It simplifies the process by handling the complexities of web technologies for you, so you can build a production-ready static site in minutes without needing to invest years into mastering frontend development or JavaScript. This makes it accessible to a wide range of users, regardless of their technical background. Additionally, Material for MkDocs is MIT-licensed and free to use, which has contributed to its widespread adoption, and allows everybody to build sophisticated documentation sites at no cost.</p> <p>Our vision is to provide you with the tools that allow you to own your docs, enable you to develop your own processes for producing amazing documentation and to avoid being locked into costly subscription services even for doing simple things. We believe it is important that these tools should be easy to set up and configure to suit your needs but should also give you the freedom to adapt them further, if needed. This is why we are always striving to ensure our architectures are modular and future-proof.<sup>2</sup></p>"},{"location":"blog/2024/08/19/how-were-transforming-material-for-mkdocs/#challenges","title":"Challenges","text":"<p>Now, let's talk about our journey and the particular challenges we're addressing. With \"we\", we're referring to the incredible team that @squidfunk was fortunate to build around his original work, thanks to the financial support he receives from his sponsors. This remarkable team includes @alexvoss and @katharinalisalin, whose invaluable contributions in research, development, and community support have been essential to the project's ongoing success.</p> <p>Together, we've started exploring new technologies, incorporating the feedback we received from our users, and rethinking critical components from first principles, serving our growing community one of the best frameworks to create documentation.</p> <p>This section highlights the key areas we've been focusing on.</p>"},{"location":"blog/2024/08/19/how-were-transforming-material-for-mkdocs/#search-and-discovery","title":"Search and discovery","text":"<p>From our perspective, search is a cornerstone of any effective documentation site, enabling users to swiftly locate the information they need. From the start, we've relied on Lunr.js, a popular client-side search library that has streamlined the deployment of documentation sites without needing an external service. Over the years, Lunr.js has served us well by answering millions of queries on sites built with Material for MkDocs. Yet, as our users' needs evolved, we encountered limitations that proved difficult to overcome.</p> <p>We learned that the BM25 ranking algorithm at the core of Lunr.js (as in many other search implementations) isn't well-suited for effective and stable typeahead. Adding new documents can influence existing rankings, requiring manual adjustments<sup>3</sup> that are cumbersome and hard to scale. Furthermore, Lunr.js has performance issues that stem from its design not fully leveraging modern JavaScript engines and optimizations, making it slower and memory-intensive.<sup>4</sup></p> <p>Over the last years, we've invested substantially into improving the search experience. For instance, expanding Lunr.js' functionality to add support for rich search previews and tokenizer lookahead demanded substantial engineering effort. Lunr.js allows to customize tasks such as stemming, stopword filtering, and trimming with pipeline functions, but it makes it particularly hard to add extensions like term highlighting or alternative ranking methods. Compounded by the fact that Lunr.js has been unmaintained since 2020, it became clear that we needed to find a more powerful solution. We've looked at alternative JavaScript-based libraries to keep our client-side search, but none met our requirements or lived up to our expectations.</p> <p>To address these challenges, we've embarked on developing a new search system from first principles that not only matches but already exceeds the capabilities of Lunr.js. Built from the ground up, this system is faster, more compact, and most importantly: modular. It is based on a growing core evolving around two core concepts we isolated to be essential \u2013 engines and plugins \u2013 allowing for flexible configuration and assembly of components like text indexing, vector embeddings, filtering, ranking, highlighting, and more. Every part of it can be replaced or extended, enabling users to tailor the search system to their specific needs.</p> <p>Our new search system, which we will release as a separate MIT-licensed Open Source project, is designed to handle a wide range of scenarios \u2014 from small blogs to large documentation projects. Of course, it supports offline use and integrates seamlessly with both client and server environments. The advanced ranking system provides fine-tuned control, and integration with third-party services is now more straightforward.</p> <p> Goal \u2013 Empower users to quickly find the information they need while freeing authors from managing external services, by providing a search system that adapts to diverse content types.</p> <p>You might wonder why it's not yet available. The process of developing this system from scratch and uncovering its potential has led us to re-evaluate core concepts of Material for MkDocs. As a result, we've decided to postpone the release of the new search system to integrate it into the broader update that we've started to work on. If you keep on reading, you'll learn about further reasons why we've decided to follow this approach.</p> <p>We're excited to share more details about this update in one of the next posts in this series.</p>"},{"location":"blog/2024/08/19/how-were-transforming-material-for-mkdocs/#translations-and-versioning","title":"Translations and versioning","text":"<p>Supporting multi-language sites in MkDocs is the most requested feature on our discussion board and in conversations with users, yet it presents significant challenges, as MkDocs does not natively support it. The same applies to versioning, which also involves synchronisation of multi-project builds. While the MkDocs ecosystem has developed various plugins and tools to address these issues, there is still substantial untapped potential. We began exploring these areas but quickly encountered problems that hindered our progress.</p> <p>As you may know, our initial effort involved the projects plugin that aims to extend MkDocs to add support for multi-project environments as a solid foundation to support multi-language sites and versioning. Unfortunately, we encountered significant challenges due to MkDocs' internal architecture and design constraints, which we're working actively on resolving.<sup>5</sup></p> <p> Goal \u2013 Enable scaling documentation to any size or team structure by offering seamless methods for integrating multiple documentation projects, whether they involve different languages, versions, or distinct sections of an overall body of work.</p> <p>As a result, we are developing a new approach to offer a more comprehensive and robust solution for both multi-language support and versioning. This new approach also intersects with adjacent functionalities like search, as many of our users are interested in federated search capabilities that combine results from multiple documentation sites into a unified search interface. Overcoming this challenge is one of the major hurdles we need to address before releasing the new search system.</p>"},{"location":"blog/2024/08/19/how-were-transforming-material-for-mkdocs/#editing-and-collaboration","title":"Editing and collaboration","text":"<p>We had considered developing a live editor in response to MkDocs' performance issues with large projects, which in most cases stem from compute-intensive plugins that don't employ caching. A proof of concept based on Pyodide (= running Python in the browser) generated significant interest among users and prompted many organizations and individuals to share their collaborative workflows for feedback. Sadly, implementing this live editor proved to be very challenging, as it would require rebuilding substantial parts of MkDocs.<sup>6</sup> After discontinuing work on this approach, our progress with multi-project support has renewed our belief that we can finally solve the sluggish editing experience that was reported several times over the last years.<sup>7</sup></p> <p>This brings us to collaboration, which wasn't initially on our list of priorities. However, throughout 2024, conversations with various organizations and maintainers of popular Open Source projects highlighted a frequent request for enhanced collaboration features. Many users expressed a need for capabilities that would allow non-technical team members to suggest and make changes to the documentation. We're genuinely grateful for this feedback, as it has come at a pivotal time. We recognize the need to streamline tracking and discussing changes, as well as to facilitate drive-by contributions.</p> <p> Goal \u2013 Everyone, regardless of their technical skill level, can easily work on and improve the documentation and contribute to a growing corpus of knowledge.<sup>9</sup></p> <p>This focus on collaboration aligns with how knowledge is managed in enterprises. In large organizations, documentation often exists in information silos \u2014 decentralized yet essential repositories of information. We understand the need to be able to unify these disparate sources into a coherent body of knowledge while preserving decentralized ownership. This also nicely aligns with our previously outlined work on multi-project support, as well as the new search system to implement federated search among multiple projects.</p>"},{"location":"blog/2024/08/19/how-were-transforming-material-for-mkdocs/#large-language-models-llms","title":"Large Language Models (LLMs)","text":"<p>Almost a year ago, we introduced an experimental chatbot on our documentation site. It quickly became one of the most anticipated features, with users requesting the ability to deploy similar functionality on their own sites, underscoring the growing demand for interactive documentation tools. However, we found that adding to the myriad of existing chat solutions and simply building another thin wrapper on top of ChatGPT is nonsense.</p> <p> Goal \u2013 We're envisioning creating a unified interface that seamlessly integrates advanced search, chat, and summarization features, providing an interactive documentation experience.</p> <p>As we delved into this ambitious project, we gained valuable insights from user feedback. Users began interacting with the chatbot in their native languages, an outcome we hadn't anticipated given that our documentation is in English. Remarkably (or obviously to those that work on LLMs year round), the chatbot responded in the same language. This ability of LLMs is one of the genuinely exciting features of these machine learning models as it has the potential to improve the accessibility of the documentation. However, while we employed state-of-the-art RAG methodologies, the results were mixed, and occasional hallucinations surfaced.</p> <p>These experiences led us to prioritize enhancing our search capabilities before integrating LLM-based features. Building a search engine from scratch was already a substantial effort, and adding more complexity without a solid search foundation would be premature. By rearchitecting our search functionalities, we aim to create a robust platform that will seamlessly support advanced information retrieval and deliver a cohesive interactive documentation experience.</p>"},{"location":"blog/2024/08/19/how-were-transforming-material-for-mkdocs/#team-transparency-and-growth","title":"Team, transparency, and growth","text":"<p>While we navigate the challenges and explore the opportunities of this project, we consider it essential to demonstrate how we're building a solid foundation for its continued growth and success. Please consider this an overview rather than a formal roadmap \u2014 our detailed plans are in the works. The goals we've highlighted represent the most impactful areas we aim to address.</p> <p>Thanks to the generous support from our sponsors, we're fortunate to be assembling a team capable of dedicating significant time and expertise to this endeavor. This newfound capacity allows us to delve deeper into core development while also engaging more comprehensively with our user community. A special mention goes to @kamilkrzyskow, one of our invaluable community experts, who has been essential in supporting users and fostering discussions on our platform.</p> <p>With the team's support, @squidfunk can concentrate on the heart of development, while we have begun investing in user research. This effort is helping us understand how organizations and individuals interact with our tools, guiding the project's future direction based on real feedback from numerous conversations with users and companies.</p> <p>Looking to expand our team further, we are committed to improving transparency and communication. Our previous work often happened behind the scenes due to time constraints, but we're now focused on making our processes more open and inviting for new contributors. By embracing this collaborative approach, we aim to enhance our tools and ensure they meet the evolving needs of our community.</p>"},{"location":"blog/2024/08/19/how-were-transforming-material-for-mkdocs/#whats-ahead-of-us","title":"What's ahead of us","text":"<p>As we look into the future, some of the groundwork we're laying now is crucial for the exciting developments on the horizon. Many of the initiatives we've discussed represent foundational work that will set the stage for much more ambitious and innovative features. Once these core elements are in place, we'll deliver a range of exciting new functionalities that align with our vision and goals.</p> <p>In the coming months, we'll be sharing more details about our plans and how they will contribute to our overarching objectives. While growth and innovation are at the forefront of our plans, we want to assure you that our core values remain unchanged. We are committed to maintaining the principles that have guided us thus far, ensuring that our growth is both healthy and consistent:</p> <ul> <li> <p>Against recent industry trends with companies moving away from core ideas of Open Source, we are doubling down on our commitment to Open Source because we believe it's at the heart of the value proposition of our work and the docs as code approach.</p> </li> <li> <p>Our organic approach to growth is part of this strategy as it keeps us independent of individual funding sources and pressures to provide a return on investment, which is what causes many other projects to turn away from the principles of Open Source.</p> </li> <li> <p>Likewise, we are driven by the needs of the community for a rich ecosystem of adaptations of the core framework. Extensibility and modularity are key for this and we are working hard to improve the developer experience by providing clear interfaces.</p> </li> </ul> <p>Stay tuned for updates as we continue to build on our progress and explore new possibilities. We're excited about the future and look forward to sharing more with you as we advance.</p> <p>Martin, Alex and Kathi </p> <ol> <li> <p>We've collected invaluable feedback from enterprises and other Open Source maintainers, which revealed that the actual numbers are even higher. Many organizations leverage the framework within private infrastructures, such as self-hosted platforms like GitLab, for internal knowledge management. This suggests that the true reach of Material for MkDocs extends far beyond what is publicly visible.\u00a0\u21a9</p> </li> <li> <p>The built-in plugins that Material for MkDocs ships perfectly outline this principle, as they are complementary to each other and can be used in combination to build sophisticated pipelines. This modular design allows users to pick and choose the features they need, ensuring that the framework remains lightweight and flexible.</p> <p>For instance, the privacy plugin can work together with the optimize plugin so that external assets can be passed through the same optimization pipeline as the rest of your documentation. This means you can store and edit unoptimized files outside of your repository, and let both plugins automatically build an optimized site for you.\u00a0\u21a9</p> </li> <li> <p>Boosting documents in BM25 can lead to challenges, particularly with a changing corpus of documents. Relevance is calculated based on term frequency and the importance of terms across the entire corpus. Boosting a document involves adjusting its weight to make it more prominent in search results.</p> <p>As new documents are added or existing ones are modified, the overall distribution of term frequencies and their importance can shift. This recalibration can diminish the effectiveness of the boost, making it harder to maintain consistent ranking across a changing dataset. Essentially, the boosted documents may not stay as prominent or relevant as intended, leading to imbalances and scalability issues in search results.\u00a0\u21a9</p> </li> <li> <p>Lunr.js uses JavaScript objects to index and manage search data, which introduces inefficiencies due to how JavaScript engines handle object operations. JavaScript engines optimize performance using techniques like inline caching and object shape optimization. However, these optimizations rely on predictable and consistent object structures.</p> <p>The dynamic nature of Lunr.js' indexing \u2014 where documents can have varying structures \u2014 prevents the engine from applying these optimizations effectively. This means that while JavaScript engines can optimize for fixed, predictable object structures, they struggle with the polymorphic and fluid nature of Lunr.js's indexing, leading to performance issues as the amount of data grows.\u00a0\u21a9</p> </li> <li> <p>When developing the projects plugin, we initially made good progress, including adding support for nested projects and allowing for a tree structure where sub-projects can have further sub-projects. However, we quickly encountered difficulties, particularly with cross-project navigation. To illustrate, imagine that each project can link to any other project, which makes handling these interconnections complex, especially when dealing with circular dependencies \u2014 such as Project A linking to Project B and vice versa.</p> <p>Implementing multi-project support in MkDocs is particularly challenging due to the lack of an official programmatic API, which complicates efforts to extend its functionality. Moreover, resolving navigation issues before building projects is crucial for ensuring proper interconnectivity. These challenges combined made the development of the projects plugin a complex endeavor.\u00a0\u21a9</p> </li> <li> <p>Our proof of concept supported some features of Material for MkDocs but didn't cover them all. For instance, integrating support for icons or linking between documents would have necessitated reimplementing parts of MkDocs to bypass a full rebuild \u2014 something we obviously wanted to avoid. Additionally, certain links, such as those to blog posts generated from schemas, are not merely translated but computed dynamically, which means they cannot be inferred by replacing the <code>.md</code> extension with <code>.html</code>.\u00a0\u21a9</p> </li> <li> <p>After we raised this issue with the maintainers of MkDocs again<sup>8</sup>, and maintainership changed mid 2024, work on a ground-up rewrite that aims to address slow reloads by rendering only the page currently being built has started. It's still unclear how this rewrite will integrate with the requirements of existing plugins. Complex plugins such as mkdocstrings, or our built-in blog and tags plugins require a coordinated build of all pages to accurately resolve links between pages and to computed resources, which cannot be determined without building the entire project.</p> <p>Update: The new maintainer now publicly stated that he's working towards a new version of MkDocs that does not require or support plugins, and mentions it will be equally capable through offering customization via templating, themes, and styling, which he also mentioned to us and several other users in a team call on August 1. In this call, we raised objections multiple times in regards to how this will impact the ecosystem, to no avail. No intention or roadmap for plugin support was provided. This development is orthogonal to our goal empowering users and organizations to adapt the core framework to their requirements by the means of modularity. We're working on resolving this situation, and will provide a way forward for our community.\u00a0\u21a9</p> </li> <li> <p>Previously raised issues include #2418, #2384, and #1900.\u00a0\u21a9</p> </li> <li> <p>We are actively aligning our future development efforts to address this, recognizing it as a key area for improvement. While it's not something we can deliver immediately, we are committed to making this vision a reality in our work.\u00a0\u21a9</p> </li> </ol>"},{"location":"changelog/","title":"Changelog","text":""},{"location":"changelog/#material-for-mkdocs","title":"Material for MkDocs","text":""},{"location":"changelog/#9.6.6","title":"9.6.6 March 1, 2025","text":"<ul> <li>Fixed #8040: Privacy plugin not replacing exteral assets (9.6.5 regression)</li> <li>Fixed #8031: Replace unmtaintained <code>regex</code> package in search plugin</li> </ul>"},{"location":"changelog/#9.6.5","title":"9.6.5 February 20, 2025","text":"<ul> <li>Fixed #8016: Tags listing not showing when when file name has spaces</li> <li>Fixed #8012: Privacy plugin crashes if HTTP download fails</li> </ul>"},{"location":"changelog/#9.6.4","title":"9.6.4 February 12, 2025","text":"<ul> <li>Fixed #7985: Blog content sometimes not stretching to full width</li> <li>Fixed #7978: Navigation rendering bug in Safari 18.3</li> </ul>"},{"location":"changelog/#9.6.3","title":"9.6.3 February 7, 2025","text":"<ul> <li>Fixed rendering of arrow heads in Mermaid.js class diagrams</li> <li>Fixed #7960: Tags plugin crashes on numeric metadata titles</li> </ul>"},{"location":"changelog/#9.6.2","title":"9.6.2 February 3, 2025","text":"<ul> <li>Fixed #7955: Excessively long words don't break on narrow screens</li> <li>Fixed #7947: Scope setting interferes with outdated version banner</li> </ul>"},{"location":"changelog/#9.6.1","title":"9.6.1 January 31, 2025","text":"<ul> <li>Fixed #7943: Tags plugin crashing due to merge error</li> </ul>"},{"location":"changelog/#9.6.0","title":"9.6.0 January 31, 2025","text":"<ul> <li>Added meta plugin</li> <li>Rewrite of the tags plugin</li> <li>Added support for allow lists in tags plugin</li> <li>Added support for and custom sorting in tags plugin</li> <li>Added support for related links in blog plugin</li> <li>Added support for custom index pages in blog plugin</li> <li>Added support for navigation subtitles</li> <li>Fixed #7924: Anchors might require two clicks when using instant navigation</li> </ul>"},{"location":"changelog/#9.5.50","title":"9.5.50 January 18, 2025","text":"<ul> <li>Fixed #7913: Social plugin renders attribute lists in page title</li> </ul>"},{"location":"changelog/#9.5.49","title":"9.5.49 December 16, 2024","text":"<ul> <li>Adjusted title color in dark mode for all supported Mermaid.js diagrams</li> <li>Fixed #7803: Privacy plugin crashes on generated files</li> <li>Fixed #7781: Mermaid.js flow chart title not visible in dark mode</li> </ul>"},{"location":"changelog/#9.5.48","title":"9.5.48 December 8, 2024","text":"<ul> <li>Fixed #7774: Disabling social cards doesn't work</li> </ul>"},{"location":"changelog/#9.5.47","title":"9.5.47 December 1, 2024","text":"<ul> <li>Fixed #7750: Numeric tags break search</li> <li>Fixed #7748: Blog plugin breaks when using future drafts (9.5.45 regression)</li> </ul>"},{"location":"changelog/#9.5.46","title":"9.5.46 November 25, 2024","text":"<ul> <li>Added support for removing <code>preload</code> hints in privacy plugin</li> <li>Fixed #7734: Code blocks in h5 headlines are uppercased</li> <li>Fixed #7725: Blog plugin crashing on missing timezone (9.5.45 regression)</li> </ul>"},{"location":"changelog/#9.5.45","title":"9.5.45 November 20, 2024","text":"<ul> <li>Reduced size of Docker image through multi-stage build</li> <li>Fixed #7708: Blog plugin crashing on YAML dates with timezones</li> </ul>"},{"location":"changelog/#9.5.44","title":"9.5.44 November 5, 2024","text":"<ul> <li>Fixed #7672: Font CSS 404's when using privacy plugin (9.5.43 regression)</li> </ul>"},{"location":"changelog/#9.5.43","title":"9.5.43 October 31, 2024","text":"<ul> <li>Added support for external images in SVGs in privacy plugin</li> <li>Fixed #7651: Privacy plugin doesn't handle quoted URLs in CSS</li> </ul>"},{"location":"changelog/#9.5.42","title":"9.5.42 October 20, 2024","text":"<ul> <li>Fixed #7625: Invalid encoding of boolean attributes in privacy plugin</li> <li>Fixed #7624: Crash when disabling privacy plugin (9.5.41 regression)</li> </ul>"},{"location":"changelog/#9.5.41","title":"9.5.41 October 15, 2024","text":"<ul> <li>Fixed #7619: Improved tooltip on logo disappears after instant navigation</li> <li>Fixed #7616: Race condition in built-in privacy plugin when inlining assets</li> <li>Fixed #7615: Comments and \"Was this page helpful?\" visible when printing</li> </ul>"},{"location":"changelog/#9.5.40","title":"9.5.40 October 10, 2024","text":"<ul> <li>Updated Latvian translations</li> <li>Fixed #7597: Social cards not using site name on home page</li> </ul>"},{"location":"changelog/#9.5.39","title":"9.5.39 September 29, 2024","text":"<ul> <li>Fixed #7226: not staying on page when using mike's canonical versioning</li> </ul>"},{"location":"changelog/#9.5.38","title":"9.5.38 September 26, 2024","text":"<ul> <li>Added Albanian translations</li> </ul>"},{"location":"changelog/#9.5.37","title":"9.5.37 September 25, 2024","text":"<ul> <li>Added 4<sup>th</sup> and 5<sup>th</sup> level ordered list styles</li> <li>Fixed #7548: Tags have no spacing in search</li> </ul>"},{"location":"changelog/#9.5.36","title":"9.5.36 September 21, 2024","text":"<ul> <li>Fixed #7544: Social cards incorrectly rendering HTML entities</li> <li>Fixed #7542: Improved support for setting custom list styles</li> </ul>"},{"location":"changelog/#9.5.35","title":"9.5.35 September 18, 2024","text":"<ul> <li>Fixed #7498: Search not showing for Vietnamese language</li> </ul>"},{"location":"changelog/#9.5.34","title":"9.5.34 August 31, 2024","text":"<ul> <li>Updated Mermaid.js to version 11 (latest)</li> </ul>"},{"location":"changelog/#9.5.33","title":"9.5.33 August 23, 2024","text":"<ul> <li>Fixed #7453: Incorrect position of tooltip when sorting table</li> </ul>"},{"location":"changelog/#9.5.32","title":"9.5.32 August 19, 2024","text":"<ul> <li>Fixed RXSS vulnerability via deep link in search results</li> <li>Added support for fetching latest release from GitLab</li> </ul>"},{"location":"changelog/#9.5.31","title":"9.5.31 August 2, 2024","text":"<ul> <li>Fixed #7405: DockerHub missing images &gt; 9.5.27 due to change in Alpine/APK</li> </ul>"},{"location":"changelog/#9.5.30","title":"9.5.30 July 23, 2024","text":"<ul> <li>Fixed #7380: Navigation icons disappearing on hover in Safari</li> <li>Fixed #7367: Blog readtime computation includes SVG text content</li> </ul>"},{"location":"changelog/#9.5.29","title":"9.5.29 July 14, 2024","text":"<ul> <li>Updated Galician translations</li> <li>Fixed #7362: Annotations in figure captions rendering incorrectly</li> </ul>"},{"location":"changelog/#9.5.28","title":"9.5.28 July 2, 2024","text":"<ul> <li>Fixed #7313: Improved tooltips mounted in sidebar when feature is disabled</li> </ul>"},{"location":"changelog/#9.5.27","title":"9.5.27 June 16, 2024","text":"<ul> <li>Updated Estonian translations</li> </ul>"},{"location":"changelog/#9.5.26","title":"9.5.26 June 6, 2024","text":"<ul> <li>Fixed #7232: Tab switches on scroll when linking tabs (9.5.19 regression)</li> <li>Fixed #7230: Blog author avatar broken when referring to local file</li> </ul>"},{"location":"changelog/#9.5.25","title":"9.5.25 May 27, 2024","text":"<ul> <li>Fixed #7209: Tags plugin crashing on numeric tags</li> </ul>"},{"location":"changelog/#9.5.24","title":"9.5.24 May 20, 2024","text":"<ul> <li>Fixed #7187: Version selector title rendering issue</li> </ul>"},{"location":"changelog/#9.5.23","title":"9.5.23 May 15, 2024","text":"<ul> <li>Fixed #7183: Edge case in anchor navigation when using instant navigation</li> <li>Fixed #6436: Version selector not showing version alias</li> </ul>"},{"location":"changelog/#9.5.22","title":"9.5.22 May 12, 2024","text":"<ul> <li>Fixed #7170: Copy button adds empty lines for line spans (9.5.18 regression)</li> <li>Fixed #7160: Version switching doesn't stay on page (9.5.5 regression)</li> <li>Fixed #5619: Links in Mermaid.js diagrams not discernible</li> </ul>"},{"location":"changelog/#9.5.21","title":"9.5.21 May 3, 2024","text":"<ul> <li>Fixed #7133: Ensure latest version of Mermaid.js is used</li> <li>Fixed #7125: Added warning for dotfiles in info plugin</li> </ul>"},{"location":"changelog/#9.5.20","title":"9.5.20 April 29, 2024","text":"<ul> <li>Fixed deprecation warning in privacy plugin (9.5.19 regression)</li> <li>Fixed #7119: Tags plugin emits deprecation warning (9.5.19 regression)</li> <li>Fixed #7118: Social plugin crashes if fonts are disabled (9.5.19 regression)</li> <li>Fixed #7085: Social plugin crashes on Windows when downloading fonts</li> </ul>"},{"location":"changelog/#9.5.19","title":"9.5.19 April 25, 2024","text":"<ul> <li>Updated MkDocs to 1.6 and limited version to &lt; 2</li> <li>Updated Docker image to latest Alpine Linux</li> <li>Removed <code>setup.py</code>, now that GitHub fully understands <code>pyproject.toml</code></li> <li>Improved interop of social plugin with third-party MkDocs themes</li> <li>Fixed #7099: Blog reading time not rendered correctly for Japanese</li> <li>Fixed #7097: Improved resilience of tags plugin when no tags are given</li> <li>Fixed #7090: Active tab indicator in nested content tabs rendering bug</li> </ul>"},{"location":"changelog/#9.5.18","title":"9.5.18 April 16, 2024","text":"<ul> <li>Refactored tooltips implementation to fix positioning issues</li> <li>Fixed #7044: Rendering glitch when hovering contributor avatar in Chrome</li> <li>Fixed #7043: Highlighted lines in code blocks cutoff on mobile</li> <li>Fixed #6910: Incorrect position of tooltip for page status in sidebar</li> <li>Fixed #6760: Incorrect position and overly long tooltip in tables</li> <li>Fixed #6488: Incorrect position and cutoff tooltip in content tabs</li> </ul>"},{"location":"changelog/#9.5.17","title":"9.5.17 April 2, 2024","text":"<ul> <li>Updated Serbian translations</li> <li>Fixed #7003: Confusing keyboard interaction for palette toggle</li> <li>Fixed #7001: Blog posts now show time by default (9.5.16 regression)</li> <li>Fixed edge case in backport of social plugin font loading logic</li> </ul>"},{"location":"changelog/#9.5.16","title":"9.5.16 March 31, 2024","text":"<ul> <li>Updated Russian translations</li> <li>Improved error handling and reporting in social plugin</li> <li>Improved error handling and reporting in privacy plugin</li> <li>Fixed blog plugin not allowing to use time in format strings</li> <li>Fixed #6983: Social plugin crashes because of Google Fonts API change</li> </ul>"},{"location":"changelog/#9.5.15","title":"9.5.15 March 23, 2024","text":"<ul> <li>Reverted fix for transparent iframes (9.5.14)</li> <li>Fixed #6929: Interference of social plugin and auto dark mode</li> <li>Fixed #6938: Giscus shows dark background in light mode (9.5.14 regression)</li> </ul>"},{"location":"changelog/#9.5.14","title":"9.5.14 March 18, 2024","text":"<ul> <li>Added support for hiding versions from selector when using mike</li> <li>Added init system to improve signal handling in Docker image</li> <li>Fixed edge cases in exclusion logic of info plugin</li> <li>Fixed inability to reset pipeline in search plugin</li> <li>Fixed syntax error in Finnish translations</li> <li>Fixed #6917: UTF-8 encoding problems in blog plugin on Windows</li> <li>Fixed #6889: Transparent iframes get background color</li> </ul>"},{"location":"changelog/#9.5.13","title":"9.5.13 March 6, 2024","text":"<ul> <li>Updated Slovak translations</li> <li>Improved info plugin interop with projects plugin</li> <li>Improved info plugin inclusion/exclusion logic</li> <li>Fixed info plugin not gathering files recursively</li> <li>Fixed #6750: Ensure info plugin packs up all necessary files</li> </ul>"},{"location":"changelog/#9.5.12","title":"9.5.12 February 29, 2024","text":"<ul> <li>Fixed #6846: Some meta tags removed on instant navigation (9.4.2 regression)</li> <li>Fixed #6823: KaTex not rendering on instant navigation (9.5.5 regression)</li> <li>Fixed #6821: Privacy plugin doesn't handle URLs with encoded characters</li> </ul>"},{"location":"changelog/#9.5.11","title":"9.5.11 February 24, 2024","text":"<ul> <li>Updated Finnish translation</li> </ul>"},{"location":"changelog/#9.5.10","title":"9.5.10 February 19, 2024","text":"<ul> <li>Updated Bahasa Malaysia translations</li> <li>Fixed #6783: Hide continue reading link for blog posts without separators</li> <li>Fixed #6779: Incorrect positioning of integrated table of contents</li> </ul>"},{"location":"changelog/#9.5.9","title":"9.5.9 February 10, 2024","text":"<ul> <li>Fixed navigation pruning with tabs and sections enabled</li> </ul>"},{"location":"changelog/#9.5.8","title":"9.5.8 February 7, 2024","text":"<ul> <li>Added Tamil translations</li> <li>Updated Esperanto translations</li> <li>Fixed relative images not being resolved for instant navigation</li> </ul>"},{"location":"changelog/#9.5.7","title":"9.5.7 February 3, 2024","text":"<ul> <li>Fixed #6731: Small images in figures are not centered</li> <li>Fixed #6719: Instant navigation breaks table of contents (9.5.5 regression)</li> </ul>"},{"location":"changelog/#9.5.6","title":"9.5.6 January 28, 2024","text":"<ul> <li>Fixed #6700: Missing styles for Mermaid.js labels with Markdown</li> </ul>"},{"location":"changelog/#9.5.5","title":"9.5.5 January 24, 2024","text":"<ul> <li>Updated Tagalog translations</li> <li>Updated Pillow to 10.2 to mitigate security vulnerabilities</li> <li>Improved resilience of instant navigation</li> <li>Fixed #6687: Updated Mermaid.js to version 10.7.0 (latest)</li> <li>Fixed #6652: Keyboard events in custom elements captured</li> <li>Fixed #6582: Instant navigation doesn't correctly handle alternate URLs</li> <li>Fixed #6565: Instant navigation doesn't allow for <code>onclick</code> handlers</li> <li>Fixed #6345: Instant navigation sometimes breaks browser back button</li> <li>Fixed #6334: Instant navigation doesn't correctly position anchors (Safari)</li> <li>Fixed #6275: Instant navigation doesn't correctly resolve after 404</li> <li>Fixed #6102: Instant navigation reloads page on same link navigation</li> </ul>"},{"location":"changelog/#9.5.4","title":"9.5.4 January 15, 2024","text":"<ul> <li>Fixed #6645: Local storage with invalid value can break site</li> <li>Fixed #6635: Tags icons before default ignored if default is set</li> </ul>"},{"location":"changelog/#9.5.3","title":"9.5.3 December 23, 2023","text":"<ul> <li>Limited version range of MkDocs to &lt; 1.6</li> <li>Updated Macedonian translations</li> <li>Fixed #6520: Group plugin crashes when using mike</li> <li>Fixed #6494: Hide author's email address if disabled in git-authors plugin</li> </ul>"},{"location":"changelog/#9.5.2","title":"9.5.2 December 11, 2023","text":"<ul> <li>Fixed types for <code>slugify</code> settings in blog plugin config</li> <li>Fixed #6469: Horizontal scrollbars on MathJax containers</li> </ul>"},{"location":"changelog/#9.5.1","title":"9.5.1 December 8, 2023","text":"<ul> <li>Updated Greek translations</li> <li>Fixed #6464: Privacy plugin cannot be enabled</li> <li>Fixed #6461: Sorting blog posts ignores time component in date</li> </ul>"},{"location":"changelog/#9.5.0","title":"9.5.0 December 7, 2023","text":"<p>Merged Insiders features of 'Goat's Horn' funding goal</p> <ul> <li>Added privacy plugin: automatic downloading of external assets</li> <li>Added support for card grids and grid layouts</li> <li>Added support for improved tooltips</li> <li>Added support for content tabs anchor links (deep linking)</li> <li>Added support for automatic dark/light mode</li> <li>Added support for document contributors</li> </ul>"},{"location":"changelog/#9.4.14","title":"9.4.14 November 26, 2023","text":"<ul> <li>Added support for linking authors in blog posts</li> </ul>"},{"location":"changelog/#9.4.13","title":"9.4.13 November 26, 2023","text":"<ul> <li>Fixed #6365: Blog plugin pagination links to previous pages broken</li> <li>Fixed #5758: Updated Mermaid.js to version 10.6.1 (latest)</li> </ul>"},{"location":"changelog/#9.4.12","title":"9.4.12 November 24, 2023","text":"<ul> <li>Improved blog plugin to generate Unicode-aware slugs by default</li> <li>Fixed non-deterministic order of categories in blog plugin</li> </ul>"},{"location":"changelog/#9.4.11","title":"9.4.11 November 23, 2023","text":"<ul> <li>Fixed #6364: Search plugin crashing when enabling theme while serving</li> <li>Fixed blog plugin crashing when disabling pagination</li> </ul>"},{"location":"changelog/#9.4.10","title":"9.4.10 November 19, 2023","text":"<ul> <li>Fixed #6356: Version selector can't be disabled via mike's configuration</li> <li>Fixed #6281: Navigation not rendering due to Safari bug (9.4.2 regression)</li> <li>Fixed #6261: Navigation expansion animates on first load (9.4.2 regression)</li> </ul>"},{"location":"changelog/#9.4.9","title":"9.4.9 November 17, 2023","text":"<ul> <li>Fixed #6344: Long entries cutoff in table of contents</li> <li>Fixed #6336: Custom template for glob archive not working with pagination</li> <li>Fixed #6328: Blog plugin crashes for locales with dashes, e.g. <code>pt-BR</code></li> <li>Fixed #6327: Copy-to-clipboard button doesn't trim trailing line feed</li> <li>Fixed #6302: Version strings not matched when using mike, only aliases</li> <li>Fixed instant navigation progress indicator for gzipped content in Chrome</li> <li>Fixed rendering bug on details marker rotation in Firefox</li> </ul>"},{"location":"changelog/#9.4.8","title":"9.4.8 November 5, 2023","text":"<ul> <li>Fixed invalid local address replacement when using instant loading</li> <li>Fixed #6275: Crash after navigation caused 404 when using instant loading</li> </ul>"},{"location":"changelog/#9.4.7","title":"9.4.7 October 27, 2023","text":"<ul> <li>Added Azerbaijani translations</li> </ul>"},{"location":"changelog/#9.4.6","title":"9.4.6 October 14, 2023","text":"<ul> <li>Updated Danish and Norwegian (Nynorsk) translations</li> <li>Fixed #6169: Blog post metadata layout overflows on small screens</li> </ul>"},{"location":"changelog/#9.4.5","title":"9.4.5 October 10, 2023","text":"<ul> <li>Fixed sidebar auto-positioning (9.4.2 regression)</li> <li>Fixed #6166: Improve group plugin compatibility with Python &lt; 3.10</li> <li>Fixed #6157: Hiding tags does not work (9.4.3 regression)</li> </ul>"},{"location":"changelog/#9.4.4","title":"9.4.4 October 5, 2023","text":"<ul> <li>Added support for overriding text to be copied for code blocks</li> <li>Fixed broken layout in some browsers at breakpoints when using zoom</li> <li>Fixed #6132: Incomplete search highlighting for code blocks in titles</li> </ul>"},{"location":"changelog/#9.4.3","title":"9.4.3 October 2, 2023","text":"<ul> <li>Added support for instant navigation progress indicator</li> <li>Improved spacing and alignment of tags</li> <li>Moved back-to-top button into separate partial</li> <li>Fixed #6104: Indentation for some code blocks lost in search</li> <li>Fixed #6094: Blog post metadata overlaps with footer on small screens</li> <li>Fixed #6069: Blog plugin crashes for categories with non-ASCII names</li> </ul> <p>Updated templates (diff)</p> <ul> <li><code>base.html</code></li> </ul>"},{"location":"changelog/#9.4.2","title":"9.4.2 September 25, 2023","text":"<ul> <li>Updated Slovenian translations</li> <li>Added animation to sidebar navigation expansion and collapse</li> <li>Added support for auto-replacement of document head for instant navigation</li> <li>Improved compatibility of new emoji extension with Python &lt; 3.10</li> <li>Switched regex dependency to use minimal version</li> <li>Refactored alignment and spacing of sidebar navigation</li> <li>Fixed expansion button not focusable via keyboard in sidebar navigation</li> <li>Fixed viewport offset restoration on first load when using instant navigation</li> <li>Fixed accidental highlight of non-clickable elements in blog plugin sidebar</li> <li>Fixed #6041: Blog plugin crashes when <code>nav</code> is defined and blog not included</li> <li>Fixed #5972: Blog plugin ignores section index pages in paginated views</li> <li>Fixed #5954: Repeated click on anchor ignored when using instant navigation</li> <li>Fixed #5742: Keyboard navigation broken when using instant navigation</li> </ul> <p>Updated templates (diff)</p> <ul> <li><code>partials/nav-item.html</code></li> <li><code>blog-post.html</code></li> </ul>"},{"location":"changelog/#9.4.1","title":"9.4.1 September 22, 2023","text":"<ul> <li>Improved colors and contrast in dark mode</li> <li>Improved admonition borders to match font weight</li> <li>Switched content tabs to neutral color</li> </ul>"},{"location":"changelog/#9.4.0","title":"9.4.0 September 21, 2023","text":"<ul> <li>Added Belarusian translations</li> <li>Added version info to entrypoint of package</li> <li>Added emoji extension as a replacement for <code>materialx</code></li> <li>Improved slate color scheme (dark mode) - now even darker</li> <li>Restructured project to improve development experience</li> <li>Updated MkDocs to 1.5.3</li> <li>Fixed #3890: Development mode crash on Linux</li> </ul>"},{"location":"changelog/#9.3.2","title":"9.3.2 September 19, 2023","text":"<ul> <li>Updated Slovenian translations</li> <li>Updated Python dependencies in requirements to use minimum versions</li> <li>Fixed #6017: Code highlighting inconsistent in Community and Insiders edition</li> <li>Fixed #6001: Contributor avatars display incorrectly in Firefox</li> <li>Fixed #6000: Blog post drafts are included in navigation</li> </ul>"},{"location":"changelog/#9.3.1","title":"9.3.1 September 11, 2023","text":"<ul> <li>Fixed crash of group plugin when used together with hooks</li> </ul>"},{"location":"changelog/#9.3.0","title":"9.3.0 September 11, 2023","text":"<ul> <li>Improved configuration sharing between Community and Insiders edition</li> <li>Added experimental built-in group plugin for enabling plugins conditionally</li> <li>Added new settings in tags plugin for enabling/disabling</li> <li>Dropped support for Python 3.7 (EOL)</li> </ul>"},{"location":"changelog/#9.2.8","title":"9.2.8 September 4, 2023","text":"<ul> <li>Updated Italian and Russian translations</li> <li>Fixed #5952: Combining blog and tags plugin leads to wrong links</li> <li>Fixed #5951: Blog plugin ignores post title in metadata</li> <li>Fixed #5949: Blog plugin ignores post linked in nav</li> </ul>"},{"location":"changelog/#9.2.7","title":"9.2.7 September 2, 2023","text":"<ul> <li>Switched dependencies to compatible release clauses</li> <li>Removed <code>readtime</code> and <code>lxml</code> dependencies for blog plugin</li> <li>Reduced size of Docker image to improve CI build performance</li> <li>Fixed #5945: Incorrect footer navigation for sibling pages of blog</li> <li>Fixed #5939: Page jumps when changing color palette (Firefox 117)</li> <li>Fixed #5901: Announcement bar reappears when using instant loading</li> <li>Fixed #5824: Allow to customize styles of sequence diagrams</li> </ul>"},{"location":"changelog/#9.2.6","title":"9.2.6 August 31, 2023","text":"<ul> <li>Added Basque translations</li> <li>Added template for simple redirects</li> <li>Improved blog plugin interop by moving view generation to <code>on_files</code></li> <li>Fixed #5924: Social plugin still checks dependencies when disabled</li> <li>Fixed #5916: Blog plugin crashes on Python 3.8 (9.2.0 regression)</li> </ul>"},{"location":"changelog/#9.2.5","title":"9.2.5 August 27, 2023","text":"<ul> <li>Fixed error in dirty serve mode when using blog plugin</li> <li>Fixed page title not being consistent in blog plugin pagination</li> <li>Fixed #5899: Blog plugin pagination breaks when disabling directory URLs</li> </ul>"},{"location":"changelog/#9.2.4","title":"9.2.4 August 26, 2023","text":"<ul> <li>Added version to bug report name in info plugin</li> <li>Updated Afrikaans translations</li> </ul>"},{"location":"changelog/#9.2.3","title":"9.2.3 August 22, 2023","text":"<ul> <li>Fixed blog plugin rendering wrongly with <code>markdown.extensions.toc</code></li> <li>Fixed blog plugin entrypoint generation</li> </ul>"},{"location":"changelog/#9.2.2","title":"9.2.2 August 22, 2023","text":"<ul> <li>Fixed #5880: Blog plugin failing when building a standalone blog</li> <li>Fixed #5881: Blog plugin not compatible with Python &lt; 3.10</li> </ul>"},{"location":"changelog/#9.2.1","title":"9.2.1 August 21, 2023","text":"<ul> <li>Fixed #5879: Blog plugin failing when building a standalone blog</li> <li>Fixed error in blog plugin when using draft tagging on future date</li> <li>Fixed error in blog plugin when toc extension is not enabled</li> </ul>"},{"location":"changelog/#9.2.0","title":"9.2.0 August 21, 2023","text":"<p>Additions and improvements</p> <ul> <li>Added blogging support via built-in blog plugin</li> <li>Added support for Chinese language segmentaiton in search plugin</li> <li>Added support for adding custom dates to blog posts</li> <li>Added support for paginating archive and category pages</li> <li>Added support for annotations (outside of code blocks)</li> <li>Added support for navigation icons</li> <li>Added support for navigation pruning</li> <li>Added support for navigation status</li> <li>Added support for customizing site icons</li> <li>Added support for customizing (code) annotation icons</li> <li>Added focus outline to admonitions and details</li> <li>Added prompt for bug report name to info plugin</li> <li>Added Luxembourgish translations</li> <li>Improved rendering of (code) annotation markers</li> <li>Improved print styles for (code) annotations</li> <li>Improved customizability of navigation tabs</li> <li>Improved interop of plugins with external tools like mike</li> <li>Improved interop of blog plugin with awesome pages plugin</li> <li>Improved header partial by moving buttons into separate partials</li> <li>Improved clarity of <code>site_url</code> warning in social plugin</li> <li>Improved blog plugin to automatically setup directory structure</li> <li>Switched info plugin to <code>importlib</code> to mitigate deprecations</li> <li>Automatically download ResizeObserver polyfill when necessary</li> <li>Automatically add iframe-worker polyfill when necessary in offline plugin</li> <li>Automatically focus and bring up keyboard on touch devices</li> <li>Updated Serbo-Croatian translations</li> <li>Updated MkDocs to 1.5.2</li> </ul> <p>Removals</p> <ul> <li>Removed Universal Analytics integration</li> <li>Removed ancient polyfills to reduce size of bundled JavaScript by 20%</li> <li>Removed necessity for <code>Array.flat</code> and <code>Array.flatMap</code> polyfill</li> <li>Removed announcement bar button when JavaScript is not available</li> </ul> <p>Fixes</p> <ul> <li>Fixed rendering of tags when announcement bar is present</li> <li>Fixed tags plugin rendering pages excluded by other plugins</li> <li>Fixed #5132: Blog plugin requires <code>nav</code> entry in <code>mkdocs.yml</code></li> <li>Fixed #5599: Insufficient contrast for default link color</li> <li>Fixed #5715: Blog plugin missing integrated table of contents in pagination</li> <li>Fixed #5806: Version selector not hoverable on some Android devices</li> <li>Fixed #5826: Blog post drafts with tags show up in tags index</li> </ul>"},{"location":"changelog/#9.1.21","title":"9.1.21 July 27, 2023","text":"<ul> <li>Fixed MkDocs 1.4 compat issue in social plugin (9.1.20 regression)</li> </ul>"},{"location":"changelog/#9.1.20","title":"9.1.20 July 27, 2023","text":"<ul> <li>Updated Sanskrit translations</li> <li>Fixed deprecation warnings for social plugin</li> </ul>"},{"location":"changelog/#9.1.19","title":"9.1.19 July 18, 2023","text":"<ul> <li>Added support for MkDocs 1.5+</li> <li>Fixed #5699: Improve error reporting in social plugin</li> </ul>"},{"location":"changelog/#9.1.18","title":"9.1.18 July 3, 2023","text":"<ul> <li>Updated Danish translations</li> <li>Added support for installing user requirements in Docker image</li> <li>Fixed #5655: Search separator with lookbehind breaks highlighting</li> </ul>"},{"location":"changelog/#9.1.17","title":"9.1.17 June 23, 2023","text":"<ul> <li>Fixed #5633: Code annotations with nested lists incorrectly mounted</li> <li>Fixed #5628: Regression in new social plugin configuration scheme</li> </ul>"},{"location":"changelog/#9.1.16","title":"9.1.16 June 15, 2023","text":"<ul> <li>Updated Indonesian translations</li> <li>Ensure scroll bar follows color scheme of operating system</li> </ul>"},{"location":"changelog/#9.1.15","title":"9.1.15 May 29, 2023","text":"<ul> <li>Fixed #5566: Indicate color scheme to operating system</li> <li>Fixed #5565: Update <code>Dockerfile</code> to latest version of base image</li> <li>Fixed #5554: Add additional version tags (<code>9</code>, <code>9.1</code>) to Docker image</li> <li>Fixed #5536: Strip tags of ARIA labels in table of contents</li> </ul>"},{"location":"changelog/#9.1.14","title":"9.1.14 May 20, 2023","text":"<ul> <li>Updated Armenian and Greek translations</li> </ul>"},{"location":"changelog/#9.1.13","title":"9.1.13 May 16, 2023","text":"<ul> <li>Fixed #5517: Social plugin crashes for some fonts (e.g. Open Sans)</li> </ul>"},{"location":"changelog/#9.1.12","title":"9.1.12 May 12, 2023","text":"<ul> <li>Updated Bengali (Bangla) translations</li> <li>Fixed #5503: Docker image publish errors on uppercase characters</li> <li>Fixed #5407: Auto-pause media when in hidden content tabs</li> </ul>"},{"location":"changelog/#9.1.11","title":"9.1.11 May 8, 2023","text":"<ul> <li>Fixed #5487: Social plugin crashes without options (9.1.10 regression)</li> </ul>"},{"location":"changelog/#9.1.10","title":"9.1.10 May 8, 2023","text":"<ul> <li>Added <code>cards_layout_options</code> setting for social cards</li> <li>Deprecated <code>cards_color</code> and <code>cards_font</code> setting for social cards</li> </ul>"},{"location":"changelog/#9.1.9","title":"9.1.9 May 2, 2023","text":"<ul> <li>Added Telugu, Kannada and Sanskrit translations</li> <li>Fixed #5428: Fixed margins for light/dark mode images in figures</li> <li>Fixed #5420: Social plugin crashing for some specific Google Fonts</li> <li>Fixed #5160: Instant loading makes code annotations jump (9.1.1 regression)</li> <li>Fixed #4920: Social plugin not loading logo from custom icon set</li> <li>Fixed social plugin crashing when only code font is specified</li> </ul>"},{"location":"changelog/#9.1.8","title":"9.1.8 April 24, 2023","text":"<ul> <li>Fixed #5417: Theme breaks when <code>palette</code> is not defined (9.1.7 regression)</li> </ul>"},{"location":"changelog/#9.1.7","title":"9.1.7 April 22, 2023","text":"<ul> <li>Updated Persian (Farsi) and Turkish translations</li> <li>Fixed #5401: Added missing flag to disable built-in tags plugin</li> <li>Fixed #5206: Ensure defaults are set for primary and accent colors</li> <li>Fixed unnecessary inclusion of palette CSS when unused</li> </ul>"},{"location":"changelog/#9.1.6","title":"9.1.6 April 7, 2023","text":"<ul> <li>Updated Persian (Farsi) translations</li> <li>Fixed #5300: Boxes in Mermaid sequence diagrams not color-abiding</li> </ul>"},{"location":"changelog/#9.1.5","title":"9.1.5 March 31, 2023","text":"<ul> <li>Updated Lithuanian and Japanese translations</li> <li>Updated Mermaid.js to version 9.4.3</li> <li>Fixed #5290: Footer previous/next labels cut-off for short page titles</li> </ul>"},{"location":"changelog/#9.1.4","title":"9.1.4 March 24, 2023","text":"<ul> <li>Fixed #5239: Instant loading breaks anchors in details (9.1.1 regression)</li> <li>Fixed #5211: Anchor following not working for Chinese (9.1.2 regression)</li> </ul>"},{"location":"changelog/#9.1.3","title":"9.1.3 March 14, 2023","text":"<ul> <li>Added Kurdish (Soran\u00ee) translations</li> <li>Updated Norwegian (Bokm\u00e5l), Portuguese and Romanian translations</li> <li>Improved compatibility with <code>mkdocs-jupyter</code> plugin</li> <li>Fixed #5198: Built-in search plugin not filtering <code>script</code> and <code>style</code> tags</li> <li>Fixed #5176: Back-to-top + instant loading not working (9.1.1 regression)</li> </ul>"},{"location":"changelog/#9.1.2","title":"9.1.2 March 9, 2023","text":"<ul> <li>Updated Icelandic, Korean and Swedish translations</li> <li>Fixed #5168: Mermaid text boxes overflow (9.0.13 regression)</li> <li>Fixed #5155: Table of contents not highlighting percent-encoded URLs</li> </ul>"},{"location":"changelog/#9.1.1","title":"9.1.1 March 5, 2023","text":"<ul> <li>Updated Czech and Thai translations</li> <li>Improved instant loading (scroll restoration, slow connections)</li> <li>Fixed #5023: Instant loading not allowing to go back to initial page</li> <li>Fixed #3797: Instant loading does not work with section anchors in Safari</li> </ul>"},{"location":"changelog/#9.1.0","title":"9.1.0 March 2, 2023","text":"<ul> <li>Docker image now available for <code>amd64</code>, <code>arm64</code> and <code>arm/v7</code></li> <li>Updated Chinese (Taiwanese) translations</li> <li>Generalized tag identifier implementation</li> <li>Fixed flickering of header shadow on load</li> <li>Fixed occasional flickering of announcement bar</li> </ul>"},{"location":"changelog/#9.0.15","title":"9.0.15 February 26, 2023","text":"<ul> <li>Updated Chinese (Traditional) translations</li> <li>Updated Hebrew translations</li> </ul>"},{"location":"changelog/#9.0.14","title":"9.0.14 February 23, 2023","text":"<ul> <li>Fixed #5072: Rendering bug on navigation expand button in Firefox</li> </ul>"},{"location":"changelog/#9.0.13","title":"9.0.13 February 18, 2023","text":"<ul> <li>Updated Uzbek translations</li> <li>Switched back to pre-9.0.0 headline detection in <code>content</code> partial</li> <li>Fixed #5062: Version warning not readable when using slate scheme</li> <li>Fixed #5061: Improved discernibility of table row hover color</li> <li>Fixed #5034: Sequence actors in Mermaid diagrams not color-abiding</li> <li>Fixed #4919: Allow to hide version warning in multiple versions</li> </ul>"},{"location":"changelog/#9.0.12","title":"9.0.12 February 9, 2023","text":"<ul> <li>Updated Catalan translations</li> <li>Fixed #4975: Mermaid entity relationship rendering diagrams bug</li> <li>Fixed #4924: Header title not reset when using instant loading</li> </ul>"},{"location":"changelog/#9.0.11","title":"9.0.11 February 3, 2023","text":"<ul> <li>Added Mastodon verification for social links (<code>rel=me</code>)</li> <li>Updated Italian translations</li> </ul>"},{"location":"changelog/#9.0.10","title":"9.0.10 February 2, 2023","text":"<ul> <li>Updated Arabic translations</li> <li>Updated Korean translations</li> <li>Updated Hungarian translations</li> <li>Updated Russian translations</li> <li>Fixed #4977: Improved accessibility for content tabs</li> <li>Fixed #4960: Sometimes anchor following doesn't bring last item into view</li> </ul>"},{"location":"changelog/#9.0.9","title":"9.0.9 January 30, 2023","text":"<ul> <li>Updated Bulgarian translations</li> <li>Updated Chinese (Simplified) translations</li> <li>Updated Dutch translations</li> <li>Updated Hindi translations</li> <li>Updated Japanese translations</li> <li>Updated Polish translations</li> </ul>"},{"location":"changelog/#9.0.8","title":"9.0.8 January 29, 2023","text":"<ul> <li>Updated Croatian translations</li> <li>Updated French translations</li> <li>Updated Hungarian translations</li> <li>Updated Portuguese (Brasilian) translations</li> <li>Updated Spanish translations</li> <li>Updated Ukrainian translations</li> <li>Updated Urdu translations</li> <li>Updated Vietnamese translations</li> </ul>"},{"location":"changelog/#9.0.7","title":"9.0.7 January 28, 2023","text":"<ul> <li>Improved accessibility of sidebar navigation</li> <li>Moved all translations into Community edition</li> <li>Updated Polish and Portuguese (Brasilian) translations</li> <li>Fixed info plugin terminating on subsequent reload when serving</li> <li>Fixed #4910: Sidebar navigation labels have invalid ARIA roles</li> <li>Fixed #4884: Search query terms can't be separated by colons</li> </ul>"},{"location":"changelog/#9.0.6","title":"9.0.6 January 19, 2023","text":"<ul> <li>Fixed #4883: Automatically disable info plugin when serving</li> <li>Fixed #4885: Search plugin crashes in some exotic cases (9.0.3 regression)</li> </ul>"},{"location":"changelog/#9.0.5","title":"9.0.5 January 14, 2023","text":"<ul> <li>Fixed #4842: Improved accessibility of search result list</li> </ul>"},{"location":"changelog/#9.0.4","title":"9.0.4 January 12, 2023","text":"<ul> <li>Fixed #4823: Improved contrast ratio in footer (9.0.2 regression)</li> <li>Fixed #4832: Set navigation items back to black (9.0.3 regression)</li> <li>Fixed #4843: Emojis broken due to maxcdn.com shutting down</li> <li>Upgraded Python Markdown Extensions to 9.9.1</li> </ul>"},{"location":"changelog/#9.0.3","title":"9.0.3 January 8, 2023","text":"<ul> <li>Improved discernibility of section index pages in navigation</li> <li>Improved collapsing of adjacent whitespace in search plugin</li> <li>Updated Indonesian translations</li> <li>Fixed view source of this page button when edit URL points to blob</li> <li>Fixed #4829: Search overlay does not close for active anchor result</li> <li>Fixed #4824: Search plugin crashes for <code>h[1-6]</code> contained in other elements</li> <li>Fixed #4804: Nested navigation items not expandable with keyboard</li> <li>Fixed #4689: anchor tracking not working for anchors in tables</li> <li>Upgraded to Mermaid 9.3.0</li> </ul>"},{"location":"changelog/#9.0.2","title":"9.0.2 January 4, 2023","text":"<ul> <li>Fixed #4823: Improved contrast ratio in footer to meet WCAG guidelines</li> <li>Fixed #4819: Social plugin crashes when card generation is disabled</li> <li>Fixed #4817: Search plugin crashes on numeric page titles in <code>nav</code></li> </ul>"},{"location":"changelog/#9.0.1","title":"9.0.1 January 3, 2023","text":"<ul> <li>Removed <code>pipdeptree</code> dependency for built-in info plugin</li> <li>Fixed appearance of linked tags when hovered (9.0.0 regression)</li> <li>Fixed #4810: Abbreviations run out of screen on touch devices</li> <li>Fixed #4813: View source and edit button links are the same</li> </ul>"},{"location":"changelog/#9.0.0","title":"9.0.0 January 2, 2023","text":"<p>Additions and improvements</p> <ul> <li>Added support for rich search previews</li> <li>Added support for tokenizer lookahead</li> <li>Added support for better search highlighting</li> <li>Added support for excluding content from search</li> <li>Added support for configurable search pipeline</li> <li>Added support for offline search via offline plugin</li> <li>Added support for multiple instances of built-in tags plugin</li> <li>Added support for removing copy-to-clipboard button</li> <li>Added support for removing footer navigation</li> <li>Added support for button to view the source of a page</li> <li>Improved readability of query string for search sharing</li> <li>Improved stability of search plugin when using <code>--dirtyreload</code></li> <li>Improved search result group button, now sticky and stable</li> <li>Updated Norwegian translations</li> <li>Updated MkDocs to 1.4.2</li> </ul> <p>Removals</p> <ul> <li>Removed deprecated alternative admonition qualifiers</li> <li>Removed <code>:is()</code> selectors (in output) for easier overriding</li> <li>Removed <code>.title</code> suffix on translations</li> <li>Removed legacy method for providing page title in feedback URL</li> <li>Removed support for indexing only titles in search</li> <li>Removed support for custom search transforms</li> <li>Removed support for custom search workers</li> <li>Removed temporary snow feature (easter egg)</li> </ul> <p>Fixes</p> <ul> <li>Fixed Norwegian and Korean language code</li> <li>Fixed detection of composition events in search interface</li> <li>Fixed search plugin not using title set via front matter</li> <li>Fixed search highlighting of tags</li> <li>Fixed search sharing URL using post transformed string</li> <li>Fixed theme-color meta tag getting out-of-sync with palette toggle</li> <li>Fixed prev/next page keyboard navigation when footer is not present</li> <li>Fixed overflowing navigation tabs not being scrollable</li> <li>Fixed inclusion of code block line numbers from search</li> </ul>"},{"location":"changelog/#8.5.11","title":"8.5.11 November 30, 2022","text":"<ul> <li>Let it snow, see https://x.com/squidfunk/status/1597939243090788352</li> </ul>"},{"location":"changelog/#8.5.10","title":"8.5.10 November 11, 2022","text":"<ul> <li>Adjusted CSS to better allow for custom primary and accent colors</li> <li>Fixed #4620: Primary color is not applied (8.5.9 regression)</li> </ul>"},{"location":"changelog/#8.5.9","title":"8.5.9 November 8, 2022","text":"<ul> <li>Fixed #4600: Illegible link colors for black and white primary colors</li> <li>Fixed #4594: Need to set schema to change link color</li> </ul>"},{"location":"changelog/#8.5.8","title":"8.5.8 November 3, 2022","text":"<ul> <li>Added support for always showing settings in cookie consent</li> <li>Fixed #4571: Buttons invisible if primary color is <code>white</code> or <code>black</code></li> <li>Fixed #4517: Illegible note in sequence diagram when using <code>slate</code> scheme</li> </ul>"},{"location":"changelog/#8.5.7","title":"8.5.7 October 22, 2022","text":"<ul> <li>Deprecated additional admonition qualifiers to reduce size of CSS</li> <li>Fixed #4511: Search boost does not apply to sections</li> </ul>"},{"location":"changelog/#8.5.6","title":"8.5.6 October 2, 2022","text":"<ul> <li>Modernized appearance of admonitions (with fallback, see docs)</li> <li>Improved appearance of inline code blocks in admonition titles</li> </ul>"},{"location":"changelog/#8.5.5","title":"8.5.5 October 1, 2022","text":"<ul> <li>Updated MkDocs to 1.4</li> <li>Fixed compatibility issues with MkDocs 1.4</li> <li>Fixed #4430: build error when enabling consent without repository URL</li> </ul>"},{"location":"changelog/#8.5.4","title":"8.5.4 September 30, 2022","text":"<ul> <li>Fixed expand icons shift on sidebar overflow (using <code>scrollbar-gutter</code>)</li> <li>Fixed #4429: Text in sequence diagrams overflows in Firefox</li> </ul>"},{"location":"changelog/#8.5.3","title":"8.5.3 September 20, 2022","text":"<ul> <li>Fixed build error when enabling cookie consent without analytics</li> <li>Fixed #4381: Code blocks render ligatures for some fonts</li> </ul>"},{"location":"changelog/#8.5.2","title":"8.5.2 September 18, 2022","text":"<ul> <li>Updated Mermaid.js to version 9.1.7</li> <li>Fixed overly large headlines in search results (8.5.0 regression)</li> <li>Fixed #4358: Navigation sections appear as clickable (8.5.0 regression)</li> <li>Fixed #4356: GitHub repository statistics fetched before cookie consent</li> </ul>"},{"location":"changelog/#8.5.1","title":"8.5.1 September 15, 2022","text":"<ul> <li>Fixed #4366: Removed dependencies with native extensions</li> </ul>"},{"location":"changelog/#8.5.0","title":"8.5.0 September 13, 2022","text":"<ul> <li>Added support for social cards</li> <li>Added support for code annotation anchor links (deep linking)</li> <li>Added support for code annotation comment stripping (syntax modifier)</li> <li>Added support for sidebars scrolling automatically to active item</li> <li>Added support for anchor following table of contents (= auto scroll)</li> <li>Added support for tag icons</li> </ul>"},{"location":"changelog/#8.4.4","title":"8.4.4 September 12, 2022","text":"<ul> <li>Moved comments integration to separate partial (<code>comments.html</code>)</li> </ul>"},{"location":"changelog/#8.4.3","title":"8.4.3 September 7, 2022","text":"<ul> <li>Added Simple Icons to bundled icons (+2,300 icons)</li> <li>Added support for changing edit icon</li> <li>Moved page actions to separate partial (<code>actions.html</code>)</li> <li>Fixed #4291: Version switching doesn't stay on page when anchors are used</li> <li>Fixed #4327: Links in data tables do not receive link styling</li> </ul>"},{"location":"changelog/#8.4.2","title":"8.4.2 August 27, 2022","text":"<ul> <li>Updated Slovenian translations</li> <li>Fixed #4277: Feedback widget hidden after navigation with instant loading</li> <li>Fixed numeric tags in front matter breaking search functionality</li> </ul>"},{"location":"changelog/#8.4.1","title":"8.4.1 August 21, 2022","text":"<ul> <li>Updated Croatian and Hebrew translations</li> </ul>"},{"location":"changelog/#8.4.0","title":"8.4.0 August 13, 2022","text":"<ul> <li>Added support for cookie consent</li> <li>Added support for feedback widget (Was this page helpful?)</li> <li>Added support for dismissible announcement bar</li> <li>Added Armenian, Lithuanian, Tagalog, and Urdu translations</li> </ul>"},{"location":"changelog/#8.3.9","title":"8.3.9 July 4, 2022","text":"<ul> <li>Updated Taiwanese translations for search</li> <li>Allow ids for content tabs with special characters (for mkdocstrings)</li> <li>Fixed #4083: home not clickable when using versioning (8.3.5 regression)</li> </ul>"},{"location":"changelog/#8.3.8","title":"8.3.8 June 24, 2022","text":"<ul> <li>Fixed #4053: Limit width of videos to content area</li> <li>Fixed empty tags in front matter breaking search</li> </ul>"},{"location":"changelog/#8.3.7","title":"8.3.7 June 22, 2022","text":"<ul> <li>Fixed search being stuck initializing when using tags (8.3.4 regression)</li> </ul>"},{"location":"changelog/#8.3.6","title":"8.3.6 June 16, 2022","text":"<ul> <li>Fixed #4028: Links not clickable when using versioning (8.3.5 regression)</li> </ul>"},{"location":"changelog/#8.3.5","title":"8.3.5 June 14, 2022","text":"<ul> <li>Fixed #4012: Stay on page not working for alias of active version</li> </ul>"},{"location":"changelog/#8.3.4","title":"8.3.4 June 11, 2022","text":"<ul> <li>Fixed #4004: Tags with multiple words not searchable</li> </ul>"},{"location":"changelog/#8.3.3","title":"8.3.3 June 7, 2022","text":"<ul> <li>Fixed #4000: Mermaid diagrams too dark in dark mode (8.3.0 regression)</li> </ul>"},{"location":"changelog/#8.3.2","title":"8.3.2 June 5, 2022","text":"<ul> <li>Fixed #3987: Custom admonition icons don't work when defining color palette</li> </ul>"},{"location":"changelog/#8.3.1","title":"8.3.1 June 4, 2022","text":"<ul> <li>Bump required Jinja version to 3.0.2</li> <li>Removed unnecessary conditions in templates</li> <li>Fixed scroll offset when content tabs are brought into view</li> <li>Fixed #3977: Content tabs snapping oddly in Firefox</li> <li>Fixed #3983: Missing condition in footer partial (8.3.0 regression)</li> </ul>"},{"location":"changelog/#8.3.0","title":"8.3.0 June 2, 2022","text":"<ul> <li>Added support for custom admonition icons</li> <li>Added support for linking of content tabs</li> <li>Added support for boosting pages in search</li> <li>Added support for hiding footer navigation</li> <li>Added previous/next indicators to content tabs</li> <li>Improved typeset link colors in light and dark modes</li> </ul>"},{"location":"changelog/#8.2.16","title":"8.2.16 May 28, 2022","text":"<ul> <li>Fixed #3957: Only animate code annotations when visible (save CPU cycles)</li> </ul>"},{"location":"changelog/#8.2.15","title":"8.2.15 May 14, 2022","text":"<ul> <li>Added Uzbek translations</li> <li>Fixed spacing for code block results in content tabs</li> </ul>"},{"location":"changelog/#8.2.14","title":"8.2.14 May 8, 2022","text":"<ul> <li>Fixed missing top right rounded border on admonition</li> <li>Fixed #3886: <code>4xx</code> status codes not handled when using instant loading</li> </ul>"},{"location":"changelog/#8.2.13","title":"8.2.13 May 2, 2022","text":"<ul> <li>Fixed #3865: Tags index links to tagged pages 404 on Windows</li> <li>Fixed #3866: Bump required Python version from 3.6+ to 3.7+</li> </ul>"},{"location":"changelog/#8.2.12","title":"8.2.12 April 30, 2022","text":"<ul> <li>Added support for GitHub-style hash fragments for dark/light images</li> <li>Improved rendering of nested code blocks in content tabs and annotations</li> <li>Fixed #3862: Upgraded to latest Pygments and Python Markdown Extensions</li> </ul>"},{"location":"changelog/#8.2.11","title":"8.2.11 April 25, 2022","text":"<ul> <li>Temporarily pinned Pygments to <code>&lt;2.12</code></li> <li>Temporarily pinned Python Markdown Extensions to <code>&lt;9.4</code></li> <li>Improved rendering of code annotation markers</li> </ul>"},{"location":"changelog/#8.2.10","title":"8.2.10 April 24, 2022","text":"<ul> <li>Added Macedonian translations</li> <li>Updated Mermaid.js to version 9.0.1</li> <li>Switched sidebar title in mobile navigation to bold font</li> <li>Fixed color of arrows in class and state diagrams for dark mode</li> <li>Fixed #3836: Inline admonitions overlayed by code block titles</li> </ul>"},{"location":"changelog/#8.2.9","title":"8.2.9 April 8, 2022","text":"<ul> <li>Mitigate flicker on color palette switch by disabling all transitions</li> <li>Fixed search suggestions not triggered when following deep link</li> <li>Fixed incorrectly computed header height when using instant loading</li> <li>Fixed #3782: Admonition titles have extra pixels on wide screens in Firefox</li> <li>Fixed #3802: Always render table of contents container (except when hidden)</li> </ul>"},{"location":"changelog/#8.2.8","title":"8.2.8 March 27, 2022","text":"<ul> <li>Bumped MkDocs version to 1.3.0 to mitigate breaking changes in Jinja</li> <li>Reverted Jinja version range limitation (added in 8.2.7)</li> <li>Improved styling of annotations and fixed borders of code blocks in tabs</li> <li>Added background color to code blocks in focused/hovered links</li> <li>Added check in tags plugin whether tags overview page exists</li> <li>Fixed #3744: Content tab indicator on wrong position when using back button</li> </ul>"},{"location":"changelog/#8.2.7","title":"8.2.7 March 24, 2022","text":"<ul> <li>Temporarily limit Jinja version range to &lt; 3.1 due to breaking changes</li> </ul>"},{"location":"changelog/#8.2.6","title":"8.2.6 March 23, 2022","text":"<ul> <li>Fixed #3695: Deprecation warning for unescaped backslashes in templates</li> <li>Fixed #3696: Annotations not mounted in some Terraform code blocks</li> <li>Fixed #3698: Annotations not mounted in long code blocks (8.2.5 regression)</li> </ul>"},{"location":"changelog/#8.2.5","title":"8.2.5 March 6, 2022","text":"<ul> <li>Fixed #3596: Mermaid not working when headline with name 'Mermaid' present</li> <li>Fixed #3643: Reduce time to render pages with thousands of code blocks</li> <li>Fixed #3665: Missing styles for Mermaid.js flowcharts cluster labels</li> </ul>"},{"location":"changelog/#8.2.4","title":"8.2.4 March 2, 2022","text":"<ul> <li>Fixed malformed Google Fonts URL when a font setting was omitted</li> <li>Fixed #3648: Fixed specificity issue with admonitions in lists</li> <li>Fixed #3653: Invalid outdated version banner URL when using instant loading</li> </ul>"},{"location":"changelog/#8.2.3","title":"8.2.3 February 27, 2022","text":"<ul> <li>Fixed #3578: Active element in table of contents off-by-one on large screens</li> </ul>"},{"location":"changelog/#8.2.2","title":"8.2.2 February 26, 2022","text":"<ul> <li>Added automatic removal of query parameter when search is closed</li> <li>Fixed #3599: Anchors always overridden when using navigation tracking</li> </ul>"},{"location":"changelog/#8.2.1","title":"8.2.1 February 17, 2022","text":"<ul> <li>Fixed module <code>material.plugins</code> not being found (8.2.0 regression)</li> </ul>"},{"location":"changelog/#8.2.0","title":"8.2.0 February 17, 2022","text":"<ul> <li>Added native support for Mermaid.js diagrams</li> <li>Added native support for tags (with search integration)</li> <li>Added support for staying on page when switching versions</li> </ul>"},{"location":"changelog/#8.1.11","title":"8.1.11 February 10, 2022","text":"<ul> <li>Added Portuguese (Brasilian) translations</li> <li>Updated FontAwesome to v6 \u2013 check which icons were renamed here</li> <li>Fixed #3545: Color palette toggle and search overlaying version selector</li> </ul>"},{"location":"changelog/#8.1.10","title":"8.1.10 February 6, 2022","text":"<ul> <li>Fixed cutoff of very wide logos in the sidebar on mobile</li> </ul>"},{"location":"changelog/#8.1.9","title":"8.1.9 January 30, 2022","text":"<ul> <li>Added support for <code>mkdocs.yml</code> validation and auto-complete</li> <li>Fixed errors in Latvian translations</li> </ul>"},{"location":"changelog/#8.1.8","title":"8.1.8 January 23, 2022","text":"<ul> <li>Added Latvian translations</li> <li>Updated Giscus example integration with dynamic theme change support</li> <li>Fixed #3479: Back-to-top button not hidden when using sticky navigation tabs</li> <li>Fixed #3491: Logo in header and drawer doesn't honor aspect ratio</li> </ul>"},{"location":"changelog/#8.1.7","title":"8.1.7 January 16, 2022","text":"<ul> <li>Improved back-to-top button behavior - now not shown on anchor jump</li> </ul>"},{"location":"changelog/#8.1.6","title":"8.1.6 January 11, 2022","text":"<ul> <li>Fixed spacing of blockquotes (8.1.5 regression)</li> <li>Fixed edge cases for rounded corners on code blocks (8.1.5 regression)</li> <li>Fixed issues with code annotation line heights</li> </ul>"},{"location":"changelog/#8.1.5","title":"8.1.5 January 9, 2022","text":"<ul> <li>Improved browser support: Chrome 49+, Safari 10+, Firefox 53+, Edge 79+</li> <li>Improved rendering of inline code blocks in headlines</li> <li>Added Bahasa Malaysian translations</li> <li>Fixed #3354: MathJax formulas show vertical scrollbar</li> </ul>"},{"location":"changelog/#8.1.4","title":"8.1.4 January 2, 2022","text":"<ul> <li>Added indicator to navigation expander icon</li> <li>Improved support for reduced motion preference</li> <li>Fixed jitter of active content tab indicator</li> </ul>"},{"location":"changelog/#8.1.3","title":"8.1.3 December 19, 2021","text":"<ul> <li>Added animation to active content tab indicator</li> <li>Fixed #3360: Highlighted lines add blank lines in copied text</li> <li>Fixed usage of subsequent index files when using section index pages</li> </ul>"},{"location":"changelog/#8.1.2","title":"8.1.2 December 15, 2021","text":"<ul> <li>Switched CSS sources to logical properties</li> <li>Added transformation of logical properties to <code>ltr</code>/<code>rtl</code> equivalents</li> <li>Fixed spacing for admonitions inside lists (8.1.1 regression)</li> </ul>"},{"location":"changelog/#8.1.1","title":"8.1.1 December 13, 2021","text":"<ul> <li>Added support for <code>#only-light</code> and <code>#only-dark</code> image hash fragments</li> <li>Fixed copy-to-clipboard adding blank lines when using line anchors</li> <li>Fixed code annotation directionality for right-to-left languages</li> <li>Fixed header title positioning for right-to-left languages</li> <li>Fixed admonition borders for right-to-left languages (8.0.0 regression)</li> <li>Fixed footer navigation link positioning (8.0.0 regression)</li> <li>Fixed footer navigation title breaking out of container when too long</li> <li>Fixed shrinking arrow in navigation title when too long</li> <li>Fixed #3343: Filtered stopwords appear as missing search terms</li> <li>Fixed #3346: Site unusable due to usage of <code>:not()</code> (Firefox 78 ESR)</li> </ul>"},{"location":"changelog/#8.1.0","title":"8.1.0 December 10, 2021","text":"<ul> <li>Added basic support for code block line anchors</li> <li>Switched code annotation markers to <code>+</code> signs to improve usability</li> <li>Switched main site title to bold font</li> <li>Improved admonition icon positioning to align when <code>font-size</code> is increased</li> <li>Improved and simplified footnotes CSS</li> <li>Improved and simplified code annotation positioning</li> <li>Fixed syntax error in Russian translations</li> </ul>"},{"location":"changelog/#8.0.5","title":"8.0.5 December 6, 2021","text":"<ul> <li>Fixed #3302: Footer refactoring induced ellipsis in some browsers</li> <li>Fixed #3313: Details always rendered closed on load (8.0.4 regression)</li> </ul>"},{"location":"changelog/#8.0.4","title":"8.0.4 December 4, 2021","text":"<ul> <li>Improved support for deeply nested code annotations</li> <li>Improved code annotation and copy-to-clipboard interop</li> <li>Improved styling for code annotations inside admonitions</li> <li>Fixed #3274: Invalid anchor positioning when using instant loading</li> <li>Fixed #3294: Lists after code blocks without code annotations disappearing</li> <li>Fixed several positioning issues for code annotations</li> <li>Fixed JavaScript source map roots</li> </ul>"},{"location":"changelog/#8.0.3","title":"8.0.3 December 2, 2021","text":"<ul> <li>Removed deprecated <code>google_analytics</code> setting (was forgotten in 8.0.0)</li> <li>Fixed syntax error in Swedish and Polish translations</li> <li>Fixed #3283: Invalid back-to-top button position with sticky navigation tabs</li> <li>Fixed #3285: Default details marker showing due to Safari bug</li> </ul>"},{"location":"changelog/#8.0.2","title":"8.0.2 November 30, 2021","text":"<ul> <li>Fixed #3275: Code annotations always disappear on click</li> </ul>"},{"location":"changelog/#8.0.1","title":"8.0.1 November 28, 2021","text":"<ul> <li>Improved rendering of code annotation markers</li> <li>Fixed #3265: Wrong margin on nested admonitions</li> <li>Fixed wrong <code>box-sizing</code> for code annotations in details</li> </ul>"},{"location":"changelog/#8.0.0","title":"8.0.0 November 28, 2021","text":"<ul> <li>Added support for code annotations</li> <li>Added support for anchor tracking</li> <li>Added support for version warning</li> <li>Added <code>copyright</code> partial for easier override</li> <li>Removed deprecated content tabs legacy implementation</li> <li>Removed deprecated <code>seealso</code> admonition type</li> <li>Removed deprecated <code>site_keywords</code> setting (unsupported by MkDocs)</li> <li>Removed deprecated prebuilt search index support</li> <li>Removed deprecated web app manifest \u2013 use customization</li> <li>Removed <code>extracopyright</code> variable \u2013 use new <code>copyright</code> partial</li> <li>Removed Disqus integration \u2013 use customization</li> <li>Switched to <code>:is()</code> selectors for simple selector lists</li> <li>Switched autoprefixer from <code>last 4 years</code> to <code>last 2 years</code></li> <li>Improved CSS overall to match modern standards</li> <li>Improved CSS variable semantics for fonts</li> <li>Improved extensibility by restructuring partials</li> <li>Improved handling of <code>details</code> when printing</li> <li>Improved keyboard navigation for footnotes</li> <li>Fixed #3214: Search highlighting breaks site when empty</li> </ul>"},{"location":"changelog/#7.3.6","title":"7.3.6 October 30, 2021","text":"<ul> <li>Added support for adding titles to code blocks</li> </ul>"},{"location":"changelog/#7.3.5","title":"7.3.5 October 27, 2021","text":"<ul> <li>Added support for setting table of contents title via <code>mkdocs.yml</code></li> <li>Fixed back-to-top button position for right-to-left languages</li> </ul>"},{"location":"changelog/#7.3.4","title":"7.3.4 October 17, 2021","text":"<ul> <li>Bumped MkDocs version to 1.2.3 to mitigate CVE-2021-40978</li> <li>Fixed spacing issues when using integrate table of contents with tabs</li> <li>Fixed some spacings issues for right-to-left languages</li> <li>Fixed race condition in search initialization</li> </ul>"},{"location":"changelog/#7.3.3","title":"7.3.3 October 11, 2021","text":"<ul> <li>Rewrite of entire documentation</li> <li>Adjusted height of new content tabs to match single line code blocks</li> <li>Fixed new content tabs missing right padding in some browsers on overflow</li> <li>Fixed new content tabs bleeding out of flex container on overflow</li> <li>Fixed new content tabs overflow scrolling bugs on some browsers</li> <li>Fixed new content tabs stealing keyboard access when active</li> <li>Fixed some spacings issues for right-to-left languages</li> </ul>"},{"location":"changelog/#7.3.2","title":"7.3.2 October 6, 2021","text":"<ul> <li>Deprecated prebuilding of search index</li> <li>Improved graceful handling of broken search for <code>file://</code></li> <li>Added minimum Jinja version to list of requirements</li> <li>Fixed #3071: Section index pages render empty directories</li> <li>Fixed margin issues when using navigation tabs (7.3.1 regression)</li> <li>Fixed search placeholder sometimes being shown too early</li> </ul>"},{"location":"changelog/#7.3.1","title":"7.3.1 October 2, 2021","text":"<ul> <li>Added new experimental content tabs implementation</li> <li>Fixed #3069: GitHub stats broken for users/orgs (7.1.0 regression)</li> <li>Fixed #3070: Sections not linking to index page</li> <li>Fixed title not linking to index page when using tabs</li> <li>Fixed Disqus integration when using instant loading</li> <li>Fixed some spacing issues for right-to-left languages</li> <li>Fixed syntax error in Serbian translations</li> </ul>"},{"location":"changelog/#7.3.0","title":"7.3.0 September 23, 2021","text":"<ul> <li>Added support for sticky navigation tabs</li> <li>Added support for section index pages</li> <li>Added support for removing generator notice</li> </ul>"},{"location":"changelog/#7.2.8","title":"7.2.8 September 20, 2021","text":"<ul> <li>Fixed #3039: Search modal overlays menu on mobile (7.2.7 regression)</li> </ul>"},{"location":"changelog/#7.2.7","title":"7.2.7 September 19, 2021","text":"<ul> <li>Updated Serbian and Serbo-Croatian translations</li> <li>Improved appearance of outline on details</li> <li>Fixed #2934: Scrollbar when header is hidden on some mobile browsers</li> <li>Fixed #3032: Anchor in details doesn't open on load (7.0.0 regression)</li> <li>Fixed back-to-top button being focusable when invisible</li> <li>Fixed broken admonition icons (removed in upstream)</li> </ul>"},{"location":"changelog/#7.2.6","title":"7.2.6 September 1, 2021","text":"<ul> <li>Fixed rendering of <code>blockquote</code> elements (7.0.0 regression)</li> <li>Fixed #2973: Custom search worker setting ignored</li> </ul>"},{"location":"changelog/#7.2.5","title":"7.2.5 August 25, 2021","text":"<ul> <li>Updated Portuguese translations</li> <li>Fixed execution of RxJS teardown logic (7.2.3 regression)</li> <li>Fixed #2970: Search results show escaped characters (7.2.2 regression)</li> </ul>"},{"location":"changelog/#7.2.4","title":"7.2.4 August 11, 2021","text":"<ul> <li>Fixed #2926: Version selector not working (7.2.3 regression)</li> <li>Fixed #2929: Missing CSS class for banner (consistency with Insiders)</li> </ul>"},{"location":"changelog/#7.2.3","title":"7.2.3 August 9, 2021","text":"<ul> <li>Slight facelift of data tables, now closer to Material Design</li> <li>Fixed instant loading not respecting clicks on search results</li> <li>Fixed #2881: Invalid anchor offsets when using instant loading</li> </ul>"},{"location":"changelog/#7.2.2","title":"7.2.2 July 31, 2021","text":"<ul> <li>Updated Korean translations</li> <li>Fixed #2879: Search highlighting does not properly escape HTML</li> </ul>"},{"location":"changelog/#7.2.1","title":"7.2.1 July 25, 2021","text":"<ul> <li>Fixed #2862: Back-to-top button overlays active search bar</li> </ul>"},{"location":"changelog/#7.2.0","title":"7.2.0 July 21, 2021","text":"<ul> <li>Added support for search suggestions to save keystrokes</li> <li>Added support for search highlighting</li> <li>Added support for search sharing (i.e. deep linking)</li> </ul>"},{"location":"changelog/#7.1.11","title":"7.1.11 July 18, 2021","text":"<ul> <li>Updated Spanish and Galician translations</li> </ul>"},{"location":"changelog/#7.1.10","title":"7.1.10 July 10, 2021","text":"<ul> <li>Refactored appearance of back-to-top button</li> <li>Fixed graceful handling of search when browsing locally</li> </ul>"},{"location":"changelog/#7.1.9","title":"7.1.9 June 25, 2021","text":"<ul> <li>Improved search language support for Thai and Hindi</li> <li>Fixed #2761: License comments lined up at end of file</li> </ul>"},{"location":"changelog/#7.1.8","title":"7.1.8 June 12, 2021","text":"<ul> <li>Refactored analytics integration (because of MkDocs 1.2)</li> <li>Added support for Google Analytics 4 (<code>gtag.js</code>)</li> <li>Fixed missing escape for <code>aria-label</code> in footer links</li> </ul>"},{"location":"changelog/#7.1.7","title":"7.1.7 June 6, 2021","text":"<ul> <li>Improved screen reader support</li> </ul>"},{"location":"changelog/#7.1.6","title":"7.1.6 May 30, 2021","text":"<ul> <li>Deprecated <code>seealso</code> admonition qualifier</li> <li>Added Mongolian and updated Chinese translations</li> <li>Fixed #2429: Version selector not touch-friendly on Android devices</li> <li>Fixed #2703: Printed 'Initializing search' albeit ready on mobile</li> </ul>"},{"location":"changelog/#7.1.5","title":"7.1.5 May 19, 2021","text":"<ul> <li>Fixed #2655: Details breaking page margins on print</li> </ul>"},{"location":"changelog/#7.1.4","title":"7.1.4 May 6, 2021","text":"<ul> <li>Added support for git-revision-date-localized plugin creation date</li> <li>Improved footnote styles on <code>:target</code> and <code>:focus</code></li> </ul>"},{"location":"changelog/#7.1.3","title":"7.1.3 April 24, 2021","text":"<ul> <li>Fixed #2586: Empty table of contents shown (7.1.2 regression)</li> </ul>"},{"location":"changelog/#7.1.2","title":"7.1.2 April 18, 2021","text":"<ul> <li>Fixed #2554: List markers sometimes overlap floated elements</li> <li>Fixed #2563: Adding a class to a <code>h1</code> breaks the table of contents</li> <li>Fixed #2566: Back-to-top button clickable when invisible</li> </ul>"},{"location":"changelog/#7.1.1","title":"7.1.1 April 10, 2021","text":"<ul> <li>Fixed #2501: Nested definition lists compound bottom margin</li> <li>Fixed #2508: Switch <code>extracopyright</code> block to template variable</li> <li>Fixed #2533: Search (and other parts) not working in Safari &lt;14</li> <li>Fixed #2538: Visual quirk when opening language selector</li> </ul>"},{"location":"changelog/#7.1.0","title":"7.1.0 March 29, 2021","text":"<ul> <li>Added support for back-to-top button</li> <li>Added support for color palette toggle</li> <li>Added latest release to repository info (GitHub)</li> <li>Slight facelift of repository info (lighter fonts, spacing and icons)</li> </ul>"},{"location":"changelog/#7.0.7","title":"7.0.7 March 28, 2021","text":"<ul> <li>Updated Hungarian translations</li> <li>Fixed #2466: Docker image not based on latest Python and Alpine</li> <li>Fixed #2488: Inconsistent header shadow behavior</li> <li>Fixed #2492: Inline code blocks in admonition titles missing background</li> </ul>"},{"location":"changelog/#7.0.6","title":"7.0.6 March 14, 2021","text":"<ul> <li>Added trailing slash to version selector URL</li> <li>Added support for out-of-order anchors in table of contents</li> <li>Added <code>extra.homepage</code> option to link logo to arbitrary URL</li> <li>Improved security of Docker image (always update apk)</li> <li>Fixed horizontal spacing for nested inline admonitions</li> <li>Fixed text color of nested code blocks inside links</li> <li>Fixed version selector to always use version title</li> <li>Fixed logo link when using versioning with instant loading</li> </ul>"},{"location":"changelog/#7.0.5","title":"7.0.5 March 7, 2021","text":"<ul> <li>Added <code>extracopyright</code> block to allow for custom copyright info</li> <li>Fixed evaluation of third-party scripts when using instant loading</li> <li>Fixed edge cases when using instant loading without directory URLs</li> <li>Fixed handling of version selector when using instant loading</li> <li>Fixed regression with header title not being updated correctly</li> <li>Fixed expanded sections not opening on first click (7.0.4 regression)</li> </ul>"},{"location":"changelog/#7.0.4","title":"7.0.4 March 4, 2021","text":"<ul> <li>Added Icelandic translations</li> <li>Fixed #2386: Section close requires two clicks (navigation expansion)</li> <li>Fixed console error when search is disabled (7.0.0 regression)</li> <li>Fixed localsearch integration (7.0.0 regression)</li> </ul>"},{"location":"changelog/#7.0.3","title":"7.0.3 February 26, 2021","text":"<ul> <li>Fixed JavaScript errors in older browsers (target ES2020 -&gt; ES2015)</li> </ul>"},{"location":"changelog/#7.0.2","title":"7.0.2 February 25, 2021","text":"<ul> <li>Fixed #2343: Invalid source map URLs for JS and CSS files</li> <li>Fixed #2347: Version selector missing when using versioning</li> </ul>"},{"location":"changelog/#7.0.1","title":"7.0.1 February 24, 2021","text":"<ul> <li>Fixed #2334: Google Analytics triggers page view twice (7.0.0 regression)</li> <li>Fixed #2336: Details bleed into inline admonitions</li> <li>Fixed #2337: Images don't align correctly (7.0.0 regression)</li> </ul>"},{"location":"changelog/#7.0.0","title":"7.0.0 February 22, 2021","text":"<ul> <li>Added support for deploying multiple versions</li> <li>Added support for integrating a language selector</li> <li>Added support for rendering admonitions as inline blocks</li> <li>Rewrite of the underlying reactive architecture</li> <li>Removed Webpack in favor of reactive build strategy (-480 dependencies)</li> <li>Fixed keyboard navigation for code blocks after content tabs switch</li> </ul>"},{"location":"changelog/#6.2.8","title":"6.2.8 February 4, 2021","text":"<ul> <li>Updated Japanese and Polish translations</li> <li>Fixed #2261: Print dialog auto-closing when using instant loading</li> </ul>"},{"location":"changelog/#6.2.7","title":"6.2.7 January 31, 2021","text":"<ul> <li>Fixed #2251: Updated Docker image to latest Alpine Linux</li> </ul>"},{"location":"changelog/#6.2.6","title":"6.2.6 January 26, 2021","text":"<ul> <li>Added Bulgarian translations</li> <li>Fixed #2233: Search not shown when using header autohiding</li> </ul>"},{"location":"changelog/#6.2.5","title":"6.2.5 January 17, 2021","text":"<ul> <li>Fixed syntax error in Swedish translations</li> <li>Optimized navigation partials to improve build speed for huge docs</li> </ul>"},{"location":"changelog/#6.2.4","title":"6.2.4 January 9, 2021","text":"<ul> <li>Fixed #2156: Missing syntax highlighting for binary numbers</li> <li>Fixed #2186: Disqus showing on 404 page</li> </ul>"},{"location":"changelog/#6.2.3","title":"6.2.3 December 27, 2020","text":"<ul> <li>Added back hidden overflow on root container</li> <li>Fixed #2142: MathJax formulas sometimes have vertical scrollbars</li> </ul>"},{"location":"changelog/#6.2.2","title":"6.2.2 December 22, 2020","text":"<ul> <li>Removed Markdown version range limit (6.2.0 regression)</li> </ul>"},{"location":"changelog/#6.2.1","title":"6.2.1 December 22, 2020","text":"<ul> <li>Fixed all import and asset paths in templates (6.2.0 regression)</li> <li>Downgraded webpack-asset-manifest-plugin - broke all asset paths</li> </ul>"},{"location":"changelog/#6.2.0","title":"6.2.0 December 22, 2020","text":"<ul> <li>Added support for navigation sections</li> <li>Added support for navigation expansion</li> <li>Added support for integrating table of contents into navigation</li> <li>Added support for autohiding header on scroll</li> <li>Added support for hiding navigation and table of contents per page</li> <li>Added support for arbitrary items in navigation tabs</li> <li>Refactored navigation tabs to simplify grouping behavior</li> <li>Fixed anchor offset for permalinks in Safari (partial revert)</li> <li>Fixed #2098: Active tab sometimes not highlighted correctly</li> <li>Improved appearance for horizontal rulers</li> <li>Improved Spanish and Swedish translations</li> </ul>"},{"location":"changelog/#6.1.7","title":"6.1.7 December 6, 2020","text":"<ul> <li>Fixed #2081: Fixed stats for private GitHub repositories</li> <li>Fixed alignment for admonition icon alignment for right-to-left languages</li> </ul>"},{"location":"changelog/#6.1.6","title":"6.1.6 November 22, 2020","text":"<ul> <li>Fixed #2048: Math formulas show scrollbars (Windows)</li> </ul>"},{"location":"changelog/#6.1.5","title":"6.1.5 November 15, 2020","text":"<ul> <li>Fixed search reset button not showing/hiding correctly</li> </ul>"},{"location":"changelog/#6.1.4","title":"6.1.4 November 7, 2020","text":"<ul> <li>Fixed sidebar jitter when scrolling footer into view</li> </ul>"},{"location":"changelog/#6.1.3","title":"6.1.3 November 5, 2020","text":"<ul> <li>Added support for keywords <code>meta</code> tag</li> <li>Fixed #2027: Line numbers don't scale with smaller font size</li> <li>Fixed link colors for black and white on <code>slate</code> color scheme</li> <li>Removed focus outline on scrolling code blocks for pointer devices</li> </ul>"},{"location":"changelog/#6.1.2","title":"6.1.2 October 31, 2020","text":"<ul> <li>Fixed sizing of icons in admonitions, task lists, etc. (6.1.1 regression)</li> </ul>"},{"location":"changelog/#6.1.1","title":"6.1.1 October 31, 2020","text":"<ul> <li>Fixed #2019: Page title not correctly updated when using instant loading</li> </ul>"},{"location":"changelog/#6.1.0","title":"6.1.0 October 17, 2020","text":"<ul> <li>Fixed #1973: Added support for printing in dark mode</li> <li>Fixed #1974: Added support for printing content tabs</li> <li>Fixed #1995: Improved customizability of details extension</li> </ul>"},{"location":"changelog/#6.0.2","title":"6.0.2 October 4, 2020","text":"<ul> <li>Added Georgian translations</li> <li>Added escaping for link <code>title</code> attributes where necessary</li> <li>Fixed #1956: Pages with whitespace in names have invalid links in search</li> <li>Removed unnecessary (duplicated) link <code>title</code> attributes</li> </ul>"},{"location":"changelog/#6.0.1","title":"6.0.1 September 26, 2020","text":"<ul> <li>Fixed stemmer support for <code>file://</code> protocol through <code>iframe-worker</code></li> <li>Fixed details marker showing for search result in Firefox</li> <li>Fixed tabbing behavior when search query is not empty</li> <li>Switched TypeScript compilation target to ES2015</li> <li>Reduced size of JavaScript by 30% (<code>176kb</code> \u2192 <code>124kb</code>)</li> <li>Removed <code>mkdocs</code> and <code>readthedocs</code> themes from Docker image</li> </ul>"},{"location":"changelog/#6.0.0","title":"6.0.0 September 25, 2020","text":"<ul> <li>Improved search result look and feel</li> <li>Improved search result stability while typing</li> <li>Improved search result grouping (pages + headings)</li> <li>Improved search result relevance and scoring</li> <li>Added display of missing query terms to search results</li> <li>Reduced size of vendor bundle by 25% (<code>84kb</code> \u2192 <code>67kb</code>)</li> <li>Reduced size of the Docker image to improve CI build performance</li> <li>Removed hero partial in favor of custom implementation</li> <li>Removed deprecated front matter features</li> </ul>"},{"location":"changelog/#5.5.14","title":"5.5.14 September 23, 2020","text":"<ul> <li>Improved spacing around image captions</li> <li>Fixed #1939: Long tables cause header overlap in print view</li> </ul>"},{"location":"changelog/#5.5.13","title":"5.5.13 September 19, 2020","text":"<ul> <li>Improved abbreviations on touch devices</li> </ul>"},{"location":"changelog/#5.5.12","title":"5.5.12 August 31, 2020","text":"<ul> <li>Fixed #1638: occasional <code>404</code> for images when using instant loading</li> </ul>"},{"location":"changelog/#5.5.11","title":"5.5.11 August 28, 2020","text":"<ul> <li>Fixed Disqus integration, as the minifier killed the config</li> </ul>"},{"location":"changelog/#5.5.10","title":"5.5.10 August 28, 2020","text":"<ul> <li>Improved rendering by moving Disqus integration after page load</li> <li>Fixed #1887: Moved navigation icons to CSS to reduce size of HTML</li> </ul>"},{"location":"changelog/#5.5.9","title":"5.5.9 August 26, 2020","text":"<ul> <li>Added Esperanto translations</li> <li>Fixed #1884: External links not included in navigation tabs</li> </ul>"},{"location":"changelog/#5.5.8","title":"5.5.8 August 23, 2020","text":"<ul> <li>Removed focus outline on <code>details</code> and content tabs for pointer devices</li> <li>Improved accessibility of content tabs (now navigable via arrow keys)</li> <li>Fixed #1877: <code>404</code> on search index when search is disabled</li> <li>Fixed some memleaks in observable subscriptions</li> <li>Fixed color definitions for <code>theme-color</code> meta tag</li> </ul>"},{"location":"changelog/#5.5.7","title":"5.5.7 August 16, 2020","text":"<ul> <li>Improved contrast ratio to 4.5:1 for syntax highlighting</li> <li>Improved contrast ratio to 4.5:1 for table of contents</li> </ul>"},{"location":"changelog/#5.5.6","title":"5.5.6 August 12, 2020","text":"<ul> <li>Switched base template for <code>404.html</code> to <code>main.html</code></li> <li>Fixed #1864: GitHub organisation stats not loading</li> </ul>"},{"location":"changelog/#5.5.5","title":"5.5.5 August 11, 2020","text":"<ul> <li>Fixed missing vendor and worker distribution files</li> </ul>"},{"location":"changelog/#5.5.4","title":"5.5.4 August 11, 2020","text":"<ul> <li>Added support for sortable data tables</li> </ul>"},{"location":"changelog/#5.5.3","title":"5.5.3 August 4, 2020","text":"<ul> <li>Fixed search for languages other than English (5.5.1 regression)</li> </ul>"},{"location":"changelog/#5.5.2","title":"5.5.2 August 3, 2020","text":"<ul> <li>Improved highlight colors and spacing for <code>ins</code>, <code>del</code> and <code>mark</code></li> <li>Changed some keyboard symbols for better equivalents</li> <li>Removed focus <code>outline</code> for details and code blocks on touch devices</li> <li>Fixed margins for admonitions (5.5.1 regression)</li> <li>Fixed too small content tab labels (5.5.1 regression)</li> <li>Fixed icon repeating for custom admonition icons</li> </ul>"},{"location":"changelog/#5.5.1","title":"5.5.1 August 1, 2020","text":"<ul> <li>Improved typesetting by basing <code>font-size</code> and spacings on <code>em</code></li> <li>Improved print view by slightly scaling down <code>font-size</code></li> <li>Changed custom site title (metadata) to be suffixed with site name</li> <li>Fixed top- and bottom spacing of paragraphs inside table cells</li> </ul>"},{"location":"changelog/#5.5.0","title":"5.5.0 July 24, 2020","text":"<ul> <li>Rewrite of entire documentation</li> <li>Rewrite of syntax highlighting to be customizable with CSS variables</li> <li>Improved syntax highlighting to work with light and dark theme</li> <li>Improved <code>slate</code> color scheme to be more customizable and easier on the eyes</li> <li>Added licenses of icon sets to distribution files</li> <li>Fixed stale document titles in Google Analytics when using instant loading</li> <li>Fixed width of previous and next footer links for tablet and above</li> <li>Fixed issues with top scroll margin for footnotes</li> <li>Fixed top margin for tabbed content when using a JavaScript highlighter</li> <li>Deprecated metadata-based redirects, source links and heroes</li> </ul>"},{"location":"changelog/#5.4.0","title":"5.4.0 June 29, 2020","text":"<ul> <li>Added support to wrap searches in quotes to switch from <code>OR</code> to <code>AND</code></li> <li>Fixed highlighting of numbers in search results</li> </ul>"},{"location":"changelog/#5.3.3","title":"5.3.3 June 24, 2020","text":"<ul> <li>Added Bengali translations</li> <li>Fixed #1773: Search for numbers does not return any result (regression)</li> </ul>"},{"location":"changelog/#5.3.2","title":"5.3.2 June 21, 2020","text":"<ul> <li>Improved search typeahead experience with non-Latin characters</li> <li>Fixed #1753: Japanese search doesn't work anymore</li> </ul>"},{"location":"changelog/#5.3.1","title":"5.3.1 June 20, 2020","text":"<ul> <li>Fixed #1761: Duplication of search worker when subscribing to observable</li> </ul>"},{"location":"changelog/#5.3.0","title":"5.3.0 June 15, 2020","text":"<ul> <li>Added support for color schemes based on user preference</li> <li>Fixed #1755: Tokenizer separator setting ignored</li> </ul>"},{"location":"changelog/#5.2.3","title":"5.2.3 June 6, 2020","text":"<ul> <li>Improved search typeahead behavior for some languages (<code>de</code>, <code>fr</code>, ...)</li> <li>Improved styles for scrollbars on Firefox</li> <li>Fixed #1741: Removed <code>preconnect</code> hint for Google Analytics</li> </ul>"},{"location":"changelog/#5.2.2","title":"5.2.2 May 26, 2020","text":"<ul> <li>Fixed #1728: Legacy Edge doesn't support <code>deg</code> values in <code>hsla</code> colors</li> </ul>"},{"location":"changelog/#5.2.1","title":"5.2.1 May 22, 2020","text":"<ul> <li>Fixed color of links in table headers, e.g. footnotes</li> <li>Fixed color scheme not being applied without primary or accent color</li> <li>Fixed hover delay for links inside code blocks</li> </ul>"},{"location":"changelog/#5.2.0","title":"5.2.0 May 18, 2020","text":"<ul> <li>Added color schemes implementation + dark mode</li> <li>Fixed #1583: Missing option for separate link colors</li> </ul>"},{"location":"changelog/#5.1.7","title":"5.1.7 May 16, 2020","text":"<ul> <li>Added keyboard focus support for overflowing code blocks</li> <li>Fixed #1696: Infinite loop in some cases when using instant loading</li> </ul>"},{"location":"changelog/#5.1.6","title":"5.1.6 May 9, 2020","text":"<ul> <li>Added Burmese translations</li> <li>Added general anchor offset solution using <code>scroll-margin-top</code></li> <li>Fixed #1653: Instant loading shouldn't intercept links to <code>*.html</code> files</li> </ul>"},{"location":"changelog/#5.1.5","title":"5.1.5 May 3, 2020","text":"<ul> <li>Added <code>name</code> attribute for social links to set link <code>title</code></li> <li>Fixed #1623: Allow arbitrary links in social links</li> <li>Fixed #1664: Height of <code>iframe</code> is not adjustable</li> <li>Fixed #1667: Sidebars are scrolled to bottom on load (bug in Chrome 81+)</li> </ul>"},{"location":"changelog/#5.1.4","title":"5.1.4 April 30, 2020","text":"<ul> <li>Switched to @mdi/svg Material Design icon package</li> <li>Fixed #1655: Navigation may disappear after switching viewports</li> <li>Fixed #1659: Unnecessary scrollbar for search results on Windows</li> <li>Fixed occasional distortions for images with explicit dimensions</li> <li>Fixed errors in German translations</li> </ul>"},{"location":"changelog/#5.1.3","title":"5.1.3 April 26, 2020","text":"<ul> <li>Fixed overflowing content area after switch to flexbox</li> </ul>"},{"location":"changelog/#5.1.2","title":"5.1.2 April 26, 2020","text":"<ul> <li>Added status information to search observable</li> <li>Added status information to search modal</li> <li>Removed announcement bar from print media</li> <li>Removed media query packing logic due to race conditions</li> <li>Fixed #1520: Gracefully disable search on <code>file://</code> if Worker fails</li> <li>Fixed re-submission of query after search is initialized</li> <li>Fixed jitter of sidebars on all browsers by switching to <code>sticky</code></li> </ul>"},{"location":"changelog/#5.1.1","title":"5.1.1 April 17, 2020","text":"<ul> <li>Added new FontAwesome icons</li> <li>Fixed #1609: Instant loading doesn't honor <code>target=_blank</code></li> <li>Fixed GitHub stars count rounding errors</li> <li>Fixed GitLab stars count retrieval</li> </ul>"},{"location":"changelog/#5.1.0","title":"5.1.0 April 12, 2020","text":"<ul> <li>Added support for icons from Markdown through mkdocs-material-extensions</li> </ul>"},{"location":"changelog/#5.0.2","title":"5.0.2 April 10, 2020","text":"<ul> <li>Added CSS source maps to distribution files</li> <li>Fixed errors in Chinese (Traditional) translations</li> <li>Fixed creation of stale directory on installation from git</li> <li>Improved overflow scrolling behavior on iOS (reduced bundle size by <code>4kb</code>)</li> </ul>"},{"location":"changelog/#5.0.1","title":"5.0.1 April 7, 2020","text":"<ul> <li>Fixed syntax error in Spanish translation</li> </ul>"},{"location":"changelog/#5.0.0","title":"5.0.0 April 7, 2020","text":"<ul> <li>Reactive architecture \u2013 try <code>app.dialog$.next(\"Hi!\")</code> in the console</li> <li>Instant loading \u2013 make Material behave like a Single Page Application</li> <li>Improved CSS customization with CSS variables \u2013 set your brand's colors</li> <li>Improved CSS resilience, e.g. proper sidebar locking for customized headers</li> <li>Improved icon integration and configuration \u2013 now including over 5k icons</li> <li>Added possibility to use any icon for logo, repository and social links</li> <li>Search UI does not freeze anymore (moved to web worker)</li> <li>Search index built only once when using instant loading</li> <li>Improved extensible keyboard handling</li> <li>Support for prebuilt search indexes</li> <li>Support for displaying stars and forks for GitLab repositories</li> <li>Support for scroll snapping of sidebars and search results</li> <li>Reduced HTML and CSS footprint due to deprecation of Internet Explorer support</li> <li>Slight facelifting of some UI elements (admonitions, tables, ...)</li> </ul>"},{"location":"changelog/#4.6.3","title":"4.6.3 February 14, 2020","text":"<ul> <li>Removed optional third-party plugins from <code>requirements.txt</code></li> <li>Updated Docker image to contain all supported third-party plugins</li> </ul>"},{"location":"changelog/#4.6.2","title":"4.6.2 February 8, 2020","text":"<ul> <li>Added Romanian translations</li> <li>Fixed #1451: Inconsistent spacing for fenced code blocks</li> </ul>"},{"location":"changelog/#4.6.1","title":"4.6.1 February 8, 2020","text":"<ul> <li>Fixed #1324: Metadata author only rendering first character</li> <li>Fixed #1393: Set <code>tabindex</code> to <code>0</code> for skip to content link</li> <li>Fixed code blocks after Markdown 3.2 release</li> <li>Fixed errors in Japanese translations</li> <li>Improved Google Lighthouse score</li> </ul>"},{"location":"changelog/#4.6.0","title":"4.6.0 December 11, 2019","text":"<ul> <li>Added support for git-revision-date-localized-plugin</li> <li>Fixed invalid character in Google Fonts URL</li> </ul>"},{"location":"changelog/#4.5.1","title":"4.5.1 December 2, 2019","text":"<ul> <li>Added Thai translations</li> <li>Fixed missing assets in GitHub release <code>.zip</code> and <code>.tar.gz</code></li> </ul>"},{"location":"changelog/#4.5.0","title":"4.5.0 November 16, 2019","text":"<ul> <li>Fixed #1330: Upgraded EmojiOne to Tweomji due to licensing issues</li> <li>Fixed #1339: Temporarily pinned PyMdown and Markdown due to</li> <li>Fixed errors in Greek translations</li> <li>Improved GitHub statistics retrieval</li> </ul>"},{"location":"changelog/#4.4.3","title":"4.4.3 October 3, 2019","text":"<ul> <li>Added Estonian translations</li> <li>Fixed removal of copyright banners in minified JavaScript</li> <li>Removed unnecessary title attributes from links in table of contents</li> </ul>"},{"location":"changelog/#4.4.2","title":"4.4.2 August 27, 2019","text":"<ul> <li>Added Afrikaans translations</li> <li>Fixed broken page title when <code>h1</code> contained HTML tags</li> <li>Improved accessibility for IE users</li> <li>Removed unnecessary <code>title</code> attributes from links in navigation</li> </ul>"},{"location":"changelog/#4.4.1","title":"4.4.1 August 22, 2019","text":"<ul> <li>Added support for <code>black</code> as a primary color</li> <li>Fixed broken footer bar when <code>h1</code> contained HTML tags</li> </ul>"},{"location":"changelog/#4.4.0","title":"4.4.0 June 15, 2019","text":"<ul> <li>Added Slovenian translations</li> <li>Reverted template minification in favor of <code>mkdocs-minify-plugin</code></li> <li>Fixed #1114: Tabs don't reappear when default <code>font-size</code> is smaller than <code>16</code></li> </ul>"},{"location":"changelog/#4.3.1","title":"4.3.1 May 23, 2019","text":"<ul> <li>Fixed spelling error in Danish translations</li> </ul>"},{"location":"changelog/#4.3.0","title":"4.3.0 May 17, 2019","text":"<ul> <li>Added support for changing header through metadata title property</li> <li>Added <code>font-display: swap</code> to Google Font loading logic</li> <li>Removed whitespace from templates, saving <code>4kb</code> (<code>.7kb</code> gzipped) per request</li> <li>Fixed alignment of repository icons on tablet and desktop</li> </ul>"},{"location":"changelog/#4.2.0","title":"4.2.0 April 28, 2019","text":"<ul> <li>Added Norwegian (Nynorsk) translations</li> <li>Fixed loss of focus in non-form input elements due to search hotkeys</li> <li>Fixed #1067: Search hotkeys not working for mobile/tablet screensize</li> <li>Fixed #1068: Search not correctly aligned for tablet screensize</li> </ul>"},{"location":"changelog/#4.1.2","title":"4.1.2 April 16, 2019","text":"<ul> <li>Fixed #1072: HTML tags appearing in navigation link titles</li> </ul>"},{"location":"changelog/#4.1.1","title":"4.1.1 March 28, 2019","text":"<ul> <li>Fixed minor CSS errors detected during validation</li> </ul>"},{"location":"changelog/#4.1.0","title":"4.1.0 March 22, 2019","text":"<ul> <li>Fixed #1023: Search for Asian languages broken after Lunr.js update</li> <li>Fixed #1026: contenteditable elements loose focus on hotkeys</li> </ul>"},{"location":"changelog/#4.0.2","title":"4.0.2 March 1, 2019","text":"<ul> <li>Fixed #1012: HTML character entities appear in search result titles</li> </ul>"},{"location":"changelog/#4.0.1","title":"4.0.1 February 13, 2019","text":"<ul> <li>Fixed #762, #816: Glitch in sidebar when collapsing items</li> <li>Fixed #869: Automatically expand details before printing</li> </ul>"},{"location":"changelog/#4.0.0","title":"4.0.0 February 13, 2019","text":"<ul> <li>Added background on hover for table rows</li> <li>Removed Google Tag Manager and reverted to Google Analytics</li> <li>Removed blocks in partials - Jinja doesn't support them</li> <li>Fixed #911: Chrome breaks layout if system language is Chinese (BREAKING)</li> <li>Fixed #976: Removed FastClick</li> </ul>"},{"location":"changelog/#3.3.0","title":"3.3.0 January 29, 2019","text":"<ul> <li>Moved Google Analytics integration into <code>head</code> using Google Tag Manager</li> <li>Fixed #972: Unicode slugifier breaks table of contents blur on scroll</li> <li>Fixed #974: Additional links in table of contents break blur on scroll</li> </ul>"},{"location":"changelog/#3.2.0","title":"3.2.0 December 28, 2018","text":"<ul> <li>Added support for redirects using metadata refresh</li> <li>Fixed #921: Load Google Analytics snippet asynchronously</li> </ul>"},{"location":"changelog/#3.1.0","title":"3.1.0 November 17, 2018","text":"<ul> <li>Added support for Progressive Web App Manifest</li> <li>Fixed #915: Search bug in Safari (upgraded Lunr.js)</li> </ul>"},{"location":"changelog/#3.0.6","title":"3.0.6 October 26, 2018","text":"<ul> <li>Added Taiwanese translations</li> <li>Fixed #906: JavaScript code blocks evaluated in search results</li> </ul>"},{"location":"changelog/#3.0.5","title":"3.0.5 October 23, 2018","text":"<ul> <li>Added Croatian and Indonesian translations</li> <li>Fixed #899: Skip-to-content link invalid from 2<sup>nd</sup> level on</li> <li>Fixed #902: Missing URL filter in footer for FontAwesome link</li> </ul>"},{"location":"changelog/#3.0.4","title":"3.0.4 September 3, 2018","text":"<ul> <li>Updated Dutch translations</li> <li>Fixed #856: Removed preconnect meta tag if Google Fonts are disabled</li> </ul>"},{"location":"changelog/#3.0.3","title":"3.0.3 August 7, 2018","text":"<ul> <li>Fixed #841: Additional path levels for extra CSS and JS</li> </ul>"},{"location":"changelog/#3.0.2","title":"3.0.2 August 6, 2018","text":"<ul> <li>Fixed #839: Lunr.js stemmer imports incorrect</li> </ul>"},{"location":"changelog/#3.0.1","title":"3.0.1 August 5, 2018","text":"<ul> <li>Fixed #838: Search result links incorrect</li> </ul>"},{"location":"changelog/#3.0.0","title":"3.0.0 August 5, 2018","text":"<ul> <li>Upgraded MkDocs to 1.0 (BREAKING)</li> <li>Upgraded Python in official Docker image to 3.6</li> <li>Added Serbian and Serbo-Croatian translations</li> </ul>"},{"location":"changelog/#2.9.4","title":"2.9.4 July 29, 2018","text":"<ul> <li>Fixed build error after MkDocs upgrade</li> </ul>"},{"location":"changelog/#2.9.3","title":"2.9.3 July 29, 2018","text":"<ul> <li>Added link to home for logo in drawer</li> <li>Fixed dependency problems between MkDocs and Tornado</li> </ul>"},{"location":"changelog/#2.9.2","title":"2.9.2 June 29, 2018","text":"<ul> <li>Added Hindi and Czech translations</li> </ul>"},{"location":"changelog/#2.9.1","title":"2.9.1 June 18, 2018","text":"<ul> <li>Added support for different spellings for theme color</li> <li>Fixed #799: Added support for webfont minification in production</li> <li>Fixed #800: Added <code>.highlighttable</code> as an alias for <code>.codehilitetable</code></li> </ul>"},{"location":"changelog/#2.9.0","title":"2.9.0 June 13, 2018","text":"<ul> <li>Added support for theme color on Android</li> <li>Fixed #796: Rendering of nested tabbed code blocks</li> </ul>"},{"location":"changelog/#2.8.0","title":"2.8.0 June 10, 2018","text":"<ul> <li>Added support for grouping code blocks with tabs</li> <li>Added Material and FontAwesome icon fonts to distribution files (GDPR)</li> <li>Added note on compliance with GDPR</li> <li>Added Slovak translations</li> <li>Fixed #790: Prefixed <code>id</code> attributes with <code>__</code> to avoid name clashes</li> </ul>"},{"location":"changelog/#2.7.3","title":"2.7.3 April 26, 2018","text":"<ul> <li>Added Finnish translations</li> </ul>"},{"location":"changelog/#2.7.2","title":"2.7.2 April 9, 2018","text":"<ul> <li>Fixed rendering issue for <code>details</code> on Edge</li> </ul>"},{"location":"changelog/#2.7.1","title":"2.7.1 March 21, 2018","text":"<ul> <li>Added Galician translations</li> <li>Fixed #730: Scroll chasing error on home page if Disqus is enabled</li> <li>Fixed #736: Reset drawer and search upon back button invocation</li> </ul>"},{"location":"changelog/#2.7.0","title":"2.7.0 March 6, 2018","text":"<ul> <li>Added ability to set absolute URL for logo</li> <li>Added Hebrew translations</li> </ul>"},{"location":"changelog/#2.6.6","title":"2.6.6 February 22, 2018","text":"<ul> <li>Added preconnect for Google Fonts for faster loading</li> <li>Fixed #710: With tabs sidebar disappears if JavaScript is not available</li> </ul>"},{"location":"changelog/#2.6.5","title":"2.6.5 February 22, 2018","text":"<ul> <li>Reverted <code>--dev-addr</code> flag removal from <code>Dockerfile</code></li> </ul>"},{"location":"changelog/#2.6.4","title":"2.6.4 February 21, 2018","text":"<ul> <li>Added Catalan translations</li> <li>Fixed incorrect margins for buttons in Firefox and Safari</li> <li>Replaced package manager <code>yarn</code> with <code>npm 5.6</code></li> <li>Reverted GitHub stars rounding method</li> <li>Removed <code>--dev-addr</code> flag from <code>Dockerfile</code> for Windows compatibility</li> </ul>"},{"location":"changelog/#2.6.3","title":"2.6.3 February 18, 2018","text":"<ul> <li>Added Vietnamese translations</li> </ul>"},{"location":"changelog/#2.6.2","title":"2.6.2 February 12, 2018","text":"<ul> <li>Added Arabic translations</li> <li>Fixed incorrect rounding of amount of GitHub stars</li> <li>Fixed double-layered borders for tables</li> </ul>"},{"location":"changelog/#2.6.1","title":"2.6.1 February 11, 2018","text":"<ul> <li>Added ability to override Disqus integration using metadata</li> <li>Fixed #690: Duplicate slashes in source file URLs</li> <li>Fixed #696: Active page highlight not working with default palette</li> <li>Adjusted German translations</li> </ul>"},{"location":"changelog/#2.6.0","title":"2.6.0 February 2, 2018","text":"<ul> <li>Moved default search configuration to default translation (English)</li> <li>Added support to automatically set text direction from translation</li> <li>Added support to disable search stop word filter in translation</li> <li>Added support to disable search trimmer in translation</li> <li>Added Persian translations</li> <li>Fixed support for Polish search</li> <li>Fixed disappearing GitHub, GitLab and Bitbucket repository icons</li> </ul>"},{"location":"changelog/#2.5.5","title":"2.5.5 January 31, 2018","text":"<ul> <li>Added Hungarian translations</li> </ul>"},{"location":"changelog/#2.5.4","title":"2.5.4 January 29, 2018","text":"<ul> <li>Fixed #683: <code>gh-deploy</code> fails inside Docker</li> </ul>"},{"location":"changelog/#2.5.3","title":"2.5.3 January 25, 2018","text":"<ul> <li>Added Ukrainian translations</li> </ul>"},{"location":"changelog/#2.5.2","title":"2.5.2 January 22, 2018","text":"<ul> <li>Added default search language mappings for all localizations</li> <li>Fixed #673: Error loading non-existent search language</li> <li>Fixed #675: Uncaught reference error when search plugin disabled</li> </ul>"},{"location":"changelog/#2.5.1","title":"2.5.1 January 20, 2018","text":"<ul> <li>Fixed permalink for main headline</li> <li>Improved missing translation handling with English as a fallback</li> <li>Improved accessibility with skip-to-content link</li> </ul>"},{"location":"changelog/#2.5.0","title":"2.5.0 January 13, 2018","text":"<ul> <li>Added support for right-to-left languages</li> </ul>"},{"location":"changelog/#2.4.0","title":"2.4.0 January 11, 2018","text":"<ul> <li>Added focus state for clipboard buttons</li> <li>Fixed #400: Search bar steals tab focus</li> <li>Fixed search not closing on Enter when result is selected</li> <li>Fixed search not closing when losing focus due to Tab</li> <li>Fixed collapsed navigation links getting focus</li> <li>Fixed <code>outline</code> being cut off on Tab focus of navigation links</li> <li>Fixed bug with first search result navigation being ignored</li> <li>Removed search result navigation via Tab (use Up and Down)</li> <li>Removed <code>outline</code> resets for links</li> <li>Improved general tabbing behavior on desktop</li> </ul>"},{"location":"changelog/#2.3.0","title":"2.3.0 January 9, 2018","text":"<ul> <li>Added <code>example</code> (synonym: <code>snippet</code>) style for admonitions</li> <li>Added synonym <code>abstract</code> for <code>summary</code> style for admonitions</li> </ul>"},{"location":"changelog/#2.2.6","title":"2.2.6 December 27, 2017","text":"<ul> <li>Added Turkish translations</li> <li>Fixed unclickable area below header in case JavaScript is not available</li> </ul>"},{"location":"changelog/#2.2.5","title":"2.2.5 December 18, 2017","text":"<ul> <li>Fixed #639: Broken default favicon</li> </ul>"},{"location":"changelog/#2.2.4","title":"2.2.4 December 18, 2017","text":"<ul> <li>Fixed #638: Build breaks with Jinja &lt; 2.9</li> </ul>"},{"location":"changelog/#2.2.3","title":"2.2.3 December 13, 2017","text":"<ul> <li>Fixed #630: Admonition sets padding on any last child</li> <li>Adjusted Chinese (Traditional) translations</li> </ul>"},{"location":"changelog/#2.2.2","title":"2.2.2 December 8, 2017","text":"<ul> <li>Added Dutch translations</li> <li>Adjusted targeted link and footnote offsets</li> <li>Simplified admonition styles and fixed padding bug</li> </ul>"},{"location":"changelog/#2.2.1","title":"2.2.1 December 2, 2017","text":"<ul> <li>Fixed #616: Minor styling error with title-only admonitions</li> <li>Removed border for table of contents and improved spacing</li> </ul>"},{"location":"changelog/#2.2.0","title":"2.2.0 November 22, 2017","text":"<ul> <li>Added support for hero teaser</li> <li>Added Portuguese translations</li> <li>Fixed #586: Footnote backref target offset regression</li> <li>Fixed #605: Search stemmers not correctly loaded</li> </ul>"},{"location":"changelog/#2.1.1","title":"2.1.1 November 21, 2017","text":"<ul> <li>Replaced deprecated <code>babel-preset-es2015</code> with <code>babel-preset-env</code></li> <li>Refactored Gulp build pipeline with Webpack</li> <li>Removed right border on sidebars</li> <li>Fixed broken color transition on header</li> </ul>"},{"location":"changelog/#2.1.0","title":"2.1.0 November 19, 2017","text":"<ul> <li>Added support for <code>white</code> as a primary color</li> <li>Added support for sliding site name and title</li> <li>Fixed redundant clipboard button when using line numbers on code blocks</li> <li>Improved header appearance by making it taller</li> <li>Improved tabs appearance</li> <li>Improved CSS customizability by leveraging inheritance</li> <li>Removed scroll shadows via <code>background-attachment</code></li> </ul>"},{"location":"changelog/#2.0.4","title":"2.0.4 November 5, 2017","text":"<ul> <li>Fixed <code>details</code> not opening with footnote reference</li> </ul>"},{"location":"changelog/#2.0.3","title":"2.0.3 November 5, 2017","text":"<ul> <li>Added Japanese translations</li> <li>Fixed #540: Jumping to anchor inside <code>details</code> doesn't open it</li> <li>Fixed active link colors in footer</li> </ul>"},{"location":"changelog/#2.0.2","title":"2.0.2 November 1, 2017","text":"<ul> <li>Added Russian translations</li> <li>Fixed #542: Horizontal scrollbar between <code>1220px</code> and <code>1234px</code></li> <li>Fixed #553: Metadata values only rendering first character</li> <li>Fixed #558: Flash of unstyled content</li> <li>Fixed favicon regression caused by deprecation upstream</li> </ul>"},{"location":"changelog/#2.0.1","title":"2.0.1 October 31, 2017","text":"<ul> <li>Fixed error when initializing search</li> <li>Fixed styles for link to edit the current page</li> <li>Fixed styles on nested admonition in details</li> </ul>"},{"location":"changelog/#2.0.0","title":"2.0.0 October 31, 2017","text":"<ul> <li>Upgraded MkDocs to 0.17.1 (BREAKING)</li> <li>Added support for easier configuration of search tokenizer</li> <li>Added support to disable search</li> <li>Added Korean translations</li> </ul>"},{"location":"changelog/#1.12.2","title":"1.12.2 October 26, 2017","text":"<ul> <li>Added Italian, Norwegian, French and Chinese translations</li> </ul>"},{"location":"changelog/#1.12.1","title":"1.12.1 October 22, 2017","text":"<ul> <li>Added Polish, Swedish and Spanish translations</li> <li>Improved downward compatibility with custom partials</li> <li>Temporarily pinned MkDocs version within Docker image to 0.16.3</li> <li>Fixed #519: Missing theme configuration file</li> </ul>"},{"location":"changelog/#1.12.0","title":"1.12.0 October 20, 2017","text":"<ul> <li>Added support for setting language(s) via <code>mkdocs.yml</code></li> <li>Added support for default localization</li> <li>Added German and Danish translations</li> <li>Fixed #374: Search bar misalignment on big screens</li> </ul>"},{"location":"changelog/#1.11.0","title":"1.11.0 October 19, 2017","text":"<ul> <li>Added localization to clipboard</li> <li>Refactored localization logic</li> </ul>"},{"location":"changelog/#1.10.4","title":"1.10.4 October 18, 2017","text":"<ul> <li>Improved print styles of code blocks</li> <li>Improved search UX (don't close on enter if no selection)</li> <li>Fixed #495: Vertical scrollbar on short pages</li> </ul>"},{"location":"changelog/#1.10.3","title":"1.10.3 October 11, 2017","text":"<ul> <li>Fixed #484: Vertical scrollbar on some MathJax formulas</li> <li>Fixed #483: Footnote backref target offset regression</li> </ul>"},{"location":"changelog/#1.10.2","title":"1.10.2 October 6, 2017","text":"<ul> <li>Fixed #468: Sidebar shows scrollbar if content is shorter (in Safari)</li> </ul>"},{"location":"changelog/#1.10.1","title":"1.10.1 September 14, 2017","text":"<ul> <li>Fixed #455: Bold code blocks rendered with normal font weight</li> </ul>"},{"location":"changelog/#1.10.0","title":"1.10.0 September 1, 2017","text":"<ul> <li>Added support to make logo default icon configurable</li> <li>Fixed uninitialized overflow scrolling on main pane for iOS</li> <li>Fixed error in mobile navigation in case JavaScript is not available</li> <li>Fixed incorrect color transition for nested panes in mobile navigation</li> <li>Improved checkbox styles for Tasklist from PyMdown Extension package</li> </ul>"},{"location":"changelog/#1.9.0","title":"1.9.0 August 29, 2017","text":"<ul> <li>Added <code>info</code> (synonym: <code>todo</code>) style for admonitions</li> <li>Added <code>question</code> (synonym: <code>help</code>, <code>faq</code>) style for admonitions</li> <li>Added support for Details from PyMdown Extensions package</li> <li>Improved admonition styles to match details</li> <li>Improved styles for social links in footer</li> <li>Replaced ligatures with Unicode code points to avoid broken layout</li> <li>Upgraded PyMdown Extensions package dependency to &gt;= 3.4</li> </ul>"},{"location":"changelog/#1.8.1","title":"1.8.1 August 7, 2017","text":"<ul> <li>Fixed #421: Missing pagination for GitHub API</li> </ul>"},{"location":"changelog/#1.8.0","title":"1.8.0 August 2, 2017","text":"<ul> <li>Added support for lazy-loading of search results for better performance</li> <li>Added support for customization of search tokenizer/separator</li> <li>Fixed #424: Search doesn't handle capital letters anymore</li> <li>Fixed #419: Search doesn't work on whole words</li> </ul>"},{"location":"changelog/#1.7.5","title":"1.7.5 July 25, 2017","text":"<ul> <li>Fixed #398: Forms broken due to search shortcuts</li> <li>Improved search overall user experience</li> <li>Improved search matching and highlighting</li> <li>Improved search accessibility</li> </ul>"},{"location":"changelog/#1.7.4","title":"1.7.4 June 21, 2017","text":"<ul> <li>Fixed functional link colors in table of contents for active palette</li> <li>Fixed #368: Compatibility issues with IE11</li> </ul>"},{"location":"changelog/#1.7.3","title":"1.7.3 June 7, 2017","text":"<ul> <li>Fixed error when setting language to Japanese for site search</li> </ul>"},{"location":"changelog/#1.7.2","title":"1.7.2 June 6, 2017","text":"<ul> <li>Fixed offset of search box when <code>repo_url</code> is not set</li> <li>Fixed non-disappearing tooltip</li> </ul>"},{"location":"changelog/#1.7.1","title":"1.7.1 June 1, 2017","text":"<ul> <li>Fixed wrong <code>z-index</code> order of header, overlay and drawer</li> <li>Fixed wrong offset of targeted footnote back references</li> </ul>"},{"location":"changelog/#1.7.0","title":"1.7.0 June 1, 2017","text":"<ul> <li>Added \"copy to clipboard\" buttons to code blocks</li> <li>Added support for multilingual site search</li> <li>Fixed search term highlighting for non-latin languages</li> </ul>"},{"location":"changelog/#1.6.4","title":"1.6.4 May 24, 2017","text":"<ul> <li>Fixed #337: JavaScript error for GitHub organization URLs</li> </ul>"},{"location":"changelog/#1.6.3","title":"1.6.3 May 16, 2017","text":"<ul> <li>Fixed #329: Broken source stats for private or unknown GitHub repos</li> </ul>"},{"location":"changelog/#1.6.2","title":"1.6.2 May 15, 2017","text":"<ul> <li>Fixed #316: Fatal error for git clone on Windows</li> <li>Fixed #320: Chrome 58 creates double underline for <code>abbr</code> tags</li> <li>Fixed #323: Ligatures rendered inside code blocks</li> <li>Fixed miscalculated sidebar height due to missing margin collapse</li> <li>Changed deprecated MathJax CDN to Cloudflare</li> </ul>"},{"location":"changelog/#1.6.1","title":"1.6.1 April 23, 2017","text":"<ul> <li>Fixed following of active/focused element if search input is focused</li> <li>Fixed layer order of search component elements</li> </ul>"},{"location":"changelog/#1.6.0","title":"1.6.0 April 22, 2017","text":"<ul> <li>Added build test for Docker image on Travis</li> <li>Added search overlay for better user experience (focus)</li> <li>Added language from localizations to <code>html</code> tag</li> <li>Fixed #270: source links broken for absolute URLs</li> <li>Fixed missing top spacing for first targeted element in content</li> <li>Fixed too small footnote divider when using larger font sizes</li> </ul>"},{"location":"changelog/#1.5.5","title":"1.5.5 April 20, 2017","text":"<ul> <li>Fixed #282: Browser search (Meta+F) is hijacked</li> </ul>"},{"location":"changelog/#1.5.4","title":"1.5.4 April 8, 2017","text":"<ul> <li>Fixed broken highlighting for two or more search terms</li> <li>Fixed missing search results when only a <code>h1</code> is present</li> <li>Fixed unresponsive overlay on Android</li> </ul>"},{"location":"changelog/#1.5.3","title":"1.5.3 April 7, 2017","text":"<ul> <li>Fixed deprecated calls for template variables</li> <li>Fixed wrong palette color for focused search result</li> <li>Fixed JavaScript errors on 404 page</li> <li>Fixed missing top spacing on 404 page</li> <li>Fixed missing right spacing on overflow of source container</li> </ul>"},{"location":"changelog/#1.5.2","title":"1.5.2 April 5, 2017","text":"<ul> <li>Added requirements as explicit dependencies in <code>setup.py</code></li> <li>Fixed non-synchronized transitions in search form</li> </ul>"},{"location":"changelog/#1.5.1","title":"1.5.1 March 30, 2017","text":"<ul> <li>Fixed rendering and offset of targeted footnotes</li> <li>Fixed #238: Link on logo is not set to <code>site_url</code></li> </ul>"},{"location":"changelog/#1.5.0","title":"1.5.0 March 24, 2017","text":"<ul> <li>Added support for localization of search placeholder</li> <li>Added keyboard events for quick access of search</li> <li>Added keyboard events for search control</li> <li>Added opacity on hover for search buttons</li> <li>Added git hook to skip CI build on non-src changes</li> <li>Fixed non-resetting search placeholder when input is cleared</li> <li>Fixed error for unescaped parentheses in search term</li> <li>Fixed #229: Button to clear search missing</li> <li>Fixed #231: Escape key doesn't exit search</li> <li>Removed old-style figures from font feature settings</li> </ul>"},{"location":"changelog/#1.4.1","title":"1.4.1 March 16, 2017","text":"<ul> <li>Fixed invalid destructuring attempt on NodeList (in Safari, Edge, IE)</li> </ul>"},{"location":"changelog/#1.4.0","title":"1.4.0 March 16, 2017","text":"<ul> <li>Added support for grouping searched sections by documents</li> <li>Added support for highlighting of search terms</li> <li>Added support for localization of search results</li> <li>Fixed #216: table of contents icon doesn't show if <code>h1</code> is not present</li> <li>Reworked style and layout of search results for better usability</li> </ul>"},{"location":"changelog/#1.3.0","title":"1.3.0 March 11, 2017","text":"<ul> <li>Added support for page-specific title and description using metadata</li> <li>Added support for linking source files to documentation</li> <li>Fixed jitter and offset of sidebar when zooming browser</li> <li>Fixed incorrectly initialized tablet sidebar height</li> <li>Fixed regression for #1: GitHub stars break if <code>repo_url</code> ends with a <code>/</code></li> <li>Fixed undesired white line below copyright footer due to base font scaling</li> <li>Fixed issue with whitespace in path for scripts</li> <li>Fixed #205: support non-fixed (static) header</li> <li>Refactored footnote references for better visibility</li> <li>Reduced repaints to a minimum for non-tabs configuration</li> <li>Reduced contrast of edit button (slightly)</li> </ul>"},{"location":"changelog/#1.2.0","title":"1.2.0 March 3, 2017","text":"<ul> <li>Added <code>quote</code> (synonym: <code>cite</code>) style for admonitions</li> <li>Added help message to build pipeline</li> <li>Fixed wrong navigation link colors when applying palette</li> <li>Fixed #197: Link missing in tabs navigation on deeply nested items</li> <li>Removed unnecessary dev dependencies</li> </ul>"},{"location":"changelog/#1.1.1","title":"1.1.1 February 26, 2017","text":"<ul> <li>Fixed incorrectly displayed nested lists when using tabs</li> </ul>"},{"location":"changelog/#1.1.0","title":"1.1.0 February 26, 2017","text":"<ul> <li>Added tabs navigation feature (optional)</li> <li>Added Disqus integration (optional)</li> <li>Added a high resolution Favicon with the new logo</li> <li>Added static type checking using Facebook's Flow</li> <li>Fixed #173: Dictionary elements have no bottom spacing</li> <li>Fixed #175: Tables cannot be set to 100% width</li> <li>Fixed race conditions in build related to asset revisioning</li> <li>Fixed accidentally re-introduced Permalink on top-level headline</li> <li>Fixed alignment of logo in drawer on IE11</li> <li>Refactored styles related to tables</li> <li>Refactored and automated Docker build and PyPI release</li> <li>Refactored build scripts</li> </ul>"},{"location":"changelog/#1.0.5","title":"1.0.5 February 18, 2017","text":"<ul> <li>Fixed #153: Sidebar flows out of constrained area in Chrome 56</li> <li>Fixed #159: Footer jitter due to JavaScript if content is short</li> </ul>"},{"location":"changelog/#1.0.4","title":"1.0.4 February 16, 2017","text":"<ul> <li>Fixed #142: Documentation build errors if <code>h1</code> is defined as raw HTML</li> <li>Fixed #164: PyPI release does not build and install</li> <li>Fixed offsets of targeted headlines</li> <li>Increased sidebar font size by <code>0.12rem</code></li> </ul>"},{"location":"changelog/#1.0.3","title":"1.0.3 January 22, 2017","text":"<ul> <li>Fixed #117: Table of contents items don't blur on fast scrolling</li> <li>Refactored sidebar positioning logic</li> <li>Further reduction of repaints</li> </ul>"},{"location":"changelog/#1.0.2","title":"1.0.2 January 15, 2017","text":"<ul> <li>Fixed #108: Horizontal scrollbar in content area</li> </ul>"},{"location":"changelog/#1.0.1","title":"1.0.1 January 14, 2017","text":"<ul> <li>Fixed massive repaints happening when scrolling</li> <li>Fixed footer back reference positions in case of overflow</li> <li>Fixed header logo from showing when the menu icon is rendered</li> <li>Changed scrollbar behavior to only show when content overflows</li> </ul>"},{"location":"changelog/#1.0.0","title":"1.0.0 January 13, 2017","text":"<ul> <li>Introduced Webpack for more sophisticated JavaScript bundling</li> <li>Introduced ESLint and Stylelint for code style checks</li> <li>Introduced more accurate Material Design colors and shadows</li> <li>Introduced modular scales for harmonic font sizing</li> <li>Introduced git-hooks for better development workflow</li> <li>Rewrite of CSS using the BEM methodology and SassDoc guidelines</li> <li>Rewrite of JavaScript using ES6 and Babel as a transpiler</li> <li>Rewrite of Admonition, Permalinks and CodeHilite integration</li> <li>Rewrite of the complete typographical system</li> <li>Rewrite of Gulp asset pipeline in ES6 and separation of tasks</li> <li>Removed Bower as a dependency in favor of NPM</li> <li>Removed custom icon build in favor of the Material Design icon set</li> <li>Removed <code>_blank</code> targets on links due to vulnerability: http://bit.ly/1Mk2Rtw</li> <li>Removed unversioned assets from build directory</li> <li>Restructured templates into base templates and partials</li> <li>Added build and watch scripts in <code>package.json</code></li> <li>Added support for Metadata and Footnotes Markdown extensions</li> <li>Added support for PyMdown Extensions package</li> <li>Added support for collapsible sections in navigation</li> <li>Added support for separate table of contents</li> <li>Added support for better accessibility through REM-based layout</li> <li>Added icons for GitHub, GitLab and BitBucket integrations</li> <li>Added more detailed documentation on specimen, extensions etc.</li> <li>Added a <code>404.html</code> error page for deployment on GitHub Pages</li> <li>Fixed live reload chain in watch mode when saving a template</li> <li>Fixed variable references to work with MkDocs 0.16</li> </ul>"},{"location":"changelog/#0.2.4","title":"0.2.4 June 26, 2016","text":"<ul> <li>Fixed improperly set default favicon</li> <li>Fixed #33: Protocol relative URL for webfonts doesn't work with <code>file://</code></li> <li>Fixed #34: IE11 on Windows 7 doesn't honor <code>max-width</code> on <code>main</code> tag</li> <li>Fixed #35: Add styling for blockquotes</li> </ul>"},{"location":"changelog/#0.2.3","title":"0.2.3 May 16, 2016","text":"<ul> <li>Fixed #25: Highlight inline fenced blocks</li> <li>Fixed #26: Better highlighting for keystrokes</li> <li>Fixed #30: Suboptimal syntax highlighting for PHP</li> </ul>"},{"location":"changelog/#0.2.2","title":"0.2.2 March 20, 2016","text":"<ul> <li>Fixed #15: Document Pygments dependency for CodeHilite</li> <li>Fixed #16: Favicon could not be set through <code>mkdocs.yml</code></li> <li>Fixed #17: Put version into own container for styling</li> <li>Fixed #20: Fix rounded borders for tables</li> </ul>"},{"location":"changelog/#0.2.1","title":"0.2.1 March 12, 2016","text":"<ul> <li>Fixed #10: Invisible header after closing search bar with ESC key</li> <li>Fixed #13: Table cells don't wrap</li> <li>Fixed empty list in table of contents when no headline is defined</li> <li>Corrected wrong path for static asset monitoring in Gulpfile.js</li> <li>Set up tracking of site search for Google Analytics</li> </ul>"},{"location":"changelog/#0.2.0","title":"0.2.0 February 24, 2016","text":"<ul> <li>Fixed #6: Include multiple color palettes via <code>mkdocs.yml</code></li> <li>Fixed #7: Better colors for links inside admonition notes and warnings</li> <li>Fixed #9: Text for prev/next footer navigation should be customizable</li> <li>Refactored templates (replaced <code>if</code>/<code>else</code> with modifiers where possible)</li> </ul>"},{"location":"changelog/#0.1.3","title":"0.1.3 February 21, 2016","text":"<ul> <li>Fixed #3: Ordered lists within an unordered list have <code>::before</code> content</li> <li>Fixed #4: Click on Logo/Title without Github-Repository: <code>\"None\"</code></li> <li>Fixed #5: Page without headlines renders empty list in table of contents</li> <li>Moved Modernizr to top to ensure basic usability in IE8</li> </ul>"},{"location":"changelog/#0.1.2","title":"0.1.2 February 16, 2016","text":"<ul> <li>Fixed styles for deep navigational hierarchies</li> <li>Fixed webfont delivery problem when hosted in subdirectories</li> <li>Fixed print styles in mobile/tablet configuration</li> <li>Added option to configure fonts in <code>mkdocs.yml</code> with fallbacks</li> <li>Changed styles for admonition notes and warnings</li> <li>Set download link to latest version if available</li> <li>Set up tracking of outgoing links and actions for Google Analytics</li> </ul>"},{"location":"changelog/#0.1.1","title":"0.1.1 February 11, 2016","text":"<ul> <li>Fixed #1: GitHub stars don't work if the repo_url ends with a <code>/</code></li> <li>Updated NPM and Bower dependencies to most recent versions</li> <li>Changed footer/copyright link to Material theme to GitHub pages</li> <li>Made MkDocs building/serving in build process optional</li> <li>Set up continuous integration with Travis</li> </ul>"},{"location":"changelog/#0.1.0","title":"0.1.0 February 9, 2016","text":"<ul> <li>Initial release</li> </ul>"},{"location":"guides/creating-a-reproduction/","title":"Creating a reproduction","text":"<p>A reproduction is a simplified version of a bug that demonstrates the specific scenario in which the bug occurred. It includes all necessary minimal settings and instructions and should be as simple as possible while still demonstrating the issue.</p>"},{"location":"guides/creating-a-reproduction/#guide","title":"Guide","text":""},{"location":"guides/creating-a-reproduction/#environment","title":"Environment optional","text":"<p>We recommend using a virtual environment, which is an isolated Python runtime. If you are in a virtual environment, any packages that you install or upgrade will be local to the environment. If you run into problems, you can just delete and recreate the environment. It's trivial to set up:</p> <ul> <li> <p>Create a new virtual environment with:</p> <pre><code>python3 -m venv venv\n</code></pre> </li> <li> <p>Activate the environment with:</p>  macOS Windows Linux <pre><code>. venv/bin/activate\n</code></pre> <pre><code>. venv/Scripts/activate\n</code></pre> <pre><code>. venv/bin/activate\n</code></pre> <p>Your terminal should now print <code>(venv)</code> before the prompt, which is how you know that you are inside the virtual environment that you just created.</p> </li> <li> <p>Exit the environment with:</p> <pre><code>deactivate\n</code></pre> </li> </ul>"},{"location":"guides/creating-a-reproduction/#minimal-reproduction","title":"Minimal reproduction","text":"<p>Following the instructions below, you will set up a skeleton project to create a reproduction. As mentioned above, we recommend using a virtual environment, so create a new folder in your working directory and a new virtual environment inside it. Next:</p> <ol> <li> <p>As mentioned in our bug reporting guide, ensure that you're running the     latest version of Material for MkDocs, which might already include a fix for     the bug:</p> <pre><code>pip install --upgrade --force-reinstall mkdocs-material\n</code></pre> </li> <li> <p>Bootstrap a new documentation project using the <code>mkdocs</code> executable,     which you use as a basis for the reproduction. It's essential to create a     new, empty project for this:</p> <pre><code>mkdocs new .\n</code></pre> <p>Start by adding the minimal configuration in <code>mkdocs.yml</code>:</p> <pre><code>theme:\n  name: material\n</code></pre> </li> <li> <p>Now, only add the necessary settings to <code>mkdocs.yml</code> to keep the     reproduction minimal. If you are creating a reproduction for a rendering     bug, create only the necessary amount of Markdown documents. Repeat this     step until the bug you want to report can be observed.</p> </li> <li> <p>As a last step, before packing everything into a <code>.zip</code> file, double-check     all settings and documents if they are essential to the reproduction, which     means that the bug does not occur when they are omitted. Remove all     non-essential lines and files.</p> </li> </ol>"},{"location":"guides/creating-a-reproduction/#creating-a-zip-file","title":"Creating a <code>.zip</code> file","text":"<p>Material for MkDocs 9.0.0 includes a new plugin solely intended to create reproductions for bug reports. When the built-in info plugin is enabled, MkDocs will add all relevant files to a <code>.zip</code>, print a summary to the terminal and exit. Add the following lines to <code>mkdocs.yml</code>:</p> <pre><code>plugins:\n  - info\n</code></pre> <p>Now, when running <code>mkdocs build</code>, a file called <code>example.zip</code> is automatically created, containing the minimal reproduction you can directly attach to your bug report.</p> <pre><code>INFO     -  Started archive creation for bug report\nINFO     -  Archive successfully created:\n\n  example/.dependencies.json 859.0 B\n  example/.versions.log 83.0 B\n  example/docs/index.md 282.0 B\n  example/mkdocs.yml 56.0 B\n\n  example.zip 1.8 kB\n</code></pre>"},{"location":"insiders/","title":"My PhD: Exploring the Development of Ukrainian Science Fiction","text":"<p>The genre of Ukrainian science fiction (SF) has undergone significant transformations, shaped by the political, cultural, and technological shifts of each era. From its origins in the early 20<sup>th</sup> century to its contemporary manifestations, Ukrainian SF reflects a complex interplay of ideology, mysticism, and societal aspirations. My PhD research focuses on this dynamic evolution, exploring how the genre has mirrored and responded to the changing conditions of Ukrainian society.</p>"},{"location":"insiders/#the-foundations-of-ukrainian-science-fiction","title":"The Foundations of Ukrainian Science Fiction","text":"<p>Although fantastical elements in Ukrainian literature can be traced as far back as The Paterik of the Kievan Caves Monastery in the 13<sup>th</sup> century and later in the works of Peter Mohyla and Feofan Prokopovich, these texts do not qualify as science fiction. Science fiction as a genre emerged in response to the ideals of positivism, which held that scientific and technological progress was the ultimate path to human betterment. Positivism dismissed theological and metaphysical approaches, emphasizing practical, tangible advancements.</p> <p>In Ukrainian SF, this philosophy became prominent in the 1920s, during a time of rapid industrialization and utopian socialist dreams. Authors like Sandro Kasyanyuk celebrated machines and technology, portraying humanity's partnership with these creations as essential to achieving a better socialist future. His cycle Machining Humanity reflects this optimism, describing harmonious coexistence between humans and machines. However, the genre's early works were deeply intertwined with Soviet propaganda, which often overshadowed the creative freedom of authors. This period saw a glorification of technological progress as a means to support communist ideals, even as cracks in the utopian vision began to appear.</p>"},{"location":"insiders/#from-naive-optimism-to-ideological-disillusionment","title":"From Naive Optimism to Ideological Disillusionment","text":"<p>The optimistic view of technology in the 1920s reflected the ideals of techno-communism, a vision rooted in Marxist materialism and positivist thought. The belief that technological progress could lead to societal liberation and a classless utopia was a central theme in early Soviet Ukrainian science fiction. This vision is particularly evident in works like Solar Machine by Volodymyr Vynnychenko and Argonauts of the Universe by Volodymyr Vladko. These works embraced the idea that proletarians, empowered by advanced machinery, could triumph over the bourgeoisie and establish a communist utopia.</p> <p>Sandro Kasyanyuk\u2019s works, though less polished, represent an early and unique articulation of techno-communism in Ukrainian science fiction. His First Steps depicts a mechanic metaphorically entwined with the machines he operates, embodying the Marxist principle that human labor and technology could harmonize to achieve revolutionary change. In New Utopia, Kasyanyuk envisions a future where technological marvels effortlessly address all societal needs, reflecting the era\u2019s unshaken faith in science and industrialization.</p> <p>The end of this era in the 1960s marked a significant departure from the rigid framework of Soviet Ukrainian techno-communism. Authors began intertwining science fiction with mysticism and existential exploration. Oles Berdnyk stood out as a trailblazer, blending visionary themes and religious mysticism into his novels. His works challenged the dominant ideology by presenting alternative visions for humanity that transcended the boundaries of science and technology, leading to his imprisonment on two separate occasions.</p>"},{"location":"insiders/#the-golden-age-of-ukrainian-science-fiction","title":"The Golden Age of Ukrainian Science Fiction","text":"<p>The 1970s and 1980s marked a Golden Age for Ukrainian science fiction. Free from the heavy-handed propaganda of earlier decades, writers focused on philosophical questions and explored new literary styles. Works from this era often grappled with issues of identity, morality, and the nature of existence. Volodymyr Savchenko's Self-Discovery tackled themes of cloning and individuality, prefiguring later postmodern explorations of identity. Similarly, Ihor Rosokhovatskyi's syhom trilogy, including The Guest and The Last Signal, questioned the relationship between humanity and artificial intelligence.</p> <p>Yevhen Filimonov and Viktor Polozhiy also contributed to the genre with stories that blended scientific curiosity with existential dilemmas. Filimonov's The Ophthalmologist and The Music Box explored the psychological impacts of technology, while Polozhiy's Solar Wind delved into themes of memory, identity, and perception.</p>"},{"location":"insiders/#postmodernism-and-the-challenges-of-the-1990s","title":"Postmodernism and the Challenges of the 1990s","text":"<p>The collapse of the Soviet Union in the 1990s brought economic hardship and a crisis of identity for Ukrainian writers. Many authors began writing in Russian to access larger markets, leading to a wave of re-Russification in Ukrainian science fiction. Writers like Boris Stern adopted postmodernist approaches, blending irony and satire with critiques of societal decay.</p> <p>However, notable exceptions like Halyna Pahutyak resisted Russian cultural influences. Her novel The Servant from Dobromyl drew on Ukrainian folklore and mythology, portraying Soviet imperialism as a destructive force in contrast to the enduring power of Ukrainian traditions.</p>"},{"location":"insiders/#the-metamodern-revolution-of-the-2010s","title":"The Metamodern Revolution of the 2010s","text":"<p>The 2010s brought about a metamodern revival in Ukrainian science fiction. Writers began incorporating elements of European and American SF traditions, blending them with local themes and concerns. Svetlana Taratorina's Lazarus used folklore and historical parallels to critique Russian chauvinism. Similarly, Maxim Gah's The Fifth Park offered a cyberpunk-inspired vision of a world where technocratic utopias have failed, creating spaces for surreal and poetic reflections on human existence.</p>"},{"location":"insiders/#the-importance-of-my-research","title":"The Importance of My Research","text":"<p>By studying the evolution of Ukrainian science fiction, my research seeks to illuminate how literature reflects and shapes national identity. Ukrainian SF has oscillated between ideologies, from the naive optimism of techno-communism to the existential reflections of the Golden Age, and finally to the metamodernist experimentation of today. These shifts not only mirror the history of Ukraine but also reveal the profound ways in which fiction can respond to political and cultural challenges. Through this work, I aim to contribute to a deeper understanding of Ukrainian literature and its place within the global tradition of science fiction.</p>"},{"location":"insiders/access-management/","title":"Access management","text":"<p>The Material for MkDocs Insiders repository is a private repository hosted on GitHub and access is, therefore, managed through GitHub. This section covers everything you need to know in order to gain access to the private Material for MkDocs Insiders repository.</p>"},{"location":"insiders/access-management/#how-to-get-access","title":"How to get access","text":"<p>As the private Material for MkDocs Insiders repository is hosted on GitHub, you require a GitHub account to become a sponsor and to gain access. After sponsoring us on one of our sponsoring tiers starting at $15 a month, you'll get access to the private Insiders repository.</p> <p>Please note that the process of gaining access is only partially automatable due to technical reasons. Depending on the type of account you've used to become a sponsor, we might need more information from you before we can grant access.</p>"},{"location":"insiders/access-management/#individuals","title":"Individuals","text":"<p>If you sponsor using a personal account, you will receive an invitation link via email to the private Material for MkDocs Insiders repository immediately after initiating your sponsorship. This link is valid for seven days. Once you accept the invitation, you'll be ready to get started.</p> <p>If the link expired, please contact us at sponsors@squidfunk.com and we'll send you a new one.</p>"},{"location":"insiders/access-management/#organizations","title":"Organizations","text":"<p>When sponsoring using an organization account, GitHub will not send an automated invitation via email to access the private Material for MkDocs Insiders repository. Due to GitHub limitations, granting access to a private repository for an entire organization is not possible.</p> <p>Therefore, please contact us at sponsors@squidfunk.com with the name of a personal account or the name of a bot account that is publicly or privately listed as an owner of your GitHub organization after you received a confirmation that your sponsorship was initiated.</p> <p>We will add this designated account as a collaborator, and once the invitation is accepted within seven days, your organization will be all set to get started.</p>"},{"location":"insiders/access-management/#enterprises","title":"Enterprises","text":"<p>If you would like to sponsor us using an enterprise account, we recommend using a personal account or a bot account to initiate the sponsorship and access the private Material for MkDocs Insiders repository using this account.</p>"},{"location":"insiders/access-management/#restrictions","title":"Restrictions","text":"<p>GitHub sets limitations beyond our control, which is why we require further information regarding collaborators of private repositories and matching of GitHub accounts.</p>"},{"location":"insiders/access-management/#collaborators","title":"Collaborators","text":"<p>GitHub policy limits access to private repositories to personal accounts only, which is why it is currently not possible for us to add organization accounts to the Material for MkDocs Insiders repository \u2013 a private repository.</p> <p>As much as we would love to give each member of your organization access, it's simply not feasible for us to add each member account, which is why every sponsoring tier is limited to one seat. However, you can use a bot account to work around this limitation.</p>"},{"location":"insiders/access-management/#matching","title":"Matching","text":"<p>Due to privacy reasons, GitHub does not allow email addresses to be matched with GitHub accounts. When requesting access via email at sponsors@squidfunk.com, it's necessary to provide us with the name of a personal account.</p>"},{"location":"insiders/access-management/#bot-account","title":"Bot account","text":"<p>Given that only personal accounts can be listed as collaborators on private repositories, ensuring access for an entire organization requires coordination through individuals. Changes within the team could lead to losing access to the entire organization.</p> <p>To avoid this, you have the option to create a bot account, which is a new personal account that does not belong to a specific individual but is publicly or privately listed as the owner of the GitHub organization</p> <p>Using a bot account for access management and initiating your public or private sponsorship through it also allows for better attribution of sponsorship costs, allowing you to manage access and payment for all sponsorships through a single account, and is thus recommended.</p>"},{"location":"insiders/access-management/#expired-invitations","title":"Expired invitations","text":"<p>The invitation to the private Material for MkDocs is valid for seven days, a limitation imposed by GitHub. If invitations are not accepted within this period, you'll need to contact us via mail at sponsors@squidfunk.com, and we will re-issue the invitation immediately.</p>"},{"location":"insiders/access-management/#team-management","title":"Team management","text":"<p>If you are using Material for MkDocs Insiders as an individual and don't collaborate with other users, forking the private repository is not necessary. However, when working with a team, it is not possible to simply share your collaborator status with other accounts. Therefore, in order to work in a team, the account with access to Insiders can fork, clone, or mirror the private Material for MkDocs Insiders repository to an organization, providing a pathway for team collaboration.</p>"},{"location":"insiders/access-management/#outside-collaborators","title":"Outside collaborators","text":"<p>When working with outside collaborators, you should know that the Insiders edition is compatible with the community edition. All new features and configuration options are backward-compatible or implemented behind feature flags. Most Insiders features enhance the overall experience, e.g., by creating better social cards or instant previews. While these features add value for your site's users, they are most certainly not necessary for previewing your site.</p> <p>This means that outside collaborators can build the documentation locally with the community edition, and when they push their changes, your CI pipeline will build it with Insiders. When using built-in plugins exclusive to Insiders, we recommend using the group plugin.</p> <p>See the getting started guide for more information.</p>"},{"location":"insiders/access-management/#forking","title":"Forking","text":"<p>Forking a repository creates a copy of the repository that allows for independent development while maintaining a link to the original repository for updates.</p>"},{"location":"insiders/access-management/#cloning","title":"Cloning","text":"<p>Cloning a repository copies the repository to your local machine or codespace, facilitating offline work and content management. You can, of course, also clone a private fork.</p>"},{"location":"insiders/access-management/#mirroring","title":"Mirroring","text":"<p>Mirroring a repository creates an identical copy, ensuring you have the flexibility to host and work with the repository in other environments besides GitHub. This is a particularly useful strategy for organizations hosting their repositories in a private environment outside of GitHub.</p>"},{"location":"insiders/access-management/#github-alternatives","title":"GitHub alternatives","text":"<p>Material for MkDocs Insiders is designed to be compatible with various repository hosting platforms, including GitLab. The key requirement is still a GitHub account, as we use GitHub Sponsors for transactions and GitHub to manage access to the private Insiders repository.</p> <p>Once you've become a sponsor and secured access to the private Insiders repository via an individual GitHub account, you can mirror the repository in another location. This mirroring process not only allows for easy integration into your existing workflow but also ensures that your projects stay up-to-date with the latest features and improvements of Insiders.</p> <p>Our discussion board is a valuable resource for any questions about integrating Material for MkDocs Insiders into your projects. It offers a space to connect with others who may have similar requirements and setups, as well as to exchange tips and explore solutions together.</p>"},{"location":"insiders/getting-started/","title":"Getting started with Insiders","text":"<p>Material for MkDocs Insiders is a compatible drop-in replacement for Material for MkDocs, and can be installed similarly using <code>pip</code>, <code>docker</code> or <code>git</code>. Note that in order to access the Insiders repository, you need to become an eligible sponsor of @squidfunk on GitHub.</p>"},{"location":"insiders/getting-started/#requirements","title":"Requirements","text":"<p>After you've been added to the list of collaborators and accepted the repository invitation, the next step is to create a personal access token for your GitHub account in order to access the Insiders repository programmatically (from the command line or GitHub Actions workflows):</p> <ol> <li>Go to https://github.com/settings/tokens</li> <li>Click on Generate a new token</li> <li>Enter a name and select the <code>repo</code> scope</li> <li>Generate the token and store it in a safe place</li> </ol> <p>Some of the instructions below require that the <code>GH_TOKEN</code> environment variable is set to the value of the personal access token you generated in the previous step. Note that the personal access token must be kept secret at all times, as it allows the owner to access your private repositories.</p>"},{"location":"insiders/getting-started/#installation","title":"Installation","text":""},{"location":"insiders/getting-started/#with-pip","title":"with pip","text":"<p>Material for MkDocs Insiders can be installed with <code>pip</code>. You will normally want to install the latest release but can also install a specific older release or even the latest development version. Make sure you have the <code>GH_TOKEN</code> variable set as instructed above.</p> Specific releaseLatest <p>Pick the corresponding tag from the list of tags for the Insiders repository. In the <code>pip</code> command below, replace the tag at the end of the URL with the one you want.</p> <pre><code>pip install git+https://${GH_TOKEN}@github.com/squidfunk/mkdocs-material-insiders.git@9.4.2-insiders-4.42.0\n</code></pre> <pre><code>pip install git+https://${GH_TOKEN}@github.com/squidfunk/mkdocs-material-insiders.git\n</code></pre>"},{"location":"insiders/getting-started/#with-docker","title":"with docker","text":"<p>In case you want to use Material for MkDocs Insiders from within Docker, some additional steps are necessary. While we cannot provide a hosted Docker image for Insiders<sup>1</sup>, GitHub Container Registry allows for simple and comfortable self-hosting:</p> <ol> <li>Fork the Insiders repository</li> <li>Enable GitHub Actions on your fork<sup>2</sup></li> <li>Create a new personal access token<sup>3</sup><ol> <li>Go to https://github.com/settings/tokens</li> <li>Click on Generate a new token</li> <li>Enter a name and select the <code>write:packages</code> scope</li> <li>Generate the token and store it in a safe place</li> </ol> </li> <li>Add a GitHub Actions secret on your fork<ol> <li>Set the name to <code>GHCR_TOKEN</code></li> <li>Set the value to the personal access token created in the previous step</li> </ol> </li> <li>Create a new release to build and publish the Docker image</li> <li>Install Pull App on your fork to stay in-sync with upstream</li> </ol> <p>The <code>build</code> workflow is automatically run when a new tag (release) is created. When a new Insiders version is released on the upstream repository, the Pull App will create a pull request with the changes and pull in the new tag, which is picked up by the <code>build</code> workflow that builds and publishes the Docker image automatically to your private registry.</p> <p>Now, you should be able to pull the Docker image from your private registry:</p> <pre><code>docker login -u ${GH_USERNAME} -p ${GHCR_TOKEN} ghcr.io\ndocker pull ghcr.io/${GH_USERNAME}/mkdocs-material-insiders\n</code></pre> <p>Should you wish to add additional plugins to the insiders container image, follow the steps outlined in the Getting Started guide.</p>"},{"location":"insiders/getting-started/#with-git","title":"with git","text":"<p>Of course, you can use Material for MkDocs Insiders directly from <code>git</code>:</p> <pre><code>git clone git@github.com:squidfunk/mkdocs-material-insiders.git mkdocs-material\n</code></pre> <p>The theme will reside in the folder <code>mkdocs-material/material</code>. When cloning from <code>git</code>, the theme must be installed, so MkDocs can find the built-in plugins:</p> <pre><code>pip install -e mkdocs-material\n</code></pre>"},{"location":"insiders/getting-started/#built-in-plugins","title":"Built-in plugins","text":"<p>When you're using built-in plugins that are solely available via Insiders, outside contributors won't be able to build your documentation project on their local machine. This is the reason why we developed the built-in group plugin that allows to conditionally load plugins:</p> <pre><code>plugins:\n  - search\n  - social\n\n  # CI=true mkdocs build\n  - group:\n      enabled: !ENV CI\n      plugins:\n        - git-revision-date-localized\n        - git-committers\n\n  # INSIDERS=true mkdocs build\n  - group:\n      enabled: !ENV INSIDERS\n      plugins:\n        - optimize\n        - privacy\n</code></pre> <p>Of course, you can also enable both groups with:</p> <pre><code>CI=true INSIDERS=true mkdocs build\n</code></pre> <ol> <li> <p>Earlier, Insiders provided a dedicated Docker image which was available to all sponsors. On March 21, 2021, the image was deprecated for the reasons outlined and discussed in #2442. It was removed on June 1, 2021.\u00a0\u21a9</p> </li> <li> <p>When forking a repository, GitHub will disable all workflows. While this is a reasonable default setting, you need to enable GitHub Actions to be able to automatically build and publish a Docker image on GitHub Container Registry.\u00a0\u21a9</p> </li> <li> <p>While you could just add the <code>write:packages</code> scope to the personal access token created to access the Insiders repository, it's safer to create a dedicated token which you'll only use for publishing the Docker image.\u00a0\u21a9</p> </li> </ol>"},{"location":"insiders/how-to-sponsor/","title":"How to sponsor","text":"<p>Becoming a sponsor for Material for MkDocs is a straightforward process through @squidfunk's GitHub Sponsors profile. By supporting the project with a monthly contribution of $15 a month or more, you can sponsor either via an individual or organizational GitHub account.</p>"},{"location":"insiders/how-to-sponsor/#walkthrough","title":"Walkthrough","text":"<p>Want to become a sponsor? We will guide you through the sponsoring process below If you have additional questions, you can find detailed information about payment and billing, access management, runtime and cancellation, privacy, license and support on dedicated pages.</p>"},{"location":"insiders/how-to-sponsor/#sponsoring-tier","title":"Sponsoring tier","text":"<p>First, it's a good idea to explore our sponsoring tiers, as each sponsoring tier is designed to accommodate different levels of sponsors and includes dedicated benefits.</p> <p>After reviewing the sponsoring tiers, it's time to choose one. Consider what you want to achieve and keep your requirements in mind, e.g. the number of projects you want to build or how many accounts you need. Switching tiers is possible at any time.</p> <p>Choosing a tier will take you to GitHub's sponsorship confirmation page.</p>"},{"location":"insiders/how-to-sponsor/#sponsorship-summary","title":"Sponsorship summary","text":""},{"location":"insiders/how-to-sponsor/#payment-and-billing","title":"Payment and billing","text":"<p>Next, GitHub will ask you to provide your billing information, which is required to process your sponsorship payment. On this page, the Sponsorship summary section displays the (possibly prorated) amount due to initiate your sponsorship. This amount is determined by your account's billing cycle, which can be set to a monthly or yearly interval.</p> <p>Proceed to input your payment information, specifically your credit card details. Please make sure that the used credit card is valid and will remain so for an extended period to help avoid any interruptions in your sponsorship.</p>"},{"location":"insiders/how-to-sponsor/#privacy","title":"Privacy","text":"<p>On this page, you can also set the visibility of your sponsorship. You have the option to keep your sponsorship private or to make it public, which includes listing your name or organization on the list of our sponsors and, for organizations, the opportunity for logo placement.</p>"},{"location":"insiders/how-to-sponsor/#news-and-updates","title":"News and updates","text":"<p>Note that we rarely send out emails, and when we do, it's usually to inform you about significant updates or changes to the project, so it's best to keep this option enabled. To stay updated on the latest developments, you can check out our changelog.</p>"},{"location":"insiders/how-to-sponsor/#tax-information","title":"Tax information","text":"<p>If you're sponsoring as an organization, it's essential to provide your country, region and VAT number, so we can correctly attribute your sponsorship. This is due to the fact that VAT is handled differently for individuals than for organizations.</p>"},{"location":"insiders/how-to-sponsor/#confirmation","title":"Confirmation","text":"<p>Before finalizing your sponsorship, take a moment to review all the details of your sponsorship, including the selected tier, billing information, and payment details.</p> <p>Then proceed to confirm your sponsorship by clicking the Sponsor button.</p>"},{"location":"insiders/how-to-sponsor/#access-management","title":"Access management","text":"<p>After completing the sponsorship process and your payment is successfully processed, you will be all set to gain access to the private Material for MkDocs Insiders repository.</p> <p>Ready to become a sponsor?</p> <p>\u00a0 Choose a sponsoring tier </p> <p>If you still find yourself with more questions, feel free to reach out to Kathi via mail at sponsors@squidfunk.com for additional support.</p>"},{"location":"insiders/license/","title":"License","text":"<p>Material for MkDocs Insiders is licensed under the MIT license, the exact same license used for the community edition. The MIT license is a permissive license that allows commercial use, redistribution, and everything else as long as the original authors are credited in source files.</p> <p>The MIT license is the most popular license among all Open Source projects.</p>"},{"location":"insiders/license/#mit-license","title":"MIT License","text":"<p>The MIT License gives you the freedom to work with the code with minimal restrictions. When using Material for MkDocs Insiders or the community edition, make sure to include the copyright notice and avoid future liability claims. Its appeal lies in its simplicity and clear terms, making it a go-to for projects of any scale. Its popularity stems from its simplicity, clarity, and development-friendly terms, making it suitable for all types of projects. The MIT License ensures that anyone \u2013 individual or organization \u2013 can use Material for MkDocs Insiders under the same conditions as the community edition.</p>"},{"location":"insiders/license/#advantages-of-mit","title":"Advantages of MIT","text":"<p>The MIT License is favored for its balance between freedom and protection, appealing to those who find GNU/GPL licenses too restrictive or advocate for privatized software. Its broad wording supports both open community development and the use of components in proprietary software.</p>"},{"location":"insiders/license/#mit-in-open-source","title":"MIT in open source","text":"<p>Material for MkDocs stands out for being open source, developed by a small, user-oriented team committed to delivering high-quality tools for the community. Here\u2019s what this means for you:</p> <ul> <li>Independence from investors: Our focus is purely on developing the project and guiding it without external pressures. This freedom means we\u2019re all about what\u2019s best for the community and the project's future.</li> <li>Freedom from vendor lock-in: Thanks to Open Source principles, you can use Material for MkDocs without any strings attached. Customize or integrate it into your projects without worrying about restrictions. Your docs belong to you, and you are free to change the software at any time.</li> <li>Ecosystem Development: Material for MkDocs is more than a tool; it's a community-driven effort to build an ecosystem, which it already is. Through open collaboration, we\u2019re constantly adding new extensions, plugins, and integrations to give you more tools at your disposal.</li> </ul>"},{"location":"insiders/license/#fair-use-policy","title":"Fair use policy","text":"<p>Our fair use policy is here to ensure the project continues to thrive, which is why we request that our sponsors respect the following:</p> <ul> <li>Source Code Distribution: Keeping our sponsorware model intact means we count on you not to distribute the Insiders source code. While you're encouraged to privately fork, or mirror the private Insiders repository for your needs, keeping the source private is key. If this guideline is violated, everybody loses, as it will reduce the time of us maintainers we could otherwise set aside to push this project forward.</li> <li>Sponsorship tiers: We base our sponsorship tiers on non-commercial or commercial use and ask our sponsors to respect these requirements when initiating a sponsorship. Additionally, we base our sponsoring tiers on the number of sites you intend to build. Please upgrade your sponsorship accordingly to support the project\u2019s growth and ensure its continued development.</li> </ul>"},{"location":"insiders/mt-180/","title":"My Participation in MT180 \u2013 National Final 2025","text":""},{"location":"insiders/mt-180/#what-is-mt180","title":"What is MT180?","text":"<p>Ma Th\u00e8se en 180 Secondes (MT180) is an international French-language competition inspired by the Three Minute Thesis (3MT\u00ae) developed by the University of Queensland in Australia. It allows PhD students to present their research topic\u2014in three minutes, in French, and using simple, accessible language\u2014to a diverse audience.</p> <p>The concept was adopted in 2012 in Quebec by Acfas (Association francophone pour le savoir) and has since expanded across the francophone world.</p> <p>The National Final of MT180 took place on March 25, 2025.</p>"},{"location":"insiders/mt-180/#my-experience","title":"My Experience","text":"<p>I had the opportunity to compete in the 2025 National Final of MT180 as one of five finalists, each representing a different background and research focus:</p> <ul> <li>2 competitors from Syria</li> <li>1 from Burundi</li> <li>1 from Hungary</li> <li>And myself</li> </ul> <p>My PhD explores the history and philosophy of Ukrainian science fiction literature, particularly how it mirrors the intellectual trajectory of European positivism\u2014from techno-optimism to postmodern pessimism.</p> <p>To communicate this complex and abstract topic in just three minutes, I transformed my thesis into a French rap performance. This creative format allowed me to engage the audience, simplify dense philosophical ideas, and honor the cultural rhythms of both science and storytelling.</p>"},{"location":"insiders/mt-180/#my-mt180-phd-rap","title":"My MT180 PhD Rap","text":"<pre><code>Yo! \u00e9coute bien, c\u2019est l\u2019histoire d\u2019un Ukrainien,  \nMa th\u00e8se ? La Science-Fiction, mon feu et mon lien.  \nLes \u00e9toiles, les machines et les mondes lointains,  \nMoi, petit gosse d\u00e9j\u00e0, tu sais, je r\u00eavais sans fin.\n\nLa Science-Fiction d\u2019Ukraine et le positivisme  \nAvan\u00e7aient un peu ensemble, comme le m\u00eame organisme.  \nDe techno-espoir aux d\u00e9sillusions,  \nUn r\u00eave bris\u00e9, tu sais, la m\u00eame chanson.\n\nIls r\u00eavaient du ciel, d\u2019un monde en lumi\u00e8re,  \nMais la guerre a teint leurs vies en poussi\u00e8re.  \nLes bombes ont parl\u00e9, il n\u2019y a plus d\u2019id\u00e9al,  \nLe communisme? Bof! Juste un mirage fatal.\n\nComme le positivisme r\u00eavant trop grand,  \nAuguste Comte disait : \"Kant nous ment\".  \nLa science seule ? Pas ouf! C'\u00e9tait leur cri,  \nMais m\u00eame la science, au fond, s\u2019est trahie.\n\nTous les cygnes sont blancs ? Vraiment ?  \nUn seul noir - et hop!-hop!-hop! - fini l\u2019argument.  \nLyotard, Foucault ont tout dynamit\u00e9,  \nLa v\u00e9rit\u00e9? Bof! Un mythe pour dominer.\n\nDeux cents ans \u00e0 chercher l\u2019ultime v\u00e9rit\u00e9,  \nL\u2019amour vrai, les vrais hommes et la sinc\u00e9rit\u00e9.  \nMais nul n\u2019a compris ce que \u00e7a signifiait,  \nQue faire, que croire? Ah bon?! Et que murmurer?\n\nKant, Comte, Sartre, Foucault, et c\u00e6tera,  \nChacun son r\u00e9cit, chacun sa Torah.  \nJ\u2019donne pas de le\u00e7on. C\u2019est pas mon r\u00f4le,  \nLe bonheur des uns fait le malheur des dr\u00f4les.\n\n\u00c0 chacun son poison, chacun son destin,  \nLe monde est bien plus vaste qu\u2019on l\u2019imaginait. Fin!\n</code></pre>"},{"location":"insiders/mt-180/#certificate","title":"Certificate","text":"<p>Participating in MT180 was not only a challenge in communication, but also an opportunity to bridge academic thought and creative performance. Presenting my research as a rap was a way to celebrate the intersection of science, literature, and culture\u2014and to show that even the most complex ideas can be shared with clarity, rhythm, and heart.</p> <p></p>"},{"location":"insiders/payment-and-billing/","title":"Payment and billing","text":"<p>Since we host our repositories on GitHub, including both the Material for MkDocs community edition and the private Insiders edition, GitHub Sponsors is a natural fit for handling all financial transactions, as well as for access management to the Insiders repository.</p> <p>Therefore, to become a sponsor of Material for MkDocs, a GitHub account is mandatory.</p>"},{"location":"insiders/payment-and-billing/#payment","title":"Payment","text":"<p>GitHub Sponsors currently only accepts payments via credit card, as they removed support for PayPal at the beginning of 2023. When entering your credit card details, ensure that the card remains valid over an extended period to prevent any disruptions to your sponsorship.</p>"},{"location":"insiders/payment-and-billing/#invoices","title":"Invoices","text":"<p>GitHub Sponsors automatically issues and send a payment receipt via email after each billing cycle. These receipts serve as confirmation of payment rather than formal invoices. As all transactions are managed by GitHub Sponsors, GitHub is your primary point of contact for payment and billing matters, not us.</p> <p>If you need an official invoice from us for your records, please get in touch with us at sponsors@squidfunk.com before initiating your sponsorship.</p>"},{"location":"insiders/payment-and-billing/#refunds","title":"Refunds","text":"<p>Our team does not have insights or access to details related to sponsorship transactions of our sponsors, as GitHub does not provide us with this information. For questions regarding payment issues or for more detailed information about your sponsorship, please get in touch with the GitHub support team.</p>"},{"location":"insiders/payment-and-billing/#discounts","title":"Discounts","text":"<p>Unfortunately, we can't offer discounts. To ensure that everyone in our community can afford to become a sponsor, we keep the barrier low and set prices as low as possible, starting at $15 a month for non-commercial use and at $125 a month for commercial use.</p>"},{"location":"insiders/payment-and-billing/#free-access","title":"Free access","text":"<p>Free access to the Insiders edition is only granted exclusively to our Community Experts and to selected members of the MkDocs ecosystem. Our Community Experts program is designed to recognize and reward users who significantly contribute to the community by sharing their expertise on our discussion board.</p> <p>Our discussion board facilitates the exchange of insights on workarounds, setups, and features and addresses queries from users at all levels of experience. All communication is public and visible for the entire community, benefitting everyone.</p> <p>Community experts not only enrich our project but also enable our team to focus on continuous improvement and the development of new features. Therefore, we are happy to provide them with free access to the private Insiders repository and encourage you to join the team as well!</p>"},{"location":"insiders/payment-and-billing/#billing-cycle","title":"Billing cycle","text":"<p>The billing cycle is an account-level setting on GitHub and is set to monthly or yearly. It can be changed at any time, so you might want to check the setting before sponsoring and change it either to monthly or yearly according to your own or your organization's preferences.</p> <p>If, for whatever reason, you cannot change your billing cycle, a practical solution is to create a dedicated GitHub bot account where you set the billing cycle accordingly and use it specifically for your sponsorship contributions. This is a strategy many of our organizational sponsors have successfully implemented.</p> <p>If you experience any difficulties or have further questions before sponsoring, please don't hesitate to contact us at sponsors@squidfunk.com for additional support.</p>"},{"location":"insiders/privacy/","title":"Privacy","text":"<p>Transparency is at the heart of our sponsorware model, which includes our funding goals, the features we're working towards, and, importantly, the acknowledgment of our sponsors. As a sponsor, you can support our project either publicly or privately, according to your preference.</p>"},{"location":"insiders/privacy/#public-sponsors","title":"Public sponsors","text":"<p>By default, GitHub lists all sponsorships publicly. To sponsor privately, you must explicitly select this option. When sponsoring publicly, your GitHub account will be listed as part of our sponsors, @squidfunk's sponsoring page, and within the \"sponsoring\" section of your GitHub account.</p>"},{"location":"insiders/privacy/#private-sponsors","title":"Private sponsors","text":"<p>For those preferring discretion, setting your sponsorship to private during the sponsorship initiation process ensures your sponsorship remains unlisted, keeping your affiliation with Material for MkDocs confidential.</p> <p>This setting can be adjusted at any time through your GitHub account's sponsorship settings.</p> <p>For companies concerned about being visible as sponsors of any project due to their privacy restrictions, creating a bot account on GitHub that is solely used for sponsoring is advised. This account, set to sponsor privately, won't be linked to any individual within your organization and provides an extra layer of anonymity.</p>"},{"location":"insiders/privacy/#administrative-requests","title":"Administrative requests","text":"<p>To focus on the development of our projects, we aim to reduce administrative tasks as much as possible for our small team, utilizing GitHub Sponsors for efficient sponsor management.</p>"},{"location":"insiders/privacy/#vendor-agreements","title":"Vendor agreements","text":"<p>Since GitHub Sponsors facilitates our sponsor transactions, they act as your vendor. For vendor agreements or related queries, especially for organizations with GitHub enterprise accounts, reaching out to GitHub Support is recommended.</p>"},{"location":"insiders/privacy/#non-disclosure-agreements","title":"Non-disclosure agreements","text":"<p>Given our limited resources as a small team, we are unable to review and sign NDAs. We advise those requiring such agreements to consult our promise for reassurance. Additionally, please contact us if you have any questions at sponsors@squidfunk.com</p>"},{"location":"insiders/privacy/#our-promise","title":"Our promise","text":"<p>We recognize the importance of privacy for our organizational sponsors, especially in the absence of formal agreements like NDAs. \"Our Promise\" is our assurance of commitment to your confidentiality and discretion.</p> <ul> <li>Confidential sponsorship: Your choice between public or private sponsorship is respected to the fullest. For private sponsors, we guarantee your relation with us remains confidential at all times, ensuring no public disclosure of your sponsorship.</li> <li>Logo usage and brand representation: Logo display and any form of public acknowledgment are completely under your control and will only proceed with your explicit consent. This ensures your brand is represented on your terms.</li> <li>Marketing and communication: We commit not to use the details of your sponsorship for marketing or promotional purposes without your approval. Your sponsorship details are guarded with the highest level of confidentiality, with no unauthorized use or disclosure.</li> </ul>"},{"location":"insiders/runtime-and-cancellation/","title":"Runtime and cancellation","text":"<p>The sponsorship model for Material for MkDocs is facilitated through GitHub Sponsors and, therefore, adheres to GitHub's policies. If you're curious about the duration of your sponsorship and the cancellation process, you will find everything you need to know below.</p>"},{"location":"insiders/runtime-and-cancellation/#runtime","title":"Runtime","text":"<p>Sponsorships remain valid as long as monthly or yearly subscriptions are active and only expire when you cancel the sponsorship or when your payment method expires.</p>"},{"location":"insiders/runtime-and-cancellation/#cancellation-process","title":"Cancellation process","text":"<p>Canceling your sponsorship initiates a cancellation request through GitHub, which is scheduled to take effect at the end of your current billing cycle. This means you'll retain access to Insiders until the cancellation officially becomes effective.</p> <p>All transactions are processed by GitHub and as we don't receive any information regarding your payment, we can't provide details about when your cancellation will be in place.</p>"},{"location":"insiders/runtime-and-cancellation/#how-to-cancel","title":"How to cancel","text":"<p>To downgrade or cancel your sponsorship, please follow the step-by-step guide from GitHub. If you have sponsored using an organizational account, ensure that you cancel the sponsorship under that specific account, as the collaborator and sponsor accounts may differ.</p>"},{"location":"insiders/runtime-and-cancellation/#effects-of-cancellation","title":"Effects of cancellation","text":"<p>Upon the effective date of your cancellation, GitHub will automatically remove you as a collaborator from the private Material for MkDocs Insiders repository. You will no longer receive updates. However, you are welcome to continue using the latest version available to you at the time of cancellation for as long as you like.</p> <p>GitHub deletes private forks</p> <p>Please note that once you lose your collaborator status, GitHub will automatically delete your private fork of the Insiders repository, so you may want to take steps to ensure that you have a local backup.</p>"},{"location":"insiders/runtime-and-cancellation/#automatic-cancellation","title":"Automatic cancellation","text":"<p>If your credit card expires, GitHub will automatically cancel your sponsorship and remove you as a collaborator. Regularly checking your payment method is recommended to avoid unintended cancellations. If it happens, you can reinstate your sponsorship with a new credit card.</p>"},{"location":"insiders/sf-one/","title":"Science Fiction in Ukraine (part I)","text":"<p>The variability in the genre of Ukrainian science fiction (SF) has always been deter- mined by the requirements of the time and the political situation. That is why the fiction of the 1920s promoted the ideology of naive techno-communism, but during the next forty years it became obvious that the Soviet project had reached a dead end, and its positivist component had not brought the desired results. Ukrainian SF writers then turned to mysticism and denial of a rational view of the world.</p> <p>Keywords: Ukraine, science fiction, soviet, communism, mysticism, ideology</p> <p>Author Information:</p> <p>Oleh Shynkarenko, ORCID</p> <p>How to cite this article:</p> <p>Shynkarenko, Oleh. \u201cScience Fiction in Ukraine: 1920\u20132020\u201d. Inform\u00e1ci\u00f3s T\u00e1rsadalom XXIII, no. 4 (2023): 58\u201372.</p> <p>All materials published in this journal are licenced as CC-by-nc-nd 4.0</p>"},{"location":"insiders/sf-one/#introduction","title":"Introduction","text":"<p>When we talk about science fiction (SF) in Ukraine, it is first worth defining certain boundaries of the definition. The first fantastic work written in the territory of modern Ukraine, so-called because it features descriptions of otherworldly creatures, is The Paterik of the Kievan Caves Monastery (Heppell 1989)\u2014a collection of stories from the thirteenth century about the foundation of the Kyiv-Pechersk Monastery and the everyday lives of its first inhabitants. Some works of Peter Mohyla of the seventeenth century are defined as fantastic as well. The Cossack Chronicles of the seventeenth and eighteenth centuries contain stories about folklore creatures; some researchers refer to these as the predecessors of Ukrainian horror literature. Feofan Prokopovich's ([1705] 1961) tragicomedy Volodymyr, created at the beginning of the eighteenth century, contains fantastical elements. All this, of course, is no Ukrainian SF for two reasons:</p> Sci-Fi literature appeared as a reaction to positivism <p>Positivism claims that neither theological nor metaphysical thinking will bring humanity the desired results; both ways of thinking are, in fact, illusions and self-deception. Positivism convincingly proved that only scientific and technological progress has tangible, useful results.</p> <p>This view is pure illusion, and at the end of the twentieth century there was what I call the \u201ccollapse of positivism,\u201d which even gave rise to a new SF genre that we call cyberpunk. But you can get an idea of the popularity of these views if you read the letters of well-known Ukrainian intellectual Ivan Franko (1856-1916) to translator Olga Roshkevich (Franko [1878] 1986):</p> <p>\"I am convinced that a great, worldwide revolution will slowly destroy the cur- rent order and establish a new one. By the word[s] \u201cworld revolution\u201d I do not mean a worldwide revolt of the poor against the rich, a worldwide massacre; this can be understood as a revolution only by the world\u2019s policemen, who do not know that the invention of steam engines, telegraphs, phonographs, micro- phones, electric machines, etc., introduces a revolution in the world almost as big as the entire bloody French revolution.\"</p> <p>Franko speaks here as a typical positivist. He hopes that electric machinery will not only change people\u2019s lives for the better but also make people better.</p> <p>Walter Smyrniw (2013) tried to define SF literature in his work Ukrainian Science Fiction: Historical and Thematic Perspectives, but he never managed to do it. And in my opinion, it is very simple: Science fiction literature is an artistic reaction to the spread and the collapse of positivism.</p> <p>In total, there are three types of knowledge about reality: theological, metaphys- ical, and positivist. At the beginning of the twentieth century, it became clear to the most progressive people of this time that theological and metaphysical ways of knowing reality are unproductive. You cannot build a locomotive or an airplane by praying or reading Kant\u2019s works; it requires science and technology. Hence the idea that science and technology are not only an ideal way of knowing reality but will also quickly bring maximum positive (or practical) results. Such an idea in literature led to the appearance of SF.</p> <p>But at the end of the twentieth century, it became clear that, although science and technology are quite productive, they bring not only positive but also negative results. We can call this understanding \u201cthe collapse of positivism.\u201d But, apart from positivism, no other productive ideas were found, which caused a feeling of frustration and hopelessness about the future. This feeling became the impetus for the revival of initially various forms of mysticism (if technology does not bring happiness, then one must open the third eye and go into the astral) and cyberpunk, which depicts a society that has reached a dead end due to positivism.</p> The Origins of Literary Ukrainian and the Absence of Early Ukrainian Science Fiction <p>Literary Ukrainian language appeared at the end of the eighteenth century after the publication of Ivan Kotlyarevsky\u2019s  Aeneid, a burlesque-travesty poem based on the plot of the classic poem of the same name by Roman poet Virgil.</p> <p>Using these two reasons as filters, we can say that Ukrainian SF did not exist un- til the beginning of the twentieth century. After all, although Kotlyarevsky\u2019s Aeneid has fantastic elements, all of them are far from the instructions of positivism. Like- wise, Jan Potocki\u2019s fantasy-philosophical novel The Manuscript Found in Saragossa (Potocki [1815] 2015) is often called the first Ukrainian fantasy novel, but Potocki, although he lived in the territory of modern Ukraine, was a Pole, and wrote his novel in French. The same applies to Mykola Gogol: although he was born in Ukraine, all his works were written in Russian and also had nothing to do with positivism.</p>"},{"location":"insiders/sf-one/#the-1920s-sandro-kasianyuk-and-red-roaring-twenties-positivism","title":"The 1920s: Sandro Kasianyuk and \u201cRed Roaring Twenties\u201d Positivism","text":"In search of the first Ukrainian SF, it is worth paying attention to the authors of the 1920s. <p>In search of the first Ukrainian SF, it is worth paying attention to the authors of the 1920s. In the first two issues of the literary magazine Ways of Art for 1922, two short stories were published that were later combined into a cycle called Machining Humanity by amateur writer Sandro Kasianyuk. This author\u2019s real name was Oleksandr, but he shortened it according to the \u201cmodernist\u201d fashion of the time. He was not professionally engaged in writing; in everyday life, he was a simple worker at the Kharkiv \u201cElectrosila\u201d plant. Literary critic Oleksandr Biletsky believed that Kasianyuk could very well become the \u201cUkrainian Wells with proletarian ideology\u201d (Biletsky 1926, 122). Kasianyuk is also mentioned in the work of Volodymyr (Walter) Smyrniw (2013).</p> <p>The dream of flying, becoming a train driver, learning to be a locksmith, a mechanic, an engineer in order to serve the people\u2014this is the pathos of Kasianyuk\u2019s works. Man and machine, according to the author, are true friends: \u201cAnd look how kindly they treat each other\u201d; they have \u201ccommon interests.\u201d Promoting the advantages of the wireless telegraph, Kasianyuk tells about a telegraph-radio operator who \u201clives in a huge thousands of millions space\u201d thanks to the discoveries of science. The story \u201cNew Utopia\u201d glorifies the greatness of technical reconstruction in the seaport, machines and cranes, electric plows, and a \u201cfarming school\u201d brought to \u201chigher degrees\u201d on some unknown island (Kasianyuk 1926).</p> <p>Kasianyuk\u2019s works are full of na\u00efve socialist utopianism; they glorify machines and technology. The man of the future in Kasianyuk\u2019s works is \u201conly a pointer, only a guide\u201d (Biletsky 1926, 123) for this technique. Kasianyuk\u2019s heroes are inspired by ideas for a better life in a socialist society.</p> <p>The plot of the novel Atom in Harness (Blum and Rosen [1929] 2017) is very indicative of that weird cocktail of Russian imperialist and communist propaganda that shaped the consciousness of Ukrainian authors of those times. The novel was written by an unknown writer under the pseudonym Blum and Rosen. The novel takes place in 1939. Humanity is divided between the bloc of Soviet (communist) countries (USSR, China, India, and Germany) and the capitalist bloc (the rest of the world). Capitalist countries formed a kind of federation and parliament in the city of Wellington (the capital of New Zealand). The world capitalist government is called \u201cthe Cabinet of Military Affairs and Espionage\u201d (Blum and Rosen [1929] 2017) and also sits in Wellington. This government considers the creation of a radio curtain from the radio transmitters of the USSR to be its main task. The transmitters are obviously broadcasting political propaganda from Moscow for the establishment of a world revolution, as Leo Trotsky dreamed about it. For this purpose, on the borders with the Soviet Union, large balloons with powerful radio stations, which broadcast jazz around the clock, are installed at different heights in the air. This creates a noise wall at the borders, which does not allow radio signals from the USSR to capitalist countries.</p> <p>The Soviet party leadership perfectly understands that Western liberal culture can create the impression among the youth of the countries occupied by the Moscow invaders that life outside the USSR is not as terrible and hopeless as Soviet propaganda portrays it. For this purpose, a whole campaign of opposition to Western culture is organized, banning certain artists and styles of music, even clothing: a famous story recounts two businessmen in Moscow being executed for trying to sell jeans. For some reason, jazz music causes special hatred among the Soviet authorities. The propagandists even come up with a poetic slogan: \u201cToday you play jazz, and tomorrow you will sell the Motherland.\u201d The Soviet people should have remembered that jazz is very dangerous because it can distract from the struggle against capitalism.</p> <p>The novel begins with the attempt of a young Moscow scientist Zhuravlyov to cross the Black Sea in a hot air balloon; he wants to get to the capitalist federation so that he can improve his invention\u2014the first nuclear reactor. The travelers manage to cross the border and fly to Italy, where they land and are arrested by the local police. Later, Zhuravlyov and his boyfriend manage to escape from the police and hide underground with local communists. At the same time, an intelligence group of agents of the capitalist federation infiltrates Moscow, steals Zhuravlyov\u2019s nuclear reactor, and uses it to destroy the building of the former British embassy, at the same time kidnapping a young Komsomol girl, Lyudmila Chudnovska. Lyudmila manages to escape, get the necessary materials for Zhuravlyov, and even prevent the execution of the leader of the pro-communist rebellion in Madagascar. Zhuravlyov, having stolen inventions from the capitalists, manages to complete his apparatus, with the help of which he destroys most of the military equipment and weapons of the capitalist federation, as well as the seat of the world capitalist government. After that, with the help of Italian and New Zealand communists, Zhuravlyov returns to Moscow, where he speaks to a wide audience with a detailed description of his invention and the prospects for a future communist economy. After the destruction of the military equipment and the headquarters of the world capitalist government, a workers\u2019 uprising begins in the capitalist countries. The novel ends with the common singing of \u201cThe Internationale.\u201d</p> <p>As can be seen from the plot of this novel, the Ukrainian writer dreamed that Russian communists would destroy Western liberal-democratic society with the help of nuclear weapons stolen from it and then establish a world communist dictatorship centered in Moscow. It seems that Moscow\u2019s wishes have not changed over the past hundred years.</p> <p>In general, it is worth noting that the 1920s were a time of illusory fascination with the communist utopia. It seemed to the authors of fantastic works that machines plus communism (or, as leader of the Russian communists Vladimir Lenin said, \u201csocialism plus electrification of the whole country\u201d) would immediately lead to the goal of positivism. To this end, it was proposed to concentrate all efforts on industrial production, to push all theology out of life, and to leave from metaphysics only Marxism-Leninism. Some ten years later, such a view led Ukraine to the first catastrophe in the confrontation with Russian imperialism, which arranged the Holodomor and eliminated the Ukrainian intellectuals. This was the Ukrainian \u201croaring twenties\u201d; these times literally roared with engines, factories, and plants. It is no coincidence that Volodymyr Vynnychenko\u2019s SF novel, published in 1924, was called Solar Machine (Vynnychenko 1928).</p> <p>Vynnychenko was in opposition to the government of Ukraine, which was later captured by the Russian communists. For a short period in 1918, he headed the government of the Ukrainian People\u2019s Republic, but Vynnychenko quickly quarreled with opponents of the conservative political camp because he was a committed socialist. As soon as the Russian\u2013Ukrainian war began in 1918, he left politics and emigrated to Austria, where he wrote his memoirs and his SF novel. The oppositionist and emigrant Solar Machine was an unheard-of success among readers and had three reprints in Soviet Ukraine from 1928 to 1930. But after 1930, the elimination of Ukrainian national deviations began and Vynnychenko was banned.</p> <p>In Solar Machine, princess Elise agrees to marry capitalist tycoon Mertens in order to later avenge the death of her bankrupt father. The far-left INVARAC (International Vanguard of Revolutionary Action) is gathering at the tycoon\u2019s estate, to which Elisa swears allegiance in order to take revenge on Mertens.</p> <p>Inventor Rudolf Stor is convinced that man is burdened by the need for food, and that he would become truly free if he were fed directly by the sun\u2019s rays. In search of a way to do this, he discovered the \u201csolar mineral\u201d helionite, which is capable of turning any organic matter into a nutrient under the influence of light\u2014\u201csolar bread.\u201d With the help of the mineral, he builds a \u201csolar machine\u201d in which it is enough to put grass or leaves in, sprinkle with sweat, and let the sunlight through, to get free food.</p> <p>INVARAC is interested in the \u201csolar machine.\u201d The organization spreads the invention around the world, thereby liberating people from the oppression of capitalists. People no longer need to work for a piece of bread, so factory workers are leaving their jobs. In addition, \u201csolar bread\u201d causes a feeling of euphoria. At first, it seems like a good thing, but soon civilization itself collapses\u2014power plants stop working without workers; water pipes and communications fail. People begin to fight for the remnants of the property of their exploiters and against those who do not accept \u201csolar bread.\u201d Mertens prepares to clear Berlin of rebels, while enemies are advancing on Germany. Seeing the collapse of all hopes for the further development of humanity, with people reduced to an animal state, Stor gathers the Free Union of Creative Work, which restores the life of the cities. After winter, the desire for work awakens in people, but it is now voluntary, and not forced.</p> <p>As can be seen from the text of the novel, Vynnychenko was also caught up in the modern illusions of technocratic positivism. It seemed to him that technological inventions would lead to a revolution and the victory of the ideas of socialism. The communist occupation of Ukraine and Moscow\u2019s political terror taught him nothing.</p>"},{"location":"insiders/sf-one/#the-1930s-hard-fiction-and-futurism","title":"The 1930s: Hard Fiction and Futurism","text":"The 1930s saw the start of hard fiction and futurism. <p>The 1930s saw the start of hard fiction and futurism. These were characterized by the fact that the former fascination with positivist machinery began to be felt as an anachronism and turned from a goal, an id\u00e9e fixe, into a beautiful decoration. A fantasy novel from the 1930s was transformed from an intrusive piece of communist propaganda into something that had a quintessential text of liberal pop-culture as a sample to follow.</p> <p>One of the most striking examples of this is Yuri Smolych\u2019s trilogy Beautiful Disasters (Smolych [1929\u201334] 1965). It depicts the mad Romanian scientist Dr. Galvanescu, who uses surgical operations to transform people into robots. This plot clearly imitates The Island of Dr. Moreau by Herbert Wells. Smolych does not suggest outright communist propaganda and does not call for a world revolution controlled from Moscow. He simply writes an exciting adventure novel in a \u201cwestern style.\u201d The ideological confrontation in it is more like a domestic quarrel. When Komsomol member and pretty girl Yulia Sakhno tries to find out about the doctor\u2019s experiments, she talks to his employee. He is afraid.</p> <p>Yuri Smolych trilogy Beautiful Disasters</p> <p>\"Shut up. You say you came from Germany?\"</p> <p>\"Yes.\"</p> <p>\"But you are Ukrainian?\"</p> <p>\"Of course.\"</p> <p>\"An emigrant?\"</p> <p>\"You see, I studied in Germany and stayed at the department for scientific work. After that I have to go home\u2026\"</p> <p>\"So you are\u2026 a Soviet citizen?\"</p> <p>The stranger backed away from the window and slammed the frame with a curse.</p> <p>Sakhno could still hear how he huddled near the pinhole, cursing himself and the Soviet government. Stunned and confused, Sakhno stood under the window, not knowing what to do. She would have stood there for a long time, but the window opened once more and the head of the indignant stranger stuck out for a moment.</p> <p>\u201cIf you don\u2019t get out of here, you bloody communist bitch, I\u2019ll call Dr. Galvanescu immediately!\u201d (Smolych [1929\u201334] 1965, 54)</p> <p>Pavlo Beilin, author of the afterword to Smolych\u2019s novels, writes that \u201cthe main idea of the book is not to prove that the collapse of the ideas of bourgeois society is beneficial to us. The writer, comparing bourgeois and Soviet medicine, wanted to reveal the misanthropic essence of bourgeois ideology and the humanity and progressiveness of Soviet and socialist science\u201d (Smolych [1929\u201334] 1965, 223).</p> <p>So, in ten years, the desire to seize capitalist countries and forcibly introduce Russian communism there turned into banal envy. Smolych himself was a devoted communist; for many years he cooperated with the Soviet secret police and wrote reports on his colleagues\u2014writers and film directors. These denunciations were so detailed and refined that the history of Ukrainian literature can be studied by them.</p> <p>Volodymyr Vladko is also a prominent figure in this direction. He created several truly noticeable novels. For example, The Argonauts of the Universe (Vladko 1935) was published several times in Japan and Croatia. It also was the first work in Ukrainian literature about flight into space. Interestingly, two Russians and one Chinese go on a space trip to Venus, and a Ukrainian, a student of the Polytechnic Institute, Galina Ryzhko, sneaks on board illegally. In the first editions of the novel, instead of the girl-student there was a boy-student Vasyl Ryzhko, but the author received 1500 letters from readers with various tips and realized that the girl would be much better to save from the attacks of the Venus monsters because it would look very sexy. According to the genre, it is a typical novel of hard SF that any American author could have written. Of the Soviet features, it only has a flag of the USSR, which the heroes set on Venus. Interestingly, the author rewrote his novel many times, in each edition changing some essential details there to adjust his text to the requirements of the time. For example, in the versions of the 1950s, Vladko wrote about the leading science of the countries of the socialist camp\u2014Hungary, Bulgaria, and the German Democratic Republic. Of course, in 1935, when the first edition of this novel was published, the mentioned countries were still bourgeois, and Vladko could not write about the leading science in these countries, so as not to have conflicts with communists carrying out surveillance of the literature.</p> <p>Fiction writers of the so-called socialist camp, which was the zone of military-political influence of the mutation of the former Russian Empire\u2014the USSR\u2014perfectly understood the power of the influence of communist propaganda through the works of SF and exploited this power in every way, until some of them realized its perniciousness. One of the first of such writers was Stanislaw Lem. Lem banned the translation of his first novel, The Magellanic Cloud, into Japanese, citing the following reasoning: \u201cJapan has never known a communist regime, and if my novel inclines even one Japanese person to communism, I will burn in hell\u201d (Lem 2005, 12).</p> <p>Unfortunately, most Ukrainian Soviet fiction writers who survived the collapse of the USSR remained loyal communists and even Russian imperialists. They did not see in this any danger for their country, and, as we see now, they miscalculated cruelly.</p> <p>Another novel by Volodymyr Vladko, Aero-torpedos Turn Back (Vladko 1934), is much more ideologized. It refers to the war of drones between the capitalist countries and the USSR. According to the plot of the novel, \u201cinterested states,\u201d the Great Saksia, Swabia, and Osteria, make a number of claims to the USSR. The conflict in a few days became the basis for the closure of communist newspapers in \u201cinterested states\u201d; the press published calls for war with the USSR. The concept of capitalists is that the blow to Moscow should be made by radio-controlled drones\u2014aero-torpedos. But the tactics of the lightning attack did not work, as the Soviet Union also prepared for war and had its high-tech developments. Meanwhile, a Yellow Empire\u2014Japan or China\u2014attacks from the East. Capitalists decide to use bacteriological weapons and infect the Soviet communists with the flu virus. The flu epidemic is striking Moscow, Smolensk, and other regions of Russia. But, in the end, capitalist engineers are aware of the injustice of this war and surrender to the Soviet Army. In the capitalist countries, uprisings begin, and they become communist. At the end, everyone is happy to celebrate the victory of Russian weapons and communist ideology over the insidious world of capitalism.</p> <p>This book is impressive as it places the author\u2019s childlike naiv\u00e9t\u00e9 alongside the literal prediction of events that would soon happen. It is also worth mentioning Vladko\u2019s novel Iron Rebellion\u2014in the first version The Robotari Are Going. This first Ukrainian novel about robots was published in 1929 (Valdko [1929] 2017), just nine years after R.U.R. by Karel \u010capek (\u010capek [1928] 2020). Of course, this book is an undisguised call for the overthrow of the state system in countries outside the USSR and the establishment of a communist dictatorship in them, with the governing center in Moscow. It was planned to do this with the help of advanced technologies.</p> <p>The events of the novel take place in some capitalist country with a hint of the USA. Jonathan Houston is the owner of the machine-building factories that have stopped working\u2014the workers have announced a multi-day strike and are demanding higher wages. There is a rumor that Houston\u2019s company intends to replace live workers with wirelessly powered cybernetic robots. Houston assures that the robots only obey him and do not demand a salary or rest, so soon all workers will be replaced and this will mean the victory of capitalism over socialism.</p> <p>Meanwhile, Houston\u2019s stock is skyrocketing, and robots are cheaper to maintain than live workers. The leader of the ultra-right militants, Thomas Beers, sends the strikebreakers to the committee of strikers and demands that the strike be stopped in the morning. The committee dissolves itself, but does not give up the struggle. A rally is being held on the square near the plant, against which armored personnel carriers and soldiers who start shooting are brought out. Under the command of the leader of the strikers, Bob Leisley, they manage to de-energize the city and seize weapons with which to fight back. But the city is surrounded by an even bigger army. Houston offers Beers any amount of money if only his factories are saved. He manages to turn on the power and leads the robots into battle. But in a few minutes, the inventor of the robots, Engineer Jefferson, sends a signal that intercepts control. The strikebreakers turn on Houston with Beers and stomp them down. The communist revolution breaks out in the city.</p> <p>The Soviet authorities liked Volodymyr Vladko so much that he was even appointed head of the Main Repertoire Committee of the Ukrainian SSR (the main Ukrainian censor). However, he did not last long in this position. Once he wrote a critical article for the newspaper Soviet Art, where he praised the operetta Love of an Actress, which was based on Maupassant\u2019s story Boule de Suif, staged in Lviv. But other censors did not like the performance; they decided that it did not call for a communist revolution but only distracted the audience from it. The play was removed from the repertoire, and then a devastating article called \u201cA Serious Lesson\u201d appeared in the newspaper Lviv Truth. They wrote that the theater did not use \u201cthe great opportunity to turn to the Soviet theme, to show the wonderful today\u2019s revived Lviv region, the patriotic deeds of Lviv residents \u2013 Stakhanovites of factories and fields.\u201d Instead, \u201cvulgar, vapid vaudeville\u201d was created. Volodymyr Vladko was fired from his job after this story (Lvovska Pravda 1953).</p> <p>The tragic fate of the writer Dmytro Buzko is very telling: he was a staunch Stalinist, but he died because he publicly expressed doubts about Stalin\u2019s infallibility. He was immediately fired, arrested, and shot. Buzko wrote the fantastic novel Crystal Paradise (1935) two years before his murder by the Stalinists (Buzko [1935] 1959). According to the plot of the novel, a brilliant scientist-chemist from fascist Germany, Fritz Gruber, invents a recipe for super-strong glass, which can be used in many industries and the national economy. Due to the non-recognition of the genius in his homeland and the intrigues of the powerful bourgeoisie, the genius has to emigrate to the Soviet Union. Thanks to his invention, a utopian state is being formed in the USSR. From an artistic point of view, the novel is typical of the Soviet \u201cproduction\u201d fiction of the 1920s and 1930s. The characters are revealed superficially, represented by peculiar social labels. One of them is a \u201cbig bourgeois,\u201d another is a \u201clittle bourgeois,\u201d and the third is a \u201cromantic scientist.\u201d Nothing is known about the inner world of the heroes. The plot is described schematically. The actions and dialogues of the heroes are often contrived and implausible. There is a lot of Stalinist propaganda in the novel. It is characteristic that tanks and fighter planes were the first to be manufactured from miracle glass on an industrial scale.</p> <p>But not all Ukrainian writers of the 1930s gave their talent to fight for the victory of Russian communism. Unfortunately, the fate of those who avoided it was sad. Ukrainian writer Geo Shkurupii became the first Ukrainian writer who specialized in fantastic works within the framework of futurism. He did not write a single novel that could be called SF. There are only some fantastic episodes in his book Doors in a Day (Shkurupii 1931). In general, this novel is written in a bright, expressionist manner; stylistically, it is very diverse and intricate. It could rightly be called the Ukrainian Ulysses were it not for its very modest volume\u2014the book has a little more than 200 pages.</p> <p>Although Shkurupii was a communist, he was not as devoted a communist as, for example, Vladko. There was a lot of truth about the real world in his works, which the communist supervisors could not forgive him. That is why the writer was arrested on December 3, 1934 on charges of belonging to the \u201cKyiv terrorist organization UUN\u201d (Union of Ukrainian Nationalists). In 1937, he was executed, and his family was deprived of housing and evicted from Kyiv, as a family of \u201cenemies of the people.\u201d After twenty years, Shkurupii was rehabilitated and acquitted due to the absence of a crime. Of course, there was no question of any compensation from the state.</p> <p>Those who study Ukrainian literature of the Soviet period of the 1920s\u20131990s may wonder why it looks the way it does, why the writers were so focused on political propaganda and so persistently promoted the idea of a communist revolution and the expansion of Moscow\u2019s control over Europe.</p>"},{"location":"insiders/sf-one/#the-1940s-and-1950s-short-sighted-fiction","title":"The 1940s and 1950s: Short-Sighted Fiction","text":"Why was fiction short-sighted? <p>Throughout the 1930s, a methodical elimination of nationally conscious intellectuals took place in Ukraine; after its completion, a command came from Moscow to begin the fight against so-called Ukrainian nationalism. In these times, any manifestation of Ukrainian consciousness had become dangerous. Literature ultimately turned into service of party communist propaganda, and even fiction had to convincingly prove how exactly the Soviet people would soon implement the wild fantasies that were announced at each successive communist party congress. This genre was later called \u201cshort-sighted fiction.\u201d</p> <p>A vivid example of this genre is Mykola Trublaini\u2019s novel The Deep Path (written in 1941 but published seven years later, Trublaini [1948] 2020). There are no amazing and extraordinary events in the book; all its fiction is purely utilitarian. Soviet citizens are building a deep tunnel between Moscow and the Far East for high-speed train traffic, which was of exceptional strategic importance in case of war. However, it is worth noting the peculiarity of Trublaini\u2019s authorial manner, which allowed him to remain in the history of Ukrainian literature: his romantic heroes fall in love, dream, drink champagne, and are sure that a strong desire will allow them to defeat nature. Children liked Trublaini\u2019s works; there is even a prize named after him in Ukraine.</p> <p>Lyrical poet, polyglot, and soldier of the Ukrainian Galician Army (this is the armed force of the Western Ukrainian People\u2019s Republic, the state that existed in 1918\u201320), Myroslav Kapii became famous for translating six novels by Jules Verne into Ukrainian. Although Kapii was a radical anti-communist, he hated the USSR, but he can also be included in the stream of \u201cshort-sighted fiction\u201d because the author\u2019s main task was to predict in detail the technical and social innovations that would appear in the near future. Kapii\u2019s novel The Land of Blue Orchids (1932) envisions Ukraine in the twenty-first century in great detail. Interestingly, most of the author\u2019s predictions came true. The territory of Ukraine, as Kapii saw it in 1932, coincides with the territory of modern Ukraine: the coat of arms is the trident of Prince Volodymyr, the currency is the hryvnia, the system is democratic presidential-parliamentary, and the name of the parliament is Verkhovna Rada. In addition, Kapii used the word \u201ctelevision\u201d in the novel and predicted Skype communication and the existence of an automobile factory in the city of Kremenchuk. According to the plot, the first manned ship of mankind, the Queen of Virginia, goes to Mars, but disappears. A year later, an employee of the Ukrainian observatory, Ihor Kharitonenko, during his observations, discovers an unknown body in space approaching the Earth. It turns out that it is the Queen of Virginia. The ship lands near Kyiv in Boryspil, where the international airport is now located. But it was not Americans who arrived on the ship; rather, they were Martians genetically related to Ukrainians.</p> <p>In Vasyl Berezhny\u2019s novel To the Starry Worlds (1956), the first Soviet space expedition is sent to study the Moon. The purpose is to find minerals that can be used for the needs of mankind. A rocket with American astronauts lands on the Moon secretly from the Soviet cosmonauts. The novel, as one might expect, is full of Soviet propaganda. Before the flight, the head of the Government Committee for the Organization of the Earth-Moon Flight says in his speech: \u201cWe want to make the Moon an outpost of advanced science, not a military base, as the imperialist tycoons are planning!\u201d (Berezhny 1956, 34). The whole exciting trip to the Moon turned out to be just a convenient backdrop for casually feeding the reader communist propaganda.</p> <p>The book contains many disputes between American and Soviet astronauts, such as:</p> <p>Vasyl Berezhny To the Starry Worlds (1956)</p> <p>American astronaut: \u201cThe essence of life is not to create material values. The point is to use these material values! Don\u2019t deny it: I know what you\u2019re going to say. \u2018Exploitation of man by man! Extortion\u2019 and other similar loud words. But if you seriously thought about the history of mankind, you would see that all of it is a struggle for the redistribution of material goods. Take all the rebellions, revolutions and wars since the Roman Empire. Didn\u2019t the slaves rebel to seize wealth? And the French Revolution, did it have other ideals? And what does your communist bible say?\u2014\u2018The proletariat has nothing to lose, but it can acquire everything.\u2019 Acquire!\u201d</p> <p>Soviet cosmonaut: \u201cYou, as I see it, are a theorist! It\u2019s just a pity that your \u2018philosophy\u2019 is wolfish. Homo homini lupus est is your credo. And how can you understand Marxism and the ideals of the socialist revolution, which does not replace one exploiter with another, but destroys all exploitation!\u201d</p> <p>American astronaut: \u201cAh, what do you communists say, it is better to be rich than poor! Patricians, plebeians, and slaves all died, but the patricians ate from silver and gold dishes and bathed in marble pools, while the plebeians and slaves bent under the heavy burden of life\u201d (Berezhny 1956, 46).</p> <p>The fate of the writer Mykola Dashkiev vividly testifies to why the works of old Ukrainian fiction writers seem so down-to-earth, such timid, \u201cshort-sighted fiction.\u201d To explain the conditions in which the writers of that time worked, one eloquent fact can be cited: the building \u201cSlovo\u201d (The Word), where the young writer Dashkiev was given a room in 1948, in those days in Kharkiv was called HPD (House of Pretrial Detention) because many of its residents in the Stalinist times disappeared behind bars and were executed. This led to unprecedented restrictions. While preparing his novel The Celebration of Life (1952) for publication, Dashkiev had to attach to the manuscript a certificate from a leading expert in the field of biology confirming that the scientific plot of the work was quite possible.</p> <p>The novel Dragon\u2019s Teeth (Dashkiev 1957) tells about the struggle of Soviet and Indian biological scientists with English spies for the right to possess the secrets of \u201cFood of the Gods\u201d and \u201cDragon\u2019s Teeth\u201d\u2014unique biological catalysts, with the help of which it would be possible to solve the primordial problem of hunger throughout the world or perform unique organ transplant operations.</p>"},{"location":"insiders/sf-one/#the-1960s-sixtiers-and-hippie-cosmist-oles-berdnyk","title":"The 1960s: Sixtiers and Hippie-Cosmist Oles Berdnyk","text":"In the 1960s, a political thaw began. <p>The USSR liberalized. This led to the emergence of the so-called sixtiers movement. These people\u2014public figures and artists\u2014did not see confrontation with Western countries and the victory of communism as soon as possible at any cost as their goal. The sixtiers were liberal communists. This, among other things, was manifested in the fact that they, for the first time, abandoned the idea of positivism in its Soviet sense, that is, the idea that scientific progress would help the USSR to quickly establish communism throughout the Earth. Instead, the sixtiers turned to religious mysticism and naive utopianism.</p> <p>Oles Berdnyk, one of the main Ukrainian sixtiers, a writer, was also called a \u201chippie-cosmist.\u201d He was a theoretician and founder of the Ukrainian Spiritual Republic (USR); he believed that a nation is not a random combination of relatives and families but a powerful collective spirit that has its own unique purpose in the evolution of the universe. He saw no division into believers and non-believers; for him, the presence of the spiritual unity of Ukrainians made it possible to eliminate political parties, and ideological and confessional contradictions. If Ukraine chose the path of harmonization, spiritualization of all spheres of life, and consolidation of the forces of culture, science, and spirituality, then other nations would follow, and the Brotherhood of the Spiritual Republics of the Earth would be formed. The USR held congresses that were essentially mystical happenings.</p> <p>Berdnyk served five years behind bars for saying at a theater meeting in 1949 that \u201cStalin may be a genius for some, but a fool for others.\u201d He was sentenced to ten years for alleged treason, but after five years he was pardoned after repentance, which was strange (in the 1930s, he would have been immediately shot for these words). As mentioned, a political thaw was approaching. Liberalization had reached the point where Berdnyk was accepted into the Union of Writers of Ukraine two years after his release from prison. It is worth knowing that the Union of Writers of Ukraine was a special organization where writers verified by communists and the politically loyal were engaged in propaganda in the form of literature. Throughout his life, Berdnyk wrote about twenty novels that were far from communist propaganda. He was also one of the founders of the human rights-focused Ukrainian Helsinki Group. For his activities in this group, Berdnyk was imprisoned again for five years in 1979. But the USSR had already begun to collapse, and Berdnyk repented again, saying that he was ordered to create the Ukrainian Helsinki Group by the US Central Intelligence Agency.</p> <p>Berdnyk\u2019s novel The Star Corsair was written in the 1960s (Berdnyk 1971) and became a real bestseller of those times. It was translated into twenty-six languages, although it caused many scandals. The main reason for this was the unheard-of mystical Ukrainian nationalism of the author, which caused misunderstanding among the surrounding Soviet people. For example, Berdnyk wrote about the fact that in 2082, before the flight, the cosmonauts climbed to the top of the highest mountain in Ukraine, Hoverla, where they saw decorations in the traditions of Ukrainian folklore. Berdnyk\u2019s nationalism was so amazing that it caused a shock reaction. After the publication of the novel, the author was expelled from the Writers\u2019 Union of Ukraine.</p> <p>According to the plot of the novel, a young scientist, Serhiy Gorenytsia, wants to invent a time machine. While thinking, he sees the image of a Cossack-Charakternik (a warrior of the ancient Ukrainian state who possessed magical abilities). The Charakternik possessed the Black Gramota\u2014a magical manuscript that allowed changing the flow of time. With the help of hypnosis, the scientist enters the consciousness of the Cossack-magician and learns that the Black Gramota was extracted from the grave of Alexander the Great and buried in Mount Divich. The scientist conducts excavations, extracts the Black Gramota, and, with its help, establishes contact with the Black Papyrus\u2014a mystical being who tells the scientist that the collapse of positivism, with which this article about SF began, has taken place, that is, no technological inventions and scientific discoveries will bring positive results. Instead, the Black Papyrus offers a mystical solution: knowing the world through love and mutual understanding. It\u2019s just a set of words that don\u2019t mean anything, but that\u2019s how mysticism works.</p> <p>The Black Papyrus shows the scientist a story about the journey of the Ukrainian spacecraft Lyubov to another star system. During the trip, all crew members die from radiation; only two children, who are being raised by a robot, survive. The children become adults and arrive on another planet, where they come into contact with high-tech intelligent flowers. After this, the travelers fly to another planet, where they find a civilization destroyed by positivism: technological advances have finally led to the degradation of civilization from excessive hedonism. On the whole planet, there is only one woman, Iswari, who has kept her common sense. She asks the boys to take her with them to Earth and falls in love with a robot on the way. The robot also loves the alien woman but cannot have sex with her. To overcome this obstacle, the robot creates a body for himself from the remains of the astronauts who died from radiation.</p> <p>After hearing the story of the Black Papyrus, the scientist is convinced that positivism is really a dead end. Berdnyk offers an alternative to scientific and technical progress in the second part of the novel. One of his characters, an inmate in a psychiatric hospital, Aeras, claims to have attained a level of cosmic consciousness that allows him to go outside his body, levitate, and pass through walls. Together with his accomplices, Aeras escapes to the Asteroid of Freedom, where he finds a colony of dissidents who oppose the society of positivism. The positivists want to destroy the colonists, but they go to another dimension that is inaccessible to logic and physics.</p> <p>At the end of the novel, the scientist learns that he is actually the leader of the Horikorin group of cosmocrats from the plane of Ara, and his main goal is to unite the people of Earth and the thinking beings of the noosphere.</p> <p>Through this story, the repression against the dissidents, whom the Soviet authorities sent to psychiatric hospitals in the 1960s, as well as the desire of these dissidents to get out of the power of the communist positivists from Moscow, can be seen quite clearly. Berdnyk\u2019s revolutionary mysticism was a kind of protest against Soviet totalitarianism and formed a certain pair with it: time has shown that they cannot exist without each other. As a hypothetical idea for the 1960s, it sounded interesting, but in practice, going beyond the limits of the body and reaching the level of cosmic consciousness turned out to be absolutely impossible, so the impressive body of Berdnyk\u2019s work remained in its time. From the standpoint of today, it looks like a vivid dissident happening, but nothing more. It never became an alternative to positivism.</p>"},{"location":"insiders/sf-one/#references","title":"References","text":"My Sources <ul> <li>Berdnyk, Oles. The Star Corsair. Kyiv: Radyanskiy pysmennyk, 1971.</li> <li>Berezhny, Vasyl. To the Starry Worlds. Kyiv: Molod, 1956.</li> <li>Biletsky, Oleksandr. \u201cAbout Prose in General and About Our Prose.\u201d Chervony Shlyakh 2 (1926): 121\u2013129.</li> <li>Blum and Rosen. Atom in Harness. Kyiv: Tempora, [1929] 2017.</li> <li>Buzko, Dmytro. Crystal Paradise. Kyiv: Molod, [1935] 1959.</li> <li>\u010capek, Karel. R.U.R. Kyiv: Komora, [1928] 2020.</li> <li>Dashkiev, Mykola. The Celebration of Life. Kyiv: Radyanskiy pysmennyk, 1952.</li> <li>Dashkiev, Mykola. The Dragon\u2019s Teeth. Kyiv: Molod, 1957.</li> <li>Franko, Ivan. \u201cLetters to O. M. Roshkevich [1878].\u201d In Collection of Works in 50 Volumes, vol. 48, pp. 108\u201319. Kyiv: Naukova dumka, 1986. Accessed September 19, 2023.</li> <li>Heppell, Muriel (trans). The Paterik of the Kievan Caves Monastery. Harvard Library of Early Ukrainian Literature. English Translations: Volume 1. Cambridge, MA: Harvard University Press, 1989. Accessed September 19, 2023.</li> <li>Kapii, Myroslav. The Land of Blue Orchids. Lviv: Novy Chas, 1932.</li> <li>Kasianyuk, Sandro. \u201cNew Utopia.\u201d Chevony Shlyakh 3 (1926): 133\u2013163.</li> <li>Kotlyarevsky, Ivan. Aeneid. Toronto: Basilian Press, 2004.</li> <li>Lem, Stanislaw. The Magellanic Cloud. Moscow: Detgiz, 1960.</li> <li>Lem, Stanislav. Bomba Megabitowa. Moscow: AST, 2005.</li> <li>Lvovska pravda. \u201cThe Face of the Theater: Notes on the Lviv Musical Comedy Theater.\u201d Lvovska pravda newspaper, December 29, 1953.</li> <li>Potocki, Jan. The Manuscript Found in Saragossa. Lviv: Piramida, [1815] 2015.</li> <li>Prokopovich, Feofan. \u201cVolodymyr [Vladimir].\u201d In Compositions, edited by I. P. Eremin, 147\u2013206. Moscow-Leningrad: Akademiia nauk SSSR, 1961. Accessed September 19, 2023.</li> <li>Shkurupii, Geo. Doors in a Day. Kyiv: Literatura i Mystetstvo, 1931.</li> <li>Smolich, Yuri. Beautiful Disasters. Kyiv: Radyanskiy pysmennyk, [1929\u201334] 1965.</li> <li>Smyrniw, Walter. Ukrainian Science Fiction: Historical and Thematic Perspectives. Vienna: Peter Lang AG, 2013.</li> <li>Trublaini, Mykola. The Deep Path. Kyiv: Condor, [1948] 2020.</li> <li>Vynnychenko, Volodymyr. Solar Machine. Kyiv: Dnipro, 1928.</li> <li>Vladko, Volodymyr. Aero-torpedos Turn Back. Kharkiv: Dytvydav, 1934.</li> <li>Vladko, Volodymyr. The Argonauts of the Universe. Kharkiv: Dytvydav, 1935.</li> <li>Vladko, Volodymyr. Iron Rebellion. Kyiv: Tempora, [1929] 2017.</li> </ul>"},{"location":"insiders/sf-two/","title":"Science Fiction in Ukraine (part II)","text":""},{"location":"insiders/sponsoring-tiers/","title":"Sponsoring tiers","text":"<p>We offer a range of sponsoring tiers tailored to the diverse needs of our community. Whether you're an individual user, or rooted in academia, or work in an organization using our software commercially, there's a sponsoring tier that suits your needs.</p>"},{"location":"insiders/sponsoring-tiers/#choosing-a-tier","title":"Choosing a tier","text":"<p>Choosing the right sponsoring tier depends on your needs and how you intend to use Material for MkDocs Insiders. Our tiers are categorized into non-commercial and commercial use:</p> <ul> <li>Non-commercial tiers: Intended for individuals, Open Source projects,     and academic use</li> <li>Commercial tiers: Designed for organizations and enterprises of any size</li> </ul> <p>Each monthly sponsoring tier offers a range of benefits tailored to your needs. Benefits include access to our private Material for MkDocs Insiders repository, priority handling of bug reports, and more, which vary by the number of projects<sup>1</sup> that you intend to build with it and collaborators required. Remember, you can always upgrade or downgrade your sponsorship level at any time.</p>"},{"location":"insiders/sponsoring-tiers/#monthly-sponsoring","title":"Monthly sponsoring","text":"<p>Monthly sponsoring tiers provide you with access to our private Material for MkDocs Insiders repository. Your financial contribution supports the ongoing development of both the Insiders and the community edition.</p>"},{"location":"insiders/sponsoring-tiers/#non-commercial-use","title":"Non-commercial use","text":"<p>Non-commercial use essentially means \"personal use\". This includes individuals using the Insiders edition for personal or purely non-commercial Open Source projects. We offer two different tiers for non-commercial use.</p>"},{"location":"insiders/sponsoring-tiers/#the-individual","title":"The Individual","text":"<p>You love Material for MkDocs and use it for your Open Source project or personal blog. You read about all the awesome features in Insiders, which are first exclusively released to sponsors, and don't want to miss out.</p> <p>Rewards:</p> <ul> <li> Access to Insiders</li> <li> Non-commercial use for 1-2 projects</li> </ul> <p>\u00a0 Sponsor with $15 a month </p>"},{"location":"insiders/sponsoring-tiers/#the-dedicated-individual","title":"The Dedicated Individual","text":"<p>You use Material for MkDocs for several of your Open Source projects or personal sites, and just love that you can build beautiful documentation without having to worry about the constantly breaking JavaScript ecosystem \u2013 this is now @squidfunk's job.</p> <p>Rewards:</p> <ul> <li> Access to Insiders</li> <li> Non-commercial use for 3+ projects</li> </ul> <p>\u00a0 Sponsor with $35 a month </p>"},{"location":"insiders/sponsoring-tiers/#commercial-use","title":"Commercial use","text":"<p>Commercial use refers to any use of our software for a business or for-profit purpose. This includes any use by a corporation or other organization, whether or not they generate revenue directly from the software. We offer different pricing tiers for commercial use, each tailored to the needs of different businesses. It's important to note that internal use of the software within your organization is also considered commercial use, as with all commercial software.</p>"},{"location":"insiders/sponsoring-tiers/#the-organization","title":"The Organization","text":"<p>Your organization uses Material for MkDocs for its documentation or internal knowledge base and wants to make sure that it is well-maintained and safe to use for the years to come. You agree that $125 a month (less than 1 hour of a skilled developer) is a clever investment into a solution, solving tons of problems you don't want to fight yourself.</p> <p>Rewards:</p> <ul> <li> Access to Insiders</li> <li> Commercial use for 1-9 projects</li> <li> Your bug reports are prioritized</li> <li> Backlink + placement of small logo</li> </ul> <p>\u00a0 Sponsor with $125 a month </p>"},{"location":"insiders/sponsoring-tiers/#the-global-organization","title":"The Global Organization","text":"<p>Your organization runs many internal and public-facing sites that are built with Material for MkDocs, helping you to share and manage knowledge efficiently. You've evaluated several commercial alternatives which will cost you 3-4x more, some of which with a smaller feature set. You agree that $250 a month (less than 2 hours of a skilled developer) is a very good deal for the value you're getting out of it.</p> <p>Rewards:</p> <ul> <li> Access to Insiders</li> <li> Commercial use for 10-49 projects</li> <li> Your bug reports are prioritized</li> <li> Backlink + placement of logo</li> </ul> <p>\u00a0 Sponsor with $250 a month </p>"},{"location":"insiders/sponsoring-tiers/#the-holistic-organization","title":"The Holistic Organization","text":"<p>Your organization's day-to-day operations critically depend on Material for MkDocs, and you need to make sure that bugs are fixed quickly to keep your customers happy. You see your work as part of a larger ecosystem, realizing that giving back is essential to keeping everything you fight for alive.</p> <p>Rewards:</p> <ul> <li> Access to Insiders</li> <li> Commercial use for 50+ projects</li> <li> Your bug reports are prioritized</li> <li> Backlink + placement of large logo</li> <li> Private email support</li> </ul> <p>\u00a0 Sponsor with $1,000 a month </p>"},{"location":"insiders/sponsoring-tiers/#one-time-sponsoring","title":"One-time sponsoring","text":"<p>For those who wish to contribute one-time without an ongoing subscription and without receiving access to the exclusive Insiders features, we offer the following one-time sponsoring tiers.</p>"},{"location":"insiders/sponsoring-tiers/#just-a-tip","title":"Just a Tip!","text":"<p>You asked a question or needed some help on a problem, and we've helped you quickly. You want no perks, just good karma and a warm feeling of giving something back.</p> <p>\u00a0 Sponsor $20 one-time </p>"},{"location":"insiders/sponsoring-tiers/#the-mentoring","title":"The Mentoring","text":"<p>A 1-hour video call with @squidfunk, the creator and core maintainer of the project. He is happy to share his experiences with you and help you with anything related to his work.</p> <p>Popular topics are:</p> <ul> <li>How to tailor Material for MkDocs to your needs</li> <li>How to start earning a living in Open Source</li> <li>How to make your Open Source project sustainable</li> </ul> <p>\u00a0 Sponsor $350 one-time </p>"},{"location":"insiders/sponsoring-tiers/#custom-amount","title":"Custom amount","text":"<p>You're invited to contribute custom sponsorship amounts via GitHub Sponsors, enabling you to support Material for MkDocs according to your preferences. Please be aware that individuals need to pledge a minimum of $15 a month to access Insiders, whereas organizations are encouraged to sponsor $125 a month or more, based on their requirements.</p> <p>Contributions exceeding these thresholds are highly appreciated. Please note that one-time donations, regardless of their size, won't be granted access to Insiders due to technical constraints.</p>"},{"location":"insiders/sponsoring-tiers/#switching-tiers","title":"Switching tiers","text":"<p>You can easily switch between different sponsorship tiers \u2014 upgrade or downgrade \u2014 at any time. Simply visit the @squidfunk's GitHub Sponsors profile and adjust your sponsorship tier selection. Once you've made the change, you'll immediately sponsor at the new tier.</p> <p>If you exceed the number of projects within your current sponsorship limit, we kindly request that you upgrade your sponsorship to a higher tier to retain access to Material for MkDocs Insiders. The change takes effect immediately, and the amount is prorated based on your billing cycle.</p> <ol> <li> <p>A project is defined as a folder with a <code>mkdocs.yml</code> configuration file that is built with Material for MkDocs Insiders. This is the only limitation to follow \u2013 the number of documentation pages or the size of your project is up to you.\u00a0\u21a9</p> </li> </ol>"},{"location":"insiders/upgrade/","title":"How to upgrade","text":"<p>When upgrading Insiders, you should always check the version of Material for MkDocs which makes up the first part of the version qualifier, e.g., Insiders <code>4.x.x</code> is currently based on <code>9.x.x</code>:</p> <pre><code>9.x.x-insiders-4.x.x\n</code></pre> <p>If the major version increased, it's a good idea to consult the upgrade guide and go through the steps to ensure your configuration is up to date and all necessary changes have been made. </p> <p>Depending on how you installed and what you want to upgrade to you need to run different commands:</p> pip upgrade to releasepip upgrade to latest developmentgit upgrade <p>If you installed Insiders via <code>pip</code> and you want to upgrade to a specific release, pick the tag from the list of tags and replace  the tag at the end of the URL of the command given below:</p> <pre><code>pip install --upgrade git+https://${GH_TOKEN}@github.com/squidfunk/mkdocs-material-insiders.git@9.4.2-insiders-4.42.0\n</code></pre> <p>If you installed Insiders via <code>pip</code> and want to upgrade to the latest development version, run:</p> <pre><code>pip install --upgrade --force-reinstall git+https://${GH_TOKEN}@github.com/squidfunk/mkdocs-material-insiders.git\n</code></pre> <p>The <code>--force-reinstall</code> option serves to make sure <code>pip</code> does, in fact, install the latest development version, instead of deciding that  nothing is to be done based on the version numbers. ```</p> <p>If you installed Insiders via <code>git</code>, you will first need to check out the version you want to install into your workspace. After this is done, you can run <code>pip</code> to install that version.</p> <p>First, make sure that your local clone is up-to-date with the upstream repository by running <code>git pull</code>.</p> <p>You can look up the tags using <code>git tag --sort -refname</code> or you can consult the list of tags. Then, checkout the tag you want to use by replacing the one given in the command below (twice)and running  it from your workspace<sup>1</sup>:</p> <pre><code>cd mkdocs-material \ngit checkout --detach tags/9.4.2-insiders-4.42.0 \n</code></pre> <p>Now, change back to the parent directory in which your Git repository lives and run <code>pip</code>:</p> <pre><code>cd .. \npip install -e mkdocs-material\n</code></pre> <ol> <li> <p>The <code>--detach</code> argument serves to tell <code>git</code> that you are ok to have your workspace in the detached head state, which is perfectly fine to have here.\u00a0\u21a9</p> </li> </ol>"},{"location":"insiders/changelog/","title":"Changelog","text":""},{"location":"insiders/changelog/#material-for-mkdocs-insiders","title":"Material for MkDocs Insiders","text":""},{"location":"insiders/changelog/#4.53.15","title":"4.53.15 January 15, 2025","text":"<ul> <li>Fixed #7896: Scoped tags listings not rendering in subsections</li> </ul>"},{"location":"insiders/changelog/#4.53.14","title":"4.53.14 September 29, 2024","text":"<ul> <li>Fixed #7567: Empty headlines when using typeset plugin with anchorlinks</li> </ul>"},{"location":"insiders/changelog/#4.53.13","title":"4.53.13 September 14, 2024","text":"<ul> <li>Fixed #7520: Social plugin errors for generated files (MkDocs 1.6+)</li> </ul>"},{"location":"insiders/changelog/#4.53.12","title":"4.53.12 August 2, 2024","text":"<ul> <li>Fixed #7410: Instant previews jump on content tabs with anchor links</li> <li>Fixed #7408: Instant previews jump on content tabs</li> </ul>"},{"location":"insiders/changelog/#4.53.11","title":"4.53.11 May 27, 2024","text":"<ul> <li>Fixed projects plugin crashing when serving before building subprojects</li> </ul>"},{"location":"insiders/changelog/#4.53.10","title":"4.53.10 May 20, 2024","text":"<ul> <li>Fixed projects plugin crashing in serve mode when disabled</li> <li>Fixed projects plugin crashing when building nested projects</li> </ul>"},{"location":"insiders/changelog/#4.53.9","title":"4.53.9 May 20, 2024","text":"<ul> <li>Fixed #7191: Tags listings not rendering when <code>toc_depth</code> is changed</li> </ul>"},{"location":"insiders/changelog/#4.53.8","title":"4.53.8 April 26, 2024","text":"<ul> <li>Fixed #7052: Preview extension automatically including all pages</li> <li>Fixed #7051: Instant previews mounting on footnote references</li> <li>Fixed #5165: Improved tooltips not mounting in sidebar for typeset plugin</li> </ul>"},{"location":"insiders/changelog/#4.53.7","title":"4.53.7 April 25, 2024","text":"<ul> <li>Fixed #7060: Incorrect resolution of translation when using static-i18n</li> </ul>"},{"location":"insiders/changelog/#4.53.6","title":"4.53.6 April 5, 2024","text":"<ul> <li>Ensure working directory is set for projects when using projects plugin</li> <li>Fixed #6970: Incorrect relative paths in git submodules with projects plugin</li> </ul>"},{"location":"insiders/changelog/#4.53.5","title":"4.53.5 April 2, 2024","text":"<ul> <li>Fixed social plugin crashing when no colors are specified in palettes</li> </ul>"},{"location":"insiders/changelog/#4.53.4","title":"4.53.4 March 31, 2024","text":"<ul> <li>Fixed #6973: Escaping issue in tags extra files deprecation helper</li> </ul>"},{"location":"insiders/changelog/#4.53.3","title":"4.53.3 March 23, 2024","text":"<ul> <li>Added support for font variants in social plugin</li> <li>Improved resilience of font resolution in social plugin</li> <li>Fixed tag listing sometimes not being auto-populated</li> <li>Fixed tag listing scope not being correctly resolved</li> <li>Fixed #6941: Meta plugin adding duplicate entries</li> <li>Fixed #6928: Social plugin crashes for some fonts</li> </ul>"},{"location":"insiders/changelog/#4.53.2","title":"4.53.2 March 18, 2024","text":"<ul> <li>Fixed abort on first non-matching configuration in preview extension</li> <li>Fixed #6914: Meta files take precedence over front matter</li> </ul>"},{"location":"insiders/changelog/#4.53.1","title":"4.53.1 March 6, 2024","text":"<ul> <li>Fixed #6877: Projects plugin computes incorrect path to assets</li> <li>Fixed #6869: Blog plugin should emit warning on invalid related link</li> </ul>"},{"location":"insiders/changelog/#4.53.0","title":"4.53.0 February 24, 2024","text":"<ul> <li>Added support for automatic instant previews</li> <li>Added support for pinned blog posts</li> </ul>"},{"location":"insiders/changelog/#4.52.3","title":"4.52.3 February 21, 2024","text":"<ul> <li>Fixed resolution of URLs in instant previews</li> <li>Fixed instant previews not mounting for same-page links</li> </ul>"},{"location":"insiders/changelog/#4.52.2","title":"4.52.2 February 7, 2024","text":"<ul> <li>Fixed #6735: Instant previews misplaced when below tabs</li> </ul>"},{"location":"insiders/changelog/#4.52.1","title":"4.52.1 January 30, 2024","text":"<ul> <li>Fixed #6705: Navigation path not being hidden when specified</li> <li>Fixed #6703: New tags plugin crashes on Windows (2<sup>nd</sup> attempt)</li> </ul>"},{"location":"insiders/changelog/#4.52.0","title":"4.52.0 January 28, 2024","text":"<ul> <li>Added support for instant previews</li> <li>Fixed footnote tooltips positioning edge cases</li> <li>Fixed #6703: New tags plugin crashes on Windows</li> </ul>"},{"location":"insiders/changelog/#4.51.0","title":"4.51.0 January 24, 2024","text":"<ul> <li>Added support for footnote tooltips</li> </ul>"},{"location":"insiders/changelog/#4.50.0","title":"4.50.0 January 19, 2024","text":"<ul> <li>Added configurable logging capabilities to privacy plugin</li> </ul>"},{"location":"insiders/changelog/#4.49.2","title":"4.49.2 January 9, 2024","text":"<ul> <li>Fixed missing attribute lists extension for tags plugin</li> <li>Fixed #6627: New tags plugin crashes on Python 3.8</li> </ul>"},{"location":"insiders/changelog/#4.49.1","title":"4.49.1 January 7, 2024","text":"<ul> <li>Improved interop of new tags plugin with other plugins</li> <li>Fixed #6594: Tags plugin doesn't work with mkdocs-macros plugin</li> <li>Fixed #6569: Social plugin crashes if in different file system location</li> </ul>"},{"location":"insiders/changelog/#4.49.0","title":"4.49.0 December 29, 2023","text":"<ul> <li>Added support for exporting tags and mappings</li> <li>Added support for disabling tags and/or listings or both</li> <li>Fixed tag links from pages to listings on homepage</li> </ul>"},{"location":"insiders/changelog/#4.48.0","title":"4.48.0 December 23, 2023","text":"<ul> <li>Rewrite of tags plugin, now much more powerful</li> <li>Added support for nested tags (tag hierarchies, e.g. foo/bar)</li> <li>Added support for shadow tags (by list, prefix or suffix)</li> <li>Added support for custom tag layouts and templates</li> <li>Added support for hiding tags in table of contents</li> <li>Added support for configurable inline tag listings</li> <li>Added support for automatically linking to closest tag listing</li> <li>Added support for scoped listings (limit to subsection of site)</li> <li>Added support for multiple instances of tags plugin</li> <li>Added support for changing front matter property and template variable</li> <li>Added support for tag slugification format strings</li> <li>Fixed #6510: Projects plugin out of memory on Linux (4.47.1 regression)</li> <li>Fixed projects plugin not notifying plugins about serve mode</li> <li>Fixed projects plugin skipping projects on prefix match</li> <li>Deprecated tags_file and tags_extra_files settings</li> <li>Modernized tags plugin code base</li> </ul>"},{"location":"insiders/changelog/#4.47.1","title":"4.47.1 December 11, 2023","text":"<ul> <li>Improved editing experience for projects plugin</li> <li>Improved resilience of optimize and social plugin</li> <li>Fixed race condition when writing manifest in optimize and social plugin</li> <li>Fixed #6475: Logo not taking precedence over icon in social card</li> <li>Fixed #6399: Projects plugin doesn't pick up added/removed projects</li> <li>Fixed #6306: Projects plugin cache not correctly updated</li> </ul>"},{"location":"insiders/changelog/#4.47.0","title":"4.47.0 December 8, 2023","text":"<ul> <li>Added support for staying on page when switching languages</li> <li>Added configurable logging capabilities to projects plugin</li> <li>Removed temporary warning on blog plugin authors file format change</li> <li>Fixed projects plugin logging messages twice on Linux systems</li> <li>Fixed projects plugin trying to hoist theme assets of divergent themes</li> <li>Fixed compatibility of optimize plugin and projects plugin</li> <li>Fixed compatibility of social plugin and projects plugin</li> <li>Fixed #6448: Code line selection broken for code blocks with custom ids</li> <li>Fixed #6437: Projects plugin crashing for certain site URL configurations</li> <li>Fixed #6414: Projects plugin doesn't prefix messages coming from projects</li> </ul>"},{"location":"insiders/changelog/#4.46.0","title":"4.46.0 November 26, 2023","text":"<ul> <li>Added support for author profiles in blog plugin</li> <li>Fixed custom index pages yielding two navigation items (4.45.0 regression)</li> </ul>"},{"location":"insiders/changelog/#4.45.0","title":"4.45.0 November 24, 2023","text":"<ul> <li>Added support for sorting blog categories by post count or custom function</li> <li>Improved tags plugin to generate Unicode-aware slugs by default</li> <li>Fixed non-deterministic order of multiple authors in blog plugin</li> </ul>"},{"location":"insiders/changelog/#4.44.0","title":"4.44.0 November 23, 2023","text":"<ul> <li>Added pagination settings for archive pages in blog plugin</li> <li>Added pagination settings for category pages in blog plugin</li> </ul>"},{"location":"insiders/changelog/#4.43.1","title":"4.43.1 November 19, 2023","text":"<ul> <li>Added third-party theme support in projects plugin, improving editing</li> <li>Fixed #6360: Projects plugin crashes when theme is not Material for MkDocs</li> <li>Fixed #6306: Projects plugin not reloading nested project configuration</li> </ul>"},{"location":"insiders/changelog/#4.43.0","title":"4.43.0 November 5, 2023","text":"<ul> <li>Added support for GitLab committers (document contributors)</li> <li>Fixed #6264: Fixed compatibility with Python &lt; 3.10</li> <li>Fixed #6254: Meta plugin not applying meta files to blog posts</li> </ul>"},{"location":"insiders/changelog/#4.42.3","title":"4.42.3 October 27, 2023","text":"<ul> <li>Fixed #6251: Cards in grids cut off on very small screens</li> <li>Fixed #6241: Using social plugin + static-i18n plugin errors</li> </ul>"},{"location":"insiders/changelog/#4.42.2","title":"4.42.2 October 14, 2023","text":"<ul> <li>Fixed #6186: Privacy plugin ignores hash fragments on images</li> <li>Fixed #6180: Projects plugin crashing when adding or removing files</li> </ul>"},{"location":"insiders/changelog/#4.42.1","title":"4.42.1 October 5, 2023","text":"<ul> <li>Fixed spacing of related links in blog posts on small screens</li> </ul>"},{"location":"insiders/changelog/#4.42.0","title":"4.42.0 September 19, 2023","text":"<ul> <li>Added support for using git submodules in projects plugin</li> <li>Added support for transforming project configurations</li> <li>Improved resilience of optimize and blog plugin</li> <li>Fixed optimize plugin crashing on <code>.jpeg</code> extension</li> <li>Fixed project URLs not using site URLs in projects plugin</li> </ul>"},{"location":"insiders/changelog/#4.41.0","title":"4.41.0 September 11, 2023","text":"<ul> <li>Improved multi-instance support for optimize plugin</li> <li>Added inclusion and exclusion patterns for optimize plugin</li> <li>Added transparent keyword for color handling in social plugin</li> <li>Changed default quality of PNGs to 3 in optimize plugin</li> <li>Fixed #5979: meta file not detected in root of docs directory</li> </ul>"},{"location":"insiders/changelog/#4.40.4","title":"4.40.4 September 4, 2023","text":"<ul> <li>Fixed privacy plugin choking on boolean HTML5 attributes</li> <li>Fixed wrapping of inline code blocks in typeset table of contents</li> <li>Fixed blog plugin error when running under dirty reload</li> </ul>"},{"location":"insiders/changelog/#4.40.3","title":"4.40.3 September 2, 2023","text":"<ul> <li>Fixed #5946: Docker image missing pngquant for optimize plugin</li> </ul>"},{"location":"insiders/changelog/#4.40.2","title":"4.40.2 August 31, 2023","text":"<ul> <li>Added configurable error handling capabilities for social plugin</li> <li>Fixed #5922: Blog plugin shows no posts when building a standalone blog</li> <li>Fixed #5914: Tags plugin tags_extra_files errors (4.39.3 regression)</li> <li>Fixed #5904: Blog plugin sometimes excludes files (4.40.1 regression)</li> </ul>"},{"location":"insiders/changelog/#4.40.1","title":"4.40.1 August 27, 2023","text":"<ul> <li>Fixed #5902: ResizeObserver polyfill not detected by privacy plugin</li> <li>Fixed empty category pages in blog plugin (4.40.0 regression)</li> </ul>"},{"location":"insiders/changelog/#4.40.0","title":"4.40.0 August 26, 2023","text":"<ul> <li>Added logo, title and description options to social plugin default layouts</li> <li>Fixed privacy plugin compatibility issue with Python &lt; 3.10</li> <li>Fixed #5896: Blog plugin errors when using custom index pages</li> </ul>"},{"location":"insiders/changelog/#4.39.3","title":"4.39.3 August 24, 2023","text":"<ul> <li>Fixed lxml dependency missing in Docker container (4.39.2 regression)</li> </ul>"},{"location":"insiders/changelog/#4.39.2","title":"4.39.2 August 23, 2023","text":"<ul> <li>Fixed color palette toggle being reversed (9.2.0 regression)</li> </ul>"},{"location":"insiders/changelog/#4.39.1","title":"4.39.1 August 21, 2023","text":"<ul> <li>Fixed git diff in tags plugin after merging back 9.2.0 changes</li> </ul>"},{"location":"insiders/changelog/#4.39.0","title":"4.39.0 August 3, 2023","text":"<ul> <li>Added support for hoisting theme media files when building projects</li> <li>Added support for sorting pages on tags index for tags plugin</li> <li>Added support for adding date of last update to blog posts</li> <li>Fixed #5797: Parse error in typeset plugin (4.38.1 regression)</li> </ul>"},{"location":"insiders/changelog/#4.38.1","title":"4.38.1 August 1, 2023","text":"<ul> <li>Improved nested serve mode for projects plugin</li> <li>Improved compat in privacy plugin with third-party plugins</li> <li>Fixed #5790: Typeset plugin ignores data-toc-label attribute</li> <li>Fixed #5778: Interplay of privacy plugin with git-revision-date-localized</li> <li>Fixed #5773: Info plugin erroring when community edition is in beta</li> </ul>"},{"location":"insiders/changelog/#4.38.0","title":"4.38.0 July 29, 2023","text":"<ul> <li>Added projects plugin for building nested projects</li> <li>Updated privacy plugin to new MkDocs API</li> </ul>"},{"location":"insiders/changelog/#4.37.1","title":"4.37.1 July 28, 2023","text":"<ul> <li>Updated MkDocs to 1.5.1</li> <li>Fixed deprecation warning in social plugin due to MkDocs upgrade</li> <li>Fixed #5772: Privacy plugin fails due to API change in MkDocs</li> </ul>"},{"location":"insiders/changelog/#4.37.0","title":"4.37.0 July 7, 2023","text":"<ul> <li>Added support for overriding social cards settings per page</li> <li>Added new social card <code>default/only/image</code> layout</li> <li>Improved resilience of optimize and social plugin</li> <li>Fixed rendering bugs for pruned navigation items</li> <li>Fixed jumping of content tabs anchor links when instant loading is enabled</li> <li>Fixed #5676: Optimize plugin doesn't check for <code>pngquant</code></li> </ul>"},{"location":"insiders/changelog/#4.36.1","title":"4.36.1 June 23, 2023","text":"<ul> <li>Fixed #5618: Date comparison breaking for drafts in blog plugin</li> </ul>"},{"location":"insiders/changelog/#4.36.0","title":"4.36.0 June 15, 2023","text":"<ul> <li>Added support for instant prefetching to speed up slow connections</li> <li>Improved stability of anchor link removal in built-in typeset plugin</li> <li>Improved performance of regular expressions in typeset plugin</li> <li>Removed unnecessary import test for <code>cairosvg</code> in optimize plugin</li> <li>Fixed #5590: Regular expression for anchor link removal too greedy</li> </ul>"},{"location":"insiders/changelog/#4.35.3","title":"4.35.3 June 1, 2023","text":"<ul> <li>Fixed #5579: Abbreviations in headlines filtered by typeset plugin</li> </ul>"},{"location":"insiders/changelog/#4.35.2","title":"4.35.2 May 29, 2023","text":"<ul> <li>Fixed #5555: Blog plugin crashes when computing readtime for emojis</li> </ul>"},{"location":"insiders/changelog/#4.35.1","title":"4.35.1 May 20, 2023","text":"<ul> <li>Fixed internal handling of errors in social plugin</li> </ul>"},{"location":"insiders/changelog/#4.35.0","title":"4.35.0 May 20, 2023","text":"<ul> <li>Improve editing experience and stability of social plugin</li> <li>Added support for custom layout syntax validation in social plugin</li> <li>Added support for layer origin for easier placement in social plugin</li> <li>Added support for in- and exclusion patterns in social plugin</li> <li>Catch and print syntax errors in custom layouts</li> </ul>"},{"location":"insiders/changelog/#4.34.1","title":"4.34.1 May 16, 2023","text":"<ul> <li>Disable social plugin debug mode by default on mkdocs build</li> <li>Added warning in social plugin debug mode when font style couldn't be found</li> <li>Set default concurrency of built-in multi-threaded plugins to CPUs - 1</li> <li>Fixed #5521: Social plugin triggers race condition when downloading fonts</li> <li>Fixed #5515: Social plugin crashes when concurrency is set to 1</li> </ul>"},{"location":"insiders/changelog/#4.34.0","title":"4.34.0 May 14, 2023","text":"<ul> <li>Added support for new overflow mode to auto-fit text in social plugin</li> <li>Reduced subtle rendering bugs in (code) annotations due to subpixel rounding</li> <li>Improved print styles for (code) annotation lists</li> <li>Improved performance of social plugin, now 3x as fast</li> <li>Improved interop of typeset plugin with MkDocstrings</li> <li>Fixed logo location for variants of default template in social plugin</li> <li>Fixed #5446: Built-in typeset plugin picks up headings in code blocks</li> </ul>"},{"location":"insiders/changelog/#4.33.2","title":"4.33.2 May 12, 2023","text":"<ul> <li>Fixed #5508: Social plugin crashes trying to copy cards on Docker/Windows</li> <li>Fixed #5507: Social plugin crashes on serve when layouts folder doesn't exist</li> <li>Fixed #5505: Social plugin trying to resolve logo in wrong location</li> <li>Fixed #5496: Annotations with nested lists incorrectly mounted</li> <li>Fixed #5493: Social plugin crashes on Python 3.8</li> </ul>"},{"location":"insiders/changelog/#4.33.1","title":"4.33.1 May 9, 2023","text":"<ul> <li>Added support for SVG background images in social plugin</li> </ul>"},{"location":"insiders/changelog/#4.33.0","title":"4.33.0 May 8, 2023","text":"<ul> <li>Added support for custom layouts for social plugin</li> <li>Added support for background images for social cards</li> </ul>"},{"location":"insiders/changelog/#4.32.6","title":"4.32.6 April 22, 2023","text":"<ul> <li>Fixed #5336: Interplay of blog plugin with git-revision-date-localized</li> </ul>"},{"location":"insiders/changelog/#4.32.5","title":"4.32.5 April 7, 2023","text":"<ul> <li>Fixed #5322: Navigation tabs hoist nested page icons</li> </ul>"},{"location":"insiders/changelog/#4.32.4","title":"4.32.4 March 24, 2023","text":"<ul> <li>Fixed #5241: Built-in typeset plugin jams navigation for anchors in headings</li> </ul>"},{"location":"insiders/changelog/#4.32.3","title":"4.32.3 March 9, 2023","text":"<ul> <li>Fixed Docker image release workflow (9.1.0 regression)</li> <li>Fixed #5159: Missing underline for abbreviations (9.1.0 regression)</li> </ul>"},{"location":"insiders/changelog/#4.32.2","title":"4.32.2 February 23, 2023","text":"<ul> <li>Fixed #5127: Privacy plugin not handling large number of occurrences</li> <li>Fixed #5126: Privacy plugin breaks when replacing specific emojis</li> </ul>"},{"location":"insiders/changelog/#4.32.1","title":"4.32.1 February 23, 2023","text":"<ul> <li>Fixed code block spans interfering with copying</li> <li>Fixed #5077: Privacy plugin breaks image <code>alt</code> text encoding</li> <li>Fixed #5079: Privacy plugin removing <code>rel=me</code> on external links</li> </ul>"},{"location":"insiders/changelog/#4.32.0","title":"4.32.0 February 19, 2023","text":"<ul> <li>Added support for custom selectors for code annotations</li> <li>Added support for code line range selection for better sharing</li> </ul>"},{"location":"insiders/changelog/#4.31.0","title":"4.31.0 February 18, 2023","text":"<ul> <li>Added support for table of contents on blog index and archive pages</li> <li>Fixed #4512: Allow custom search field boosts (experimental)</li> </ul>"},{"location":"insiders/changelog/#4.30.2","title":"4.30.2 February 13, 2023","text":"<ul> <li>Fixed privacy plugin excludes not working (4.30.0 regression)</li> </ul>"},{"location":"insiders/changelog/#4.30.1","title":"4.30.1 February 12, 2023","text":"<ul> <li>Fixed privacy plugin not handling static templates (e.g. <code>404.html</code>)</li> </ul>"},{"location":"insiders/changelog/#4.30.0","title":"4.30.0 February 6, 2023","text":"<ul> <li>Rewrite of privacy plugin for concurrency, now twice as fast</li> <li>Added support for explicit inclusion for privacy plugin</li> <li>Added optimization support for privacy plugin (+ optimize plugin)</li> </ul>"},{"location":"insiders/changelog/#4.29.0","title":"4.29.0 January 21, 2023","text":"<ul> <li>Added built-in optimize plugin for automatically compressing images</li> <li>Switched reporting in built-in privacy plugin to <code>info</code> level</li> </ul>"},{"location":"insiders/changelog/#4.28.1","title":"4.28.1 January 17, 2023","text":"<ul> <li>Fixed built-in info plugin erroring for Insiders on version check</li> <li>Fixed #4865: Navigation paths render bug when there's no top-level section</li> <li>Fixed #4875: Added support for hiding navigation paths</li> <li>Improved navigation path to not render for a single item</li> </ul>"},{"location":"insiders/changelog/#4.28.0","title":"4.28.0 January 14, 2023","text":"<ul> <li>Added support for navigation path (breadcrumbs)</li> </ul>"},{"location":"insiders/changelog/#4.27.1","title":"4.27.1 December 20, 2022","text":"<ul> <li>Fixed rendering of succeeding navigation items in typeset plugin</li> <li>Fixed #4795: Built-in typeset plugin changes MkDocs' title precedence</li> <li>Fixed #4724: Blog plugin not rendering integrate table of contents</li> </ul>"},{"location":"insiders/changelog/#4.27.0","title":"4.27.0 December 20, 2022","text":"<ul> <li>Added built-in typeset plugin to preserve formatting in sidebars</li> <li>Added URL and table of contents support for blog categories</li> </ul>"},{"location":"insiders/changelog/#4.26.6","title":"4.26.6 November 28, 2022","text":"<ul> <li>Fixed #4683: Tags plugin crashes when a tag is empty</li> </ul>"},{"location":"insiders/changelog/#4.26.5","title":"4.26.5 November 27, 2022","text":"<ul> <li>Fixed #4632: Post excerpt title link doesn't point to top of the page</li> </ul>"},{"location":"insiders/changelog/#4.26.4","title":"4.26.4 November 27, 2022","text":"<ul> <li>Fixed redundant file extension when using privacy plugin</li> </ul>"},{"location":"insiders/changelog/#4.26.3","title":"4.26.3 November 15, 2022","text":"<ul> <li>Fixed #4637: Attachments w/o titles in related links error in blog plugin</li> <li>Fixed #4631: Remote favicons not downloaded and inlined by privacy plugin</li> </ul>"},{"location":"insiders/changelog/#4.26.2","title":"4.26.2 November 3, 2022","text":"<ul> <li>Updated MkDocs to 1.4.2</li> <li>Added support for tag compare functions when sorting on index pages</li> <li>Fixed footnotes being rendered in post excerpts without separators</li> <li>Fixed error in blog plugin when <code>toc</code> extension is not enabled</li> <li>Fixed issues with invalid asset paths and linked post titles</li> <li>Fixed #4572: Privacy plugin fails when symlinks cannot be created</li> <li>Fixed #4545: Blog plugin doesn't automatically link headline to post</li> <li>Fixed #4542: Blog plugin doesn't allow for multiple instances</li> <li>Fixed #4532: Blog plugin doesn't allow for mixed use of date and datetime</li> </ul>"},{"location":"insiders/changelog/#4.26.1","title":"4.26.1 October 22, 2022","text":"<ul> <li>Improved reporting of configuration errors in tags plugin</li> <li>Fixed #4515: Privacy plugin fails when site URL is not defined</li> <li>Fixed #4514: Privacy plugin doesn't fetch Google fonts (4.26.0 regression)</li> </ul>"},{"location":"insiders/changelog/#4.26.0","title":"4.26.0 October 18, 2022","text":"<ul> <li>Refactored privacy plugin to prepare for new features</li> <li>Added support for <code>rel=noopener</code> links in privacy plugin</li> <li>Resolve encoding issues with blog and privacy plugin</li> </ul>"},{"location":"insiders/changelog/#4.25.5","title":"4.25.5 October 16, 2022","text":"<ul> <li>Updated MkDocs to 1.4.1</li> <li>Added namespace prefix to built-in plugins</li> <li>Updated <code>content</code> and <code>header</code> partial</li> </ul>"},{"location":"insiders/changelog/#4.25.4","title":"4.25.4 October 9, 2022","text":"<ul> <li>Fixed other path issues for standalone blogs (4.24.2 regression)</li> </ul>"},{"location":"insiders/changelog/#4.25.3","title":"4.25.3 October 9, 2022","text":"<ul> <li>Fixed #4457: Posts not collected for standalone blog (4.24.2 regression)</li> </ul>"},{"location":"insiders/changelog/#4.25.2","title":"4.25.2 October 4, 2022","text":"<ul> <li>Fixed #4452: Blog and tags plugin crash when specifying slugify function</li> </ul>"},{"location":"insiders/changelog/#4.25.1","title":"4.25.1 October 3, 2022","text":"<ul> <li>Updated <code>mkdocs-rss-plugin</code> in <code>Dockerfile</code> to fix MkDocs compat errors</li> </ul>"},{"location":"insiders/changelog/#4.25.0","title":"4.25.0 October 2, 2022","text":"<ul> <li>Added support for navigation subtitles</li> <li>Added support for defining an allow list for built-in tags plugin</li> <li>Added support for custom slugify functions for built-in tags plugin</li> <li>Improved stability of search plugin when using <code>--dirtyreload</code></li> </ul>"},{"location":"insiders/changelog/#4.24.2","title":"4.24.2 October 1, 2022","text":"<ul> <li>Updated MkDocs to 1.4</li> <li>Fixed compatibility issues with MkDocs 1.4</li> <li>Fixed incorrectly generated paths in privacy plugin</li> <li>Fixed blog index page not showing navigation when using meta plugin</li> </ul>"},{"location":"insiders/changelog/#4.24.1","title":"4.24.1 September 30, 2022","text":"<ul> <li>Fixed #4430: build error when enabling consent without repository URL</li> </ul>"},{"location":"insiders/changelog/#4.24.0","title":"4.24.0 September 27, 2022","text":"<ul> <li>Added support for custom content on index pages (blog)</li> <li>Added support for keeping content on paginated index pages (blog)</li> <li>Added support for limiting categories in post excerpts (blog)</li> <li>Added support for simple override of templates via front matter (blog)</li> <li>Added icon in navigation for pages with encrypted content</li> <li>Fixed #4396: Front matter of index pages not inherited by pagination (blog)</li> <li>Improved performance by building post excerpts once (blog)</li> </ul>"},{"location":"insiders/changelog/#4.23.6","title":"4.23.6 September 22, 2022","text":"<ul> <li>Fixed #4389: Blog posts in first week of year in wrong archive</li> <li>Fixed (= switched) footer previous and next links for blog posts</li> </ul>"},{"location":"insiders/changelog/#4.23.5","title":"4.23.5 September 18, 2022","text":"<ul> <li>Fixed #4367: Improved blog plugin date handling for MultiMarkdown syntax</li> <li>Fixed #4374: Fixed invalid URLs of related links to other blog posts</li> </ul>"},{"location":"insiders/changelog/#4.23.4","title":"4.23.4 September 14, 2022","text":"<ul> <li>Fixed #4365: Recursion error in blog plugin due to <code>deepcopy</code></li> <li>Fixed path errors for blog plugin on Windows</li> <li>Fixed publishing workflow in forked repositories</li> </ul>"},{"location":"insiders/changelog/#4.23.3","title":"4.23.3 September 13, 2022","text":"<ul> <li>Fixed previous and next page links for drafts of blog posts</li> </ul>"},{"location":"insiders/changelog/#4.23.2","title":"4.23.2 September 13, 2022","text":"<ul> <li>Fixed #4348: Blog plugin crashes on custom <code>nav</code> title</li> <li>Fixed blog plugin crashing when category contained only drafts</li> <li>Fixed rendering of content from blog index file</li> </ul>"},{"location":"insiders/changelog/#4.23.1","title":"4.23.1 September 12, 2022","text":"<ul> <li>Fixed #4345: Blog plugin errors with default settings</li> </ul>"},{"location":"insiders/changelog/#4.23.0","title":"4.23.0 September 12, 2022","text":"<ul> <li>Added blogging support via built-in blog plugin</li> </ul>"},{"location":"insiders/changelog/#4.22.1","title":"4.22.1 September 7, 2022","text":"<ul> <li>Fixed #4217: Tooltips in data tables render in wrong position</li> </ul>"},{"location":"insiders/changelog/#4.22.0","title":"4.22.0 August 21, 2022","text":"<ul> <li>Added support for navigation status</li> </ul>"},{"location":"insiders/changelog/#4.21.1","title":"4.21.1 August 13, 2022","text":"<ul> <li>Fixed #4176: Broken image when avatar is served by Gravatar</li> <li>Fixed #4212: Deferred search initialization for file:// locations</li> </ul>"},{"location":"insiders/changelog/#4.21.0","title":"4.21.0 July 17, 2022","text":"<ul> <li>Added meta plugin: set front matter for all pages in a folder</li> <li>Fixed #4114: Tags plugin fails if only <code>tags_extra_files</code> is set</li> </ul>"},{"location":"insiders/changelog/#4.20.1","title":"4.20.1 July 11, 2022","text":"<ul> <li>Fixed #4105: Tags plugin fails if <code>tags_file</code> is not set (4.20.0 regression)</li> </ul>"},{"location":"insiders/changelog/#4.20.0","title":"4.20.0 July 7, 2022","text":"<ul> <li>Added support for additional tags indexes</li> <li>Fixed #4100: Tag icons not shown in tags index</li> </ul>"},{"location":"insiders/changelog/#4.19.2","title":"4.19.2 July 4, 2022","text":"<ul> <li>Fixed #4051: Privacy plugin fails if symlinking isn't allowed on Windows</li> </ul>"},{"location":"insiders/changelog/#4.19.1","title":"4.19.1 June 25, 2022","text":"<ul> <li>Added <code>mkdocs-git-committers-plugin</code> to Dockerfile</li> <li>Added <code>mkdocs-git-revision-date-localized-plugin</code> to Dockerfile</li> </ul>"},{"location":"insiders/changelog/#4.19.0","title":"4.19.0 June 24, 2022","text":"<ul> <li>Added support for document contributors</li> <li>Updated French translations for cookie consent</li> </ul>"},{"location":"insiders/changelog/#4.18.2","title":"4.18.2 June 16, 2022","text":"<ul> <li>Fixed #4026: Fixed tooltips not mounted for nested navigation links</li> </ul>"},{"location":"insiders/changelog/#4.18.1","title":"4.18.1 June 14, 2022","text":"<ul> <li>Fixed #3990: Chinese search highlighting not working on non-boundaries</li> </ul>"},{"location":"insiders/changelog/#4.18.0","title":"4.18.0 June 11, 2022","text":"<ul> <li>Added support for automatic dark/light mode</li> <li>Fixed #4009: Privacy plugin uses invalid paths for file cache on Windows</li> </ul>"},{"location":"insiders/changelog/#4.17.2","title":"4.17.2 June 5, 2022","text":"<ul> <li>Added support for custom jieba dictionaries (Chinese search)</li> </ul>"},{"location":"insiders/changelog/#4.17.1","title":"4.17.1 June 5, 2022","text":"<ul> <li>Added support for cookie consent reject button</li> <li>Added support for cookie consent custom button ordering</li> <li>Fixed #3988: Content tab not focused after alternating anchor links</li> </ul>"},{"location":"insiders/changelog/#4.17.0","title":"4.17.0 June 4, 2022","text":"<ul> <li>Added support for content tabs anchor links (deep linking)</li> <li>Fixed #3975: Detect composition events in search interface (Chinese)</li> <li>Fixed #3980: Search plugin doesn't use title set via front matter</li> </ul>"},{"location":"insiders/changelog/#4.16.2","title":"4.16.2 May 29, 2022","text":"<ul> <li>Fixed #3961: Nested sections triggered build error for navigation tabs</li> </ul>"},{"location":"insiders/changelog/#4.16.1","title":"4.16.1 May 28, 2022","text":"<ul> <li>Switched feedback widget rating titles to tooltips</li> <li>Improved contrast of link colors for light/dark color schemes</li> <li>Fixed #3950: Sticky navigation tabs rendering broken (4.15.2 regression)</li> <li>Fixed #3958: Links invisible when using <code>white</code> primary color</li> </ul>"},{"location":"insiders/changelog/#4.16.0","title":"4.16.0 May 25, 2022","text":"<ul> <li>Added support for navigation pruning</li> <li>Fixed search results for non-segmented characters (4.15.2 regression)</li> </ul>"},{"location":"insiders/changelog/#4.15.2","title":"4.15.2 May 22, 2022","text":"<ul> <li>Removed workaround for <code>abbr</code> on touch devices (superseded by tooltips)</li> <li>Fixed #3915: Improved Chinese search query segmentation</li> <li>Fixed #3938: Fixed tooltips position for navigation titles with ellipsis</li> </ul>"},{"location":"insiders/changelog/#4.15.1","title":"4.15.1 May 14, 2022","text":"<ul> <li>Improved performance of element focus observables</li> <li>Fixed #3531: Added prev/next buttons to content tabs</li> <li>Fixed tooltip positioning when host element is hidden</li> </ul>"},{"location":"insiders/changelog/#4.15.0","title":"4.15.0 May 8, 2022","text":"<ul> <li>Added support for improved tooltips</li> <li>Fixed #3785: Show tooltip on hover for overflowing navigation link</li> </ul>"},{"location":"insiders/changelog/#4.14.0","title":"4.14.0 May 5, 2022","text":"<ul> <li>Added Chinese language support to built-in search plugin</li> <li>Fixed all-numeric page titles raising error in social plugin</li> </ul>"},{"location":"insiders/changelog/#4.13.2","title":"4.13.2 April 30, 2022","text":"<ul> <li>Improved caching of downloaded resources in privacy plugin</li> <li>Fixed #3851: External images not downloaded by privacy plugin</li> </ul>"},{"location":"insiders/changelog/#4.13.1","title":"4.13.1 April 25, 2022","text":"<ul> <li>Fixed #3839: Tags plugin breaks without icons (4.13.0 regression)</li> </ul>"},{"location":"insiders/changelog/#4.13.0","title":"4.13.0 April 24, 2022","text":"<ul> <li>Added support for tag icons</li> </ul>"},{"location":"insiders/changelog/#4.12.0","title":"4.12.0 March 27, 2022","text":"<ul> <li>Added support for card grids and grid layouts</li> <li>Fixed #3685: Annotations sometimes broken when using instant loading</li> <li>Fixed #3742: Automatically add Mermaid.js when building for offline usage</li> </ul>"},{"location":"insiders/changelog/#4.11.0","title":"4.11.0 March 6, 2022","text":"<ul> <li>Added support for excluding external assets from privacy plugin</li> </ul>"},{"location":"insiders/changelog/#4.10.1","title":"4.10.1 March 2, 2022","text":"<ul> <li>Added missing build dependencies to Dockerfile</li> <li>Fixed encoding issues in privacy plugin, now forcing UTF-8 encoding</li> <li>Fixed #3624: Scroll to active navigation item unreliable in Firefox</li> <li>Fixed #3642: Privacy plugin errors when font setting was omitted</li> </ul>"},{"location":"insiders/changelog/#4.10.0","title":"4.10.0 February 27, 2022","text":"<ul> <li>Added support for offline plugin (supersedes offline search support)</li> <li>Improved built-in privacy plugin to download nested JavaScript assets</li> <li>Refactored configuration of built-in privacy plugin</li> </ul>"},{"location":"insiders/changelog/#4.9.1","title":"4.9.1 February 21, 2022","text":"<ul> <li>Fixed #3610: missing <code>lxml</code> dependency for privacy plugin</li> <li>Fixed error when charset is missing in <code>content-type</code> header</li> </ul>"},{"location":"insiders/changelog/#4.9.0","title":"4.9.0 February 20, 2022","text":"<ul> <li>Added privacy plugin: automatic downloading of external assets</li> </ul>"},{"location":"insiders/changelog/#4.8.3","title":"4.8.3 February 13, 2022","text":"<ul> <li>Fixed #3560: Mermaid diagrams don't render for <code>file://</code> locations</li> </ul>"},{"location":"insiders/changelog/#4.8.2","title":"4.8.2 February 10, 2022","text":"<ul> <li>Fixed #3559: Mermaid diagrams don't render inside closed <code>details</code></li> </ul>"},{"location":"insiders/changelog/#4.8.1","title":"4.8.1 February 6, 2022","text":"<ul> <li>Fixed jump back to top on mobile when using anchor following</li> </ul>"},{"location":"insiders/changelog/#4.8.0","title":"4.8.0 February 6, 2022","text":"<ul> <li>Added support for anchor following table of contents (= auto scroll)</li> </ul>"},{"location":"insiders/changelog/#4.7.2","title":"4.7.2 February 2, 2022","text":"<ul> <li>Fixed #3526: Transparent sidebar title due to Safari bug</li> <li>Fixed #3528: Firefox sometimes clips text in flow chart diagrams</li> </ul>"},{"location":"insiders/changelog/#4.7.1","title":"4.7.1 January 30, 2022","text":"<ul> <li>Fixed #3506: Tags index not respecting title set via front matter</li> </ul>"},{"location":"insiders/changelog/#4.7.0","title":"4.7.0 January 25, 2022","text":"<ul> <li>Added native support for offline search</li> </ul>"},{"location":"insiders/changelog/#4.6.1","title":"4.6.1 January 16, 2022","text":"<ul> <li>Fixed #3459: Section index pages picking up wrong title</li> </ul>"},{"location":"insiders/changelog/#4.6.0","title":"4.6.0 January 11, 2022","text":"<ul> <li>Added support for annotations (outside of code blocks)</li> </ul>"},{"location":"insiders/changelog/#4.5.2","title":"4.5.2 January 8, 2022","text":"<ul> <li>Fixed #3440: Content tab indicator not moving when using linking</li> <li>Fixed #3445: Content tab switch flickers/jitters when using linking</li> </ul>"},{"location":"insiders/changelog/#4.5.1","title":"4.5.1 January 2, 2022","text":"<ul> <li>Added support for setting initial state of cookie consent</li> <li>Fixed #3396: Disappearing link in navigation due to Safari bug</li> </ul>"},{"location":"insiders/changelog/#4.5.0","title":"4.5.0 December 16, 2021","text":"<ul> <li>Added support for navigation icons</li> </ul>"},{"location":"insiders/changelog/#4.4.0","title":"4.4.0 December 10, 2021","text":"<ul> <li>Added support for code annotation anchor links (deep linking)</li> <li>Added new code annotation syntax modifier to strip comment</li> <li>Updated German translations for cookie consent</li> </ul>"},{"location":"insiders/changelog/#4.3.0","title":"4.3.0 December 5, 2021","text":"<ul> <li>Added support for custom fonts in social cards</li> <li>Fixed #3300: Announcement bar reappearing when using instant loading</li> </ul>"},{"location":"insiders/changelog/#4.2.0","title":"4.2.0 December 2, 2021","text":"<ul> <li>Added support for dismissible announcement bar</li> <li>Added support for named placeholders in feedback widget</li> </ul>"},{"location":"insiders/changelog/#4.1.0","title":"4.1.0 November 30, 2021","text":"<ul> <li>Added support for passing page title to feedback forms</li> </ul>"},{"location":"insiders/changelog/#4.0.0","title":"4.0.0 November 28, 2021","text":"<ul> <li>Removed deprecated content tabs legacy implementation</li> <li>Removed deprecated <code>seealso</code> admonition type</li> <li>Removed deprecated <code>site_keywords</code> setting (unsupported by MkDocs)</li> <li>Removed deprecated prebuilt search index support</li> <li>Removed deprecated web app manifest \u2013 use customization</li> <li>Removed <code>extracopyright</code> variable \u2013 use new <code>copyright</code> partial</li> <li>Removed Disqus integration \u2013 use customization</li> <li>Switched to <code>:is()</code> selectors for simple selector lists</li> <li>Switched autoprefixer from <code>last 4 years</code> to <code>last 2 years</code></li> <li>Improved CSS overall to match modern standards</li> <li>Improved CSS variable semantics for fonts</li> <li>Improved extensibility by restructuring partials</li> <li>Improved handling of <code>details</code> when printing</li> <li>Improved keyboard navigation for footnotes</li> <li>Fixed #3214: Search highlighting breaks site when empty</li> </ul>"},{"location":"insiders/changelog/#3.2.3","title":"3.2.3 November 20, 2021","text":"<ul> <li>Updated Swedish and French translations</li> <li>Removed support for <code>.mermaid-experimental</code> class (now <code>.mermaid</code>)</li> <li>Fixed #3202: Cookie consent not dismissable on <code>file://</code> locations</li> <li>Fixed #3216: Cookie consent not dismissed when invoked via anchor</li> <li>Fixed #3232: Mermaid.js sometimes runs twice (race condition)</li> </ul>"},{"location":"insiders/changelog/#3.2.2","title":"3.2.2 November 6, 2021","text":"<ul> <li>Fixed always last feedback rating being sent</li> <li>Fixed #3145: Code annotations eat whole comment lines</li> <li>Fixed #3170: Feedback widget doesn't send data to GA4</li> </ul>"},{"location":"insiders/changelog/#3.2.1","title":"3.2.1 November 4, 2021","text":"<ul> <li>Added support for custom Mermaid.js version via additional JavaScript</li> <li>Fixed some configuration edge cases for tags plugin (3.1.5 regression)</li> <li>Fixed feedback widget title not being centered in Firefox</li> <li>Fixed #3179: Safari doesn't send request for feedback widget</li> </ul>"},{"location":"insiders/changelog/#3.2.0","title":"3.2.0 October 31, 2021","text":"<ul> <li>Added support for feedback widget (Was this page helpful?)</li> </ul>"},{"location":"insiders/changelog/#3.1.5","title":"3.1.5 October 28, 2021","text":"<ul> <li>Fixed #3144: Rogue link when using tags with auto-populated navigation</li> <li>Fixed #3147: Code block line numbers appear in search results</li> <li>Fixed #3158: Social cards do not strip HTML tags from title</li> </ul>"},{"location":"insiders/changelog/#3.1.4","title":"3.1.4 October 17, 2021","text":"<ul> <li>Fixed #2974: Text cropped with other fonts than <code>Roboto</code> in social plugin</li> <li>Fixed #3099: Encoding problems with non-latin character in social plugin</li> <li>Fixed #3112: Japanese segmenter not executed as part of new tokenizer</li> <li>Fixed tags (front matter) appearing in search with disabled tags plugin</li> </ul>"},{"location":"insiders/changelog/#3.1.3","title":"3.1.3 October 12, 2021","text":"<ul> <li>Added warnings to search plugin for unsupported options and syntax</li> <li>Fixed #3503: Search sometimes returns entire page</li> <li>Fixed #3089: Single-line code annotations disappear when printing</li> </ul>"},{"location":"insiders/changelog/#3.1.2","title":"3.1.2 October 6, 2021","text":"<ul> <li>Fixed incorrect path separators for social cards on Windows</li> </ul>"},{"location":"insiders/changelog/#3.1.1","title":"3.1.1 September 26, 2021","text":"<ul> <li>Fixed ordering bug in search exclusion logic</li> </ul>"},{"location":"insiders/changelog/#3.1.0","title":"3.1.0 September 26, 2021","text":"<ul> <li>Added support for excluding pages, sections, and elements from search</li> <li>Fixed #2803: Code block annotations not visible when printing</li> </ul>"},{"location":"insiders/changelog/#3.0.1","title":"3.0.1 September 19, 2021","text":"<ul> <li>Added support for using literal <code>h1-6</code> tags for search plugin</li> <li>Fixed search plugin breaking on void elements without slashes</li> <li>Fixed search plugin filtering link contents from headlines</li> <li>Fixed search plugin handling of multiple <code>h1</code> headlines</li> <li>Fixed search plugin handling of missing <code>h1</code> headlines</li> </ul>"},{"location":"insiders/changelog/#3.0.0","title":"3.0.0 September 13, 2021","text":"<ul> <li>Rewrite of MkDocs' search plugin</li> <li>Added support for rich search previews</li> <li>Added support for tokenizer with lookahead</li> <li>Improved search indexing performance (twice as fast)</li> <li>Improved search highlighting</li> </ul>"},{"location":"insiders/changelog/#2.13.3","title":"2.13.3 September 1, 2021","text":"<ul> <li>Added support for disabling social card generation</li> </ul>"},{"location":"insiders/changelog/#2.13.2","title":"2.13.2 August 25, 2021","text":"<ul> <li>Fixed #2965: Social plugin error when primary color is not defined</li> </ul>"},{"location":"insiders/changelog/#2.13.1","title":"2.13.1 August 21, 2021","text":"<ul> <li>Fixed #2948: Social cards are not cached</li> <li>Fixed #2953: Mermaid.js diagrams can't be centered anymore</li> </ul>"},{"location":"insiders/changelog/#2.13.0","title":"2.13.0 August 7, 2021","text":"<ul> <li>Added support for custom colors in social cards</li> </ul>"},{"location":"insiders/changelog/#2.12.2","title":"2.12.2 August 4, 2021","text":"<ul> <li>Fixed #2891: Division by zero error in social plugin</li> </ul>"},{"location":"insiders/changelog/#2.12.1","title":"2.12.1 July 26, 2021","text":"<ul> <li>Fixed error in social plugin when <code>site_description</code> was not set</li> <li>Fixed error in social plugin for non-ASCII characters</li> </ul>"},{"location":"insiders/changelog/#2.12.0","title":"2.12.0 July 25, 2021","text":"<ul> <li>Added support for social cards</li> </ul>"},{"location":"insiders/changelog/#2.11.1","title":"2.11.1 July 20, 2021","text":"<ul> <li>Fixed order of tags index, now sorted alphabetically</li> </ul>"},{"location":"insiders/changelog/#2.11.0","title":"2.11.0 July 18, 2021","text":"<ul> <li>Improved Mermaid.js integration, now stable</li> <li>Added support for sequence diagrams</li> <li>Added support for entity relationship diagrams</li> <li>Added support for cookie consent configuration</li> <li>Added feature flag to always enable annotations</li> </ul>"},{"location":"insiders/changelog/#2.10.0","title":"2.10.0 July 10, 2021","text":"<ul> <li>Added support for cookie consent</li> <li>Fixed #2807: Back-to-top button not hidden when using sticky tabs</li> </ul>"},{"location":"insiders/changelog/#2.9.2","title":"2.9.2 May 30, 2021","text":"<ul> <li>Moved tags to partial for easier customization</li> <li>Added support for hiding tags on any page</li> </ul>"},{"location":"insiders/changelog/#2.9.1","title":"2.9.1 May 24, 2021","text":"<ul> <li>Added missing guard for linking of content tabs</li> </ul>"},{"location":"insiders/changelog/#2.9.0","title":"2.9.0 May 23, 2021","text":"<ul> <li>Added support for linking of content tabs</li> </ul>"},{"location":"insiders/changelog/#2.8.0","title":"2.8.0 May 12, 2021","text":"<ul> <li>Added support for boosting pages in search</li> </ul>"},{"location":"insiders/changelog/#2.7.2","title":"2.7.2 May 8, 2021","text":"<ul> <li>Fixed #2638: Warnings shown when using <code>tags</code> plugin without directory URLs</li> </ul>"},{"location":"insiders/changelog/#2.7.1","title":"2.7.1 May 3, 2021","text":"<ul> <li>Fixed <code>git-revision-date-localized</code> plugin integration (2.7.0 regression)</li> </ul>"},{"location":"insiders/changelog/#2.7.0","title":"2.7.0 May 1, 2021","text":"<ul> <li>Added support for tags (with search integration)</li> </ul>"},{"location":"insiders/changelog/#2.6.0","title":"2.6.0 April 11, 2021","text":"<ul> <li>Stay on page when switching versions</li> </ul>"},{"location":"insiders/changelog/#2.5.0","title":"2.5.0 March 28, 2021","text":"<ul> <li>Added support for version warning</li> </ul>"},{"location":"insiders/changelog/#2.4.0","title":"2.4.0 March 20, 2021","text":"<ul> <li>Added support for custom admonition icons</li> <li>Fixed #2444: Code block annotations with extra comments have wrong index</li> </ul>"},{"location":"insiders/changelog/#2.3.1","title":"2.3.1 March 14, 2021","text":"<ul> <li>Fixed anchor offset for permalinks when using sticky navigation tabs</li> </ul>"},{"location":"insiders/changelog/#2.3.0","title":"2.3.0 March 13, 2021","text":"<ul> <li>Added support for back-to-top button</li> </ul>"},{"location":"insiders/changelog/#2.2.1","title":"2.2.1 March 4, 2021","text":"<ul> <li>Fixed #2382: Repository stats failing when no release tag is present</li> </ul>"},{"location":"insiders/changelog/#2.2.0","title":"2.2.0 February 28, 2021","text":"<ul> <li>Added support for code block annotations</li> </ul>"},{"location":"insiders/changelog/#2.1.0","title":"2.1.0 February 26, 2021","text":"<ul> <li>Added support for anchor tracking</li> </ul>"},{"location":"insiders/changelog/#2.0.0","title":"2.0.0 February 24, 2021","text":"<ul> <li>Migrated Insiders to the new architecture</li> <li>Swapped color palette toggle configuration</li> </ul>"},{"location":"insiders/changelog/#1.17.0","title":"1.17.0 January 31, 2021","text":"<ul> <li>Added support for section index pages</li> </ul>"},{"location":"insiders/changelog/#1.16.1","title":"1.16.1 January 26, 2021","text":"<ul> <li>Fixed #2249: Instant loading + sticky tabs result in invalid links</li> <li>Fixed #2248: Search highlighting URL parameter always added</li> <li>Fixed #2235: Version selector doesn't select current version for aliases</li> </ul>"},{"location":"insiders/changelog/#1.16.0","title":"1.16.0 January 7, 2021","text":"<ul> <li>Added latest release to repository info (GitHub)</li> <li>Slight facelift of repository info (lighter fonts, spacing and icons)</li> </ul>"},{"location":"insiders/changelog/#1.15.0","title":"1.15.0 January 2, 2021","text":"<ul> <li>Added support for native Mermaid.js integration</li> </ul>"},{"location":"insiders/changelog/#1.14.0","title":"1.14.0 December 30, 2020","text":"<ul> <li>Added support for sharing searches</li> </ul>"},{"location":"insiders/changelog/#1.13.2","title":"1.13.2 December 22, 2020","text":"<ul> <li>Fixed version selector + sticky tabs navigation rendering issues</li> <li>Fixed version selector wrapping</li> </ul>"},{"location":"insiders/changelog/#1.13.1","title":"1.13.1 December 20, 2020","text":"<ul> <li>Removed horizontal scrollbars on language and version selector</li> <li>Fixed type conversion in JavaScript config</li> </ul>"},{"location":"insiders/changelog/#1.13.0","title":"1.13.0 December 13, 2020","text":"<ul> <li>Refactored navigation tabs to simplify grouping behavior</li> <li>Added support for sticky navigation tabs</li> <li>Added support for arbitrary links in navigation tabs</li> <li>Fixed #2098: Subsequent active subsection not highlighted correctly</li> </ul>"},{"location":"insiders/changelog/#1.12.1","title":"1.12.1 December 8, 2020","text":"<ul> <li>Fixed empty language selector being shown</li> </ul>"},{"location":"insiders/changelog/#1.12.0","title":"1.12.0 December 6, 2020","text":"<ul> <li>Added support for adding a language selector</li> </ul>"},{"location":"insiders/changelog/#1.11.2","title":"1.11.2 November 29, 2020","text":"<ul> <li>Fixed #2068: Search highlight interprets code blocks as JavaScript</li> </ul>"},{"location":"insiders/changelog/#1.11.1","title":"1.11.1 November 29, 2020","text":"<ul> <li>Refactored styling to be more stable and easier to adjust</li> <li>Fixed some styling regressions from latest features</li> </ul>"},{"location":"insiders/changelog/#1.11.0","title":"1.11.0 November 22, 2020","text":"<ul> <li>Added support for rendering admonitions as inline blocks</li> </ul>"},{"location":"insiders/changelog/#1.10.0","title":"1.10.0 November 15, 2020","text":"<ul> <li>Added support for integrating table of contents into navigation</li> </ul>"},{"location":"insiders/changelog/#1.9.0","title":"1.9.0 November 7, 2020","text":"<ul> <li>Added support for hiding navigation and table of contents on any page</li> <li>Removed autohiding table of contents when empty</li> </ul>"},{"location":"insiders/changelog/#1.8.0","title":"1.8.0 November 1, 2020","text":"<ul> <li>Added support for navigation sections</li> <li>Fixed appearance of inactive search suggestions</li> </ul>"},{"location":"insiders/changelog/#1.7.0","title":"1.7.0 October 25, 2020","text":"<ul> <li>Added support for deploying multiple versions</li> <li>Fixed alignment of sidebar when content area is too small</li> </ul>"},{"location":"insiders/changelog/#1.6.0","title":"1.6.0 October 11, 2020","text":"<ul> <li>Added support for search suggestions to save keystrokes</li> <li>Added support for removing Made with Material for MkDocs from footer</li> <li>Fixed #1915: search should go to first result by pressing Enter</li> </ul>"},{"location":"insiders/changelog/#1.5.1","title":"1.5.1 September 21, 2020","text":"<ul> <li>Fixed content area stretching to whole width for long code blocks</li> </ul>"},{"location":"insiders/changelog/#1.5.0","title":"1.5.0 September 19, 2020","text":"<ul> <li>Added support for autohiding table of contents when empty</li> </ul>"},{"location":"insiders/changelog/#1.4.1","title":"1.4.1 September 6, 2020","text":"<ul> <li>Improved typeahead and search result relevance and scoring</li> </ul>"},{"location":"insiders/changelog/#1.4.0","title":"1.4.0 August 30, 2020","text":"<ul> <li>Added support for autohiding header on scroll</li> </ul>"},{"location":"insiders/changelog/#1.3.0","title":"1.3.0 August 26, 2020","text":"<ul> <li>Added support for user-selectable color palettes</li> </ul>"},{"location":"insiders/changelog/#1.2.0","title":"1.2.0 August 11, 2020","text":"<ul> <li>Added feature to expand navigation by default</li> </ul>"},{"location":"insiders/changelog/#1.1.0","title":"1.1.0 August 3, 2020","text":"<ul> <li>Added highlighting of search results</li> </ul>"},{"location":"insiders/changelog/#1.0.0","title":"1.0.0 July 14, 2020","text":"<ul> <li>Added grouping of search results</li> <li>Added missing query terms to search result</li> <li>Improved search result relevance and scoring</li> </ul>"},{"location":"insiders/community-experts-program/","title":"Calling for Community Experts","text":"<p>Interested in joining the Material for MkDocs team as a Community Expert? We're on the lookout for individuals who are passionate about supporting our awesome community. In return for your valuable contributions, time, and insights, you'll gain free access to the Insiders edition.</p>"},{"location":"insiders/community-experts-program/#why-we-need-you","title":"Why we need you","text":"<p>As our project and community continue to grow, so do the questions and needs of our users on our discussion board. Our discussion board is a vital part of our project, serving as a hub for our community to connect and a valuable knowledge base to complement our documentation.</p> <p>We're eager to keeping it well-maintained, organized, easy to search and address all queries which is why we need extra hands to keep up with the demand.</p> <p>That's why we're building a team of Community Experts!</p>"},{"location":"insiders/community-experts-program/#your-role","title":"Your role","text":"<p>As a Community Expert, your role primarily involves active participation on our discussion board, where we'd expect you to be:</p> <ul> <li>Answering discussions to help users with their questions</li> <li>Providing guidance regarding implementations</li> <li>Sharing insights into customizations and workarounds</li> <li>Optimizing searchability by adjusting discussion titles with relevant keywords</li> </ul>"},{"location":"insiders/community-experts-program/#your-benefits","title":"Your benefits","text":"<p>Here is a list of the benefits we offer to our Community Experts:</p> <ul> <li> <p>Free access to Material for MkDocs Insiders \u2013 Exclusive Access to all of     our Material for MkDocs Insiders features for non-commercial use.<sup>1</sup></p> </li> <li> <p>Close communication with the team \u2013 Stay connected with us through various     channels, including calls and internal project management tools.</p> </li> <li> <p>GitHub profile boost \u2013 Enhance your GitHub profile's visibility and     credibility as your activity increases, earning you valuable badges that can     enhance your credibility.</p> </li> </ul>"},{"location":"insiders/community-experts-program/#your-knowledge-skills","title":"Your knowledge &amp; skills","text":"<p>To be a successful Community Expert, your skills should include the following:</p> <ul> <li> <p>Material and MkDocs allrounder \u2013 You have an understanding of Material     for MkDocs and the MkDocs ecosystem, including many of its extensions and     plugins.</p> </li> <li> <p>Great communicator \u2013 You enjoy helping others in a productive,     constructive and friendly manner and use inclusive and welcoming language.</p> </li> <li> <p>Independent worker \u2013 You are self-motivated, stay up-to-date with     project developments, regularly check the discussion board, and respond to     notifications in reasonable time.</p> </li> </ul>"},{"location":"insiders/community-experts-program/#your-time-commitment","title":"Your time commitment","text":"<p>We don't require a fixed number of hours each week; instead, we ask for a minimum of five answered discussions per month<sup>2</sup>, which amounts to slightly more than one per week. Your active interaction within the community is highly valued.</p> <p>To do this effectively, it's best to regularly check the discussion board to see where you can offer help. The time you invest may vary depending on the complexity of the topics and questions.</p> <p>Upon joining, you'll receive access to the Insiders' edition for as long as you continue to assist us. Access will be renewed every three months, allowing you the flexibility to continue your contributions or take a break as needed.</p>"},{"location":"insiders/community-experts-program/#ready-to-get-started","title":"Ready to get started?","text":"<p>Since we have a limited number of seats for these roles<sup>3</sup>, we would like to get to know you before you become one of our Community Experts. Here's how to get started:</p>"},{"location":"insiders/community-experts-program/#step-1-get-in-touch","title":"Step 1: Get in touch","text":"<p>Send us an email introducing yourself, sharing a bit about your background, and include a link to your GitHub profile. Additionally, provide links to three previous discussions you've answered on the discussion board, where you've assisted another community member.</p> <p>Please use the following email template to reach out to us at community@squidfunk.com:</p> <pre><code>Subject: Community Expert\n\nIntro: Tell us a bit about yourself.\n  - Name:\n  - Background:\n  - Profession:\n  - GitHub profile:\n\nAnswered discussions\n  - Link 1:\n  - Link 2:\n  - Link 3:\n</code></pre>"},{"location":"insiders/community-experts-program/#step-2-evaluation","title":"Step 2: Evaluation","text":"<p>After receiving and reviewing your application, we will get in touch with you to discuss everything you need to know to get started. If you get selected, we will set you up as a collaborator and provide you immediate access to the Insiders edition for three months.</p>"},{"location":"insiders/community-experts-program/#step-3-dive-in","title":"Step 3: Dive in","text":"<p>Let's get started! You can actively begin participating in five discussions per month. We trust you to take the lead, and we won't do strict monitoring. Simply ensure that you are consistently listed on the Most Helpful list, located on the discussion board's left side, under the categories.</p> <p>Ready to join us?</p> <p>Sounds good? Let's give it a try!</p> <ol> <li> <p>Access to Insiders is granted to your primary account, i.e., the account with which you're contributing to the project. It cannot be transferred to another account. Additionally, it cannot be used for commercial purposes.\u00a0\u21a9</p> </li> <li> <p>An answered discussion is a collaborative interaction where knowledge and expertise are shared, resulting in resolutions or clarifications that benefit the user and our entire community. In essence, it embodies the spirit of cooperation and support within our community, highlighting the power of collective wisdom and the willingness to assist and uplift one another.\u00a0\u21a9</p> </li> <li> <p>Please note that we're currently limiting the number of seats on the Community Experts program to three. We will update this page when we'll expand the team, which is when we'll be accepting new applications.\u00a0\u21a9</p> </li> </ol>"},{"location":"plugins/","title":"Built-in plugins","text":"<p>Material for MkDocs started out as a theme for MkDocs, but has since evolved into a full-fledged framework for building and maintaining documentation. The theme is still the core of the project, but it's now accompanied by a growing number of complementary built-in plugins.</p> <p>We strive to make those plugins as modular and generic as possible, so that they can be used in a wide variety of projects and use cases. By providing useful default settings, we also try to make them as easy to use as possible, so that you can get started quickly, tweaking their settings later on. When developing built-in plugins, we always adhere to the following design principles:</p> <ul> <li> <p>Modularity: Built-in plugins are designed to be modular, so that they can   be easily combined to implement sophisticated pipelines. For example, the   offline, optimize and privacy plugins can be used together to build   truly offline-capable documentation.</p> </li> <li> <p>Interoperability: Built-in plugins are designed to be as compatible as   possible, so they can be used in combination with other plugins, including   third-party plugins. We strive to make it simple to integrate with the vast   ecosystem that has evolved around MkDocs.</p> </li> <li> <p>Performance: Built-in plugins are designed to be as fast and   memory-efficient as possible, so that they don't unnecessarily slow down   builds. This is particularly important for large documentation projects with   thousands of pages.</p> </li> </ul>"},{"location":"plugins/#categories","title":"Categories","text":""},{"location":"plugins/#management","title":"Management","text":"<p>The following plugins greatly improve the authoring experience when working on documentation projects by providing better management capabilities, from the management of plugins, multiple projects, and metadata, to the creation of minimal reproductions for bug reports:</p> <ul> <li> <p> Built-in group plugin</p> <p>The group plugin allows to group plugins into logical units to conditionally enable or disable them for specific environments with the use of environment variables.</p> <p>Optimal management of plugins when building in different environments</p> </li> <li> <p> Built-in meta plugin</p> <p>The meta plugin makes it easy to manage metadata (front matter) for all pages in a folder, so a certain subset of pages uses specific tags or a custom template.</p> <p>Simpler organization, categorization and management of metadata</p> </li> <li> <p> Built-in projects plugin</p> <p>The projects plugin allows to split your main project into multiple distinct projects, build them concurrently and preview them together as one.</p> <p>Connect multiple projects together, and build them separately or as one</p> </li> <li> <p> Built-in info plugin</p> <p>The info plugin is a small and useful utility that helps to create self-contained minimal reproductions, so we maintainers can fix reported bugs more quickly.</p> <p>Your bug reports are of the highest quality, so we can fix them as fast as possible</p> </li> </ul>"},{"location":"plugins/#optimization","title":"Optimization","text":"<p>The following plugins are designed to help you build optimized documentation, making it more accessible to your users through faster loading times, better search engine rankings, beautiful preview images on social media, and GDPR compliance with a few lines of configuration:</p> <ul> <li> <p> Built-in social plugin</p> <p>The social plugin automatically generates beautiful and customizable social cards for each page of your documentation, showing as previews on social media.</p> <p>Links to your site render beautiful social cards when shared on social media</p> </li> <li> <p> Built-in optimize plugin</p> <p>The optimize plugin automatically identifies and optimizes all media files that you reference in your project by using compression and conversion techniques.</p> <p>Your site loads faster as smaller images are served to your users</p> </li> <li> <p> Built-in privacy plugin</p> <p>The privacy plugin downloads external assets automatically for easy self-hosting, allowing for GDPR compliance with a single line of configuration.</p> <p>Your documentation can be made GDPR compliant with minimal effort</p> </li> <li> <p> Built-in offline plugin</p> <p>The offline plugin adds support for building offline-capable documentation, so you can distribute the <code>site</code> directory as a <code>.zip</code> file that can be downloaded.</p> <p>Your documentation can work without connectivity to the internet</p> </li> </ul>"},{"location":"plugins/#content","title":"Content","text":"<p>The following plugins are designed to help you set up a blog, provide search functionality to your users, add tags to pages and posts, and use the same typesetting capabilities in specific parts of the documentation exactly as in the main content:</p> <ul> <li> <p> Built-in blog plugin</p> <p>The blog plugin adds first-class support for blogging to Material for MkDocs, either as a sidecar to your documentation or as a standalone installation.</p> <p>Your blog is built with the same powerful engine as your documentation</p> </li> <li> <p> Built-in search plugin</p> <p>The search plugin adds a search bar to the header, allowing users to search the entire documentation, so it's easier for them to find what they're looking for.</p> <p>Your documentation is searchable without any external services, even offline</p> </li> <li> <p> Built-in tags plugin</p> <p>The tags plugin adds first-class support for categorizing pages with tags, adding the ability to group related pages to improve the discovery of related content.</p> <p>Your pages are categorized with tags, yielding additional context</p> </li> <li> <p> Built-in typeset plugin</p> <p>The typeset plugin allows to preserve the enriched presentation of titles and headlines within the navigation and table of contents.</p> <p>Sidebars preserve the same formatting as section titles in pages</p> </li> </ul>"},{"location":"plugins/#architecture","title":"Architecture","text":""},{"location":"plugins/#multiple-instances","title":"Multiple instances","text":"<p>Several built-in plugins have support for multiple instances, which means that they can be used multiple times in the same configuration file, allowing to fine-tune behavior for separate sections of your project. Currently, the following plugins have support for multiple instances:</p> <ul> <li>Built-in blog plugin</li> <li>Built-in group plugin</li> <li>Built-in optimize plugin</li> <li>Built-in privacy plugin</li> <li>Built-in social plugin</li> </ul>"},{"location":"plugins/blog/","title":"Built-in blog plugin","text":"<p>The blog plugin makes it very easy to build a blog, either as a sidecar to your documentation or as the main thing. Focus on your content while the plugin does all the heavy lifting, generating a view of all latest posts, archive and category pages, configurable pagination and much more.</p>"},{"location":"plugins/blog/#objective","title":"Objective","text":""},{"location":"plugins/blog/#how-it-works","title":"How it works","text":"<p>The plugin scans the configured <code>posts</code> directory for <code>.md</code> files from which paginated views<sup>1</sup> are automatically generated. If not configured otherwise, the plugin expects that your project has the following directory layout, and will create any missing directories or files for you:</p> <pre><code>.\n\u251c\u2500 docs/\n\u2502  \u2514\u2500 blog/\n\u2502     \u251c\u2500 posts/\n\u2502     \u2514\u2500 index.md\n\u2514\u2500 mkdocs.yml\n</code></pre> <p>The <code>index.md</code> file in the <code>blog</code> directory is the entry point to your blog \u2013 a paginated view listing all posts in reverse chronological order. Besides that, the plugin supports automatically creating archive and category pages that list a subset of posts for a time interval or category.</p> <p>Post URLs are completely configurable, no matter if you want your URLs to include the post's date or not. Rendered dates always display in the locale of the site language of your project. Like in other static blog frameworks, posts can be annotated with a variety of metadata, allowing for easy integration with other built-in plugins, e.g., the social and tags plugin.</p> <p>Posts can be organized in nested folders with a directory layout that suits your specific needs, and can make use of all components and syntax that Material for MkDocs offers, including admonitions, annotations, code blocks, content tabs, diagrams, icons, math, and more.</p>"},{"location":"plugins/blog/#when-to-use-it","title":"When to use it","text":"<p>If you want to add a blog to your project, or migrate from another blog framework to Material for MkDocs because of its excellent technical writing capabilities, this plugin is a great choice, as it integrates perfectly with many other built-in plugins:</p> <ul> <li> <p> Built-in meta plugin</p> <p>The meta plugin makes it easy to apply metadata to a subset of posts, including authors, tags, categories, draft status, as well as social card layouts.</p> <p>Simpler organization, categorization and management of post metadata</p> </li> <li> <p> Built-in social plugin</p> <p>The social plugin automatically generates beautiful and customizable social cards for each post and page, showing as previews on social media.</p> <p>Links to your blog render beautiful social cards when shared on social media</p> </li> <li> <p> Built-in optimize plugin</p> <p>The optimize plugin automatically identifies and optimizes all media files that you reference in your project by using compression and conversion techniques.</p> <p>Your blog loads faster as smaller images are served to your users</p> </li> <li> <p> Built-in tags plugin</p> <p>The tags plugin allows to categorize posts alongside with pages in your project, to improve their discoverability and connect posts to your documentation.</p> <p>Your documentation's tag system integrates with your blog</p> </li> </ul>"},{"location":"plugins/blog/#configuration","title":"Configuration","text":"<p>9.2.0 blog \u2013 built-in </p> <p>As with all built-in plugins, getting started with the blog plugin is straightforward. Just add the following lines to <code>mkdocs.yml</code>, and you can start writing your first post:</p> <pre><code>plugins:\n  - blog\n</code></pre> <p>The blog plugin is built into Material for MkDocs and doesn't need to be installed.</p>"},{"location":"plugins/blog/#navigation","title":"Navigation","text":"<p>If you do not have site navigation configured in your <code>mkdocs.yml</code> then there is nothing more to do. The blog archive and category pages will automatically appear underneath the automatically generated navigation.</p> <p>If you do have a navigation structure defined then you will need to specify where the blog should appear in this. Create a navigation section with an index page for the blog:</p> <pre><code>theme:\n  name: material\n  features:\n    - navigation.indexes\nnav:\n  - ...\n  - Blog:\n    - blog/index.md\n</code></pre> <p>The archive and category pages will appear within that section as subsections beneath pages in the blog section. In this case, they would appear after <code>index.md</code>. The path to the <code>index.md</code> file must match blog_dir. This means that you can name the blog navigation entry anything you like: 'Blog' or 'News' or perhaps 'Tips'.</p>"},{"location":"plugins/blog/#general","title":"General","text":"<p>The following settings are available:</p>"},{"location":"plugins/blog/#config.enabled","title":"<code>enabled</code>","text":"<p>9.2.0 <code>true</code></p> <p>Use this setting to enable or disable the plugin when building your project. It's normally not necessary to specify this setting, but if you want to disable the plugin, use:</p> <pre><code>plugins:\n  - blog:\n      enabled: false\n</code></pre>"},{"location":"plugins/blog/#config.blog_dir","title":"<code>blog_dir</code>","text":"<p>9.2.0 <code>blog</code></p> <p>Use this setting to change the path where your blog is located in the <code>docs</code> directory. The path is included in the generated URLs as a prefix for all posts and views. You can change it with:</p> Documentation + BlogBlog only <pre><code>plugins:\n  - blog:\n      blog_dir: blog\n</code></pre> <pre><code>plugins:\n  - blog:\n      blog_dir: .\n</code></pre> <p>The provided path is resolved from the <code>docs</code> directory.</p>"},{"location":"plugins/blog/#config.blog_toc","title":"<code>blog_toc</code>","text":"<p>9.2.0 <code>false</code></p> <p>Use this setting to leverage the table of contents to display post titles in views. This might be useful, if your post excerpts are rather long. If you want to enable it, use:</p> <pre><code>plugins:\n  - blog:\n      blog_toc: true\n</code></pre>"},{"location":"plugins/blog/#posts","title":"Posts","text":"<p>The following settings are available for posts:</p>"},{"location":"plugins/blog/#config.post_dir","title":"<code>post_dir</code>","text":"<p>9.2.0 <code>{blog}/posts</code></p> <p>Use this setting to change the folder where your posts are located. It's normally not necessary to change this setting, but if you want to rename the folder or change its file system location, use:</p> <pre><code>plugins:\n  - blog:\n      post_dir: \"{blog}/articles\"\n</code></pre> <p>Note that the <code>posts</code> directory is solely used for post organization \u2013 it is not included in post URLs, since they are automatically and comfortably generated by this plugin.</p> <p>The following placeholders are available:</p> <ul> <li><code>blog</code> \u2013 <code>blog</code> directory</li> </ul> <p>The provided path is resolved from the <code>docs</code> directory.</p>"},{"location":"plugins/blog/#config.post_date_format","title":"<code>post_date_format</code>","text":"<p>9.2.0 <code>long</code></p> <p>Use this setting to change the date format of posts. This plugin uses babel to render dates in the configured site language. You can use babel's pattern syntax or the following shortcodes:</p> Monday, January 31, 2024January 31, 2024Jan 31, 20241/31/24 <pre><code>plugins:\n  - blog:\n      post_date_format: full\n</code></pre> <pre><code>plugins:\n  - blog:\n      post_date_format: long\n</code></pre> <pre><code>plugins:\n  - blog:\n      post_date_format: medium\n</code></pre> <pre><code>plugins:\n  - blog:\n      post_date_format: short\n</code></pre> <p>Note that depending on the site language, results might look different for other languages.</p>"},{"location":"plugins/blog/#config.post_url_date_format","title":"<code>post_url_date_format</code>","text":"<p>9.2.0 <code>yyyy/MM/dd</code></p> <p>Use this setting to change the date format used in post URLs. The format string must adhere to babel's pattern syntax and should not contain whitespace. Some popular choices:</p>  blog/2024/01/31// blog/2024/01// blog/2024// <pre><code>plugins:\n  - blog:\n      post_url_date_format: yyyy/MM/dd\n</code></pre> <pre><code>plugins:\n  - blog:\n      post_url_date_format: yyyy/MM\n</code></pre> <pre><code>plugins:\n  - blog:\n      post_url_date_format: yyyy\n</code></pre> <p>If you want to remove the date from post URLs, e.g., when your blog features mostly evergreen content, you can remove the <code>date</code> placeholder from the <code>post_url_format</code> format string.</p>"},{"location":"plugins/blog/#config.post_url_format","title":"<code>post_url_format</code>","text":"<p>9.2.0 <code>{date}/{slug}</code></p> <p>Use this setting to change the format string that is used when generating post URLs. You can freely combine placeholders, and join them with slashes or other characters:</p>  blog/2024// blog// <pre><code>plugins:\n  - blog:\n      post_url_format: \"{date}/{slug}\"\n</code></pre> <pre><code>plugins:\n  - blog:\n      post_url_format: \"{slug}\"\n</code></pre> <p>The following placeholders are available:</p> <ul> <li><code>categories</code> \u2013 Post categories, slugified with <code>categories_slugify</code></li> <li><code>date</code> \u2013 Post date, formatted with <code>post_url_date_format</code></li> <li><code>slug</code> \u2013 Post title, slugified with <code>post_slugify</code>, or explicitly set via <code>slug</code> metadata property</li> <li><code>file</code> \u2013 Post filename without <code>.md</code> file extension</li> </ul> <p>If you remove the <code>date</code> placeholder, make sure that post URLs don't collide with URLs of other pages hosted under the <code>blog</code> directory, as this leads to undefined behavior.</p>"},{"location":"plugins/blog/#config.post_url_max_categories","title":"<code>post_url_max_categories</code>","text":"<p>9.2.0 <code>1</code></p> <p>Use this setting to set an upper bound for the number of categories included in post URLs if the <code>categories</code> placeholder is part of <code>post_url_format</code> and the post defines categories:</p> <pre><code>plugins:\n  - blog:\n      post_url_format: \"{categories}/{slug}\"\n      post_url_max_categories: 2\n</code></pre> <p>If more than one category is given, they are joined with <code>/</code> after slugifying.</p>"},{"location":"plugins/blog/#config.post_slugify","title":"<code>post_slugify</code>","text":"<p>9.2.0 <code>pymdownx.slugs.slugify</code></p> <p>Use this setting to change the function for generating URL-compatible slugs from post titles. By default, the <code>slugify</code> function from Python Markdown Extensions is used as follows:</p> <pre><code>plugins:\n  - blog:\n      post_slugify: !!python/object/apply:pymdownx.slugs.slugify\n        kwds:\n          case: lower\n</code></pre> <p>The default configuration is Unicode-aware and should produce good slugs for all languages. Of course, you can also provide a custom slugification function for more granular control.</p>"},{"location":"plugins/blog/#config.post_slugify_separator","title":"<code>post_slugify_separator</code>","text":"<p>9.2.0 <code>-</code></p> <p>Use this setting to change the separator that is passed to the slugification function set as part of <code>post_slugify</code>. While the default is a hyphen, it can be set to any string, e.g., <code>_</code>:</p> <pre><code>plugins:\n  - blog:\n      post_slugify_separator: _\n</code></pre>"},{"location":"plugins/blog/#config.post_excerpt","title":"<code>post_excerpt</code>","text":"<p>9.2.0 <code>optional</code></p> <p>By default, the plugin makes post excerpts optional. When a post doesn't define an excerpt, views include the entire post. This setting can be used to make post excerpts required:</p> OptionalRequired <pre><code>plugins:\n  - blog:\n      post_excerpt: optional\n</code></pre> <pre><code>plugins:\n  - blog:\n      post_excerpt: required\n</code></pre> <p>When post excerpts are required, posts without excerpt separators raise an error. Thus, this setting is useful when you want to make sure that all posts have excerpts defined.</p>"},{"location":"plugins/blog/#config.post_excerpt_max_authors","title":"<code>post_excerpt_max_authors</code>","text":"<p>9.2.0 <code>1</code></p> <p>Use this setting to set an upper bound for the number of authors rendered in post excerpts. While each post may be written by multiple authors, this setting allows to limit the display to just a few or even a single author, or disable authors in post excerpts:</p> Render up to 2 authorsDisable authors <pre><code>plugins:\n  - blog:\n      post_excerpt_max_authors: 2\n</code></pre> <pre><code>plugins:\n  - blog:\n      post_excerpt_max_authors: 0\n</code></pre> <p>This only applies to post excerpts in views. Posts always render all authors.</p>"},{"location":"plugins/blog/#config.post_excerpt_max_categories","title":"<code>post_excerpt_max_categories</code>","text":"<p>9.2.0 <code>5</code></p> <p>Use this setting to set an upper bound for the number of categories rendered in post excerpts. While each post may be assigned to multiple categories, this setting allows to limit the display to just a few or even a single category, or disable categories in post excerpts:</p> Render up to 2 categoriesDisable categories <pre><code>plugins:\n  - blog:\n      post_excerpt_max_categories: 2\n</code></pre> <pre><code>plugins:\n  - blog:\n      post_excerpt_max_categories: 0\n</code></pre> <p>This only applies to post excerpts in views. Posts always render all categories.</p>"},{"location":"plugins/blog/#config.post_excerpt_separator","title":"<code>post_excerpt_separator</code>","text":"<p>9.2.0 <code>&lt;!-- more --&gt;</code></p> <p>Use this setting to set the separator the plugin will look for in a post's content when generating post excerpts. All content before the separator is considered to be part of the excerpt:</p> <pre><code>plugins:\n  - blog:\n      post_excerpt_separator: &lt;!-- more --&gt;\n</code></pre> <p>It is common practice to use an HTML comment as a separator.</p>"},{"location":"plugins/blog/#config.post_readtime","title":"<code>post_readtime</code>","text":"<p>9.2.0 <code>true</code></p> <p>Use this setting to control whether the plugin should automatically compute the reading time of a post, which is then rendered in post excerpts, as well as in posts themselves:</p> <pre><code>plugins:\n  - blog:\n      post_readtime: false\n</code></pre>"},{"location":"plugins/blog/#config.post_readtime_words_per_minute","title":"<code>post_readtime_words_per_minute</code>","text":"<p>9.2.0 <code>265</code></p> <p>Use this setting to change the number of words that a reader is expected to read per minute when computing the reading time of a post. If you want to fine-tune it, use:</p> <pre><code>plugins:\n  - blog:\n      post_readtime_words_per_minute: 300\n</code></pre> <p>A reading time of 265 words per minute is considered to be the average reading time of an adult.</p>"},{"location":"plugins/blog/#archive","title":"Archive","text":"<p>The following settings are available for archive pages:</p>"},{"location":"plugins/blog/#config.archive","title":"<code>archive</code>","text":"<p>9.2.0 <code>true</code></p> <p>Use this setting to enable or disable archive pages. An archive page shows all posts for a specific interval (e.g. year, month, etc.) in reverse order. If you want to disable archive pages, use:</p> <pre><code>plugins:\n  - blog:\n      archive: false\n</code></pre>"},{"location":"plugins/blog/#config.archive_name","title":"<code>archive_name</code>","text":"<p>9.2.0 </p> <p>Use this setting to change the title of the archive section the plugin adds to the navigation. If this setting is omitted, it's sourced from the translations. If you want to change it, use:</p> <pre><code>plugins:\n  - blog:\n      archive_name: Archive\n</code></pre>"},{"location":"plugins/blog/#config.archive_date_format","title":"<code>archive_date_format</code>","text":"<p>9.2.0 <code>yyyy</code></p> <p>Use this setting to change the date format used for archive page titles. The format string must adhere to babel's pattern syntax. Some popular choices:</p> 2024January 2024 <pre><code>plugins:\n  - blog:\n      archive_date_format: yyyy\n</code></pre> <pre><code>plugins:\n  - blog:\n      archive_date_format: MMMM yyyy\n</code></pre> <p>Note that depending on the site language, results might look different for other languages.</p>"},{"location":"plugins/blog/#config.archive_url_date_format","title":"<code>archive_url_date_format</code>","text":"<p>9.2.0 <code>yyyy</code></p> <p>Use this setting to change the date format used for archive page URLs. The format string must adhere to babel's pattern syntax and should not contain whitespace. Some popular choices:</p>  blog/archive/2024/ blog/archive/2024/01/ <pre><code>plugins:\n  - blog:\n      archive_url_date_format: yyyy\n</code></pre> <pre><code>plugins:\n  - blog:\n      archive_url_date_format: yyyy/MM\n</code></pre>"},{"location":"plugins/blog/#config.archive_url_format","title":"<code>archive_url_format</code>","text":"<p>9.2.0 <code>archive/{date}</code></p> <p>Use this setting to change the format string that is used when generating archive page URLs. You can freely combine placeholders, and join them with slashes or other characters:</p>  blog/archive/2024/ blog/2024/ <pre><code>plugins:\n  - blog:\n      archive_url_format: \"archive/{date}\"\n</code></pre> <pre><code>plugins:\n  - blog:\n      archive_url_format: \"{date}\"\n</code></pre> <p>The following placeholders are available:</p> <ul> <li><code>date</code> \u2013 Archive date, formatted with <code>archive_url_date_format</code></li> </ul>"},{"location":"plugins/blog/#config.archive_pagination","title":"<code>archive_pagination</code>","text":"<p> insiders-4.44.0 <code>true</code></p> <p>Use this setting to enable or disable pagination for archive pages. The value of this setting is inherited from <code>pagination</code>, unless it's explicitly set. To disable pagination, use:</p> <pre><code>plugins:\n  - blog:\n      archive_pagination: false\n</code></pre>"},{"location":"plugins/blog/#config.archive_pagination_per_page","title":"<code>archive_pagination_per_page</code>","text":"<p> insiders-4.44.0 <code>10</code></p> <p>Use this setting to change the number of posts rendered per archive page. The value of this setting is inherited from <code>pagination_per_page</code>, unless it's explicitly set. To change it, use:</p> <pre><code>plugins:\n  - blog:\n      archive_pagination_per_page: 5\n</code></pre>"},{"location":"plugins/blog/#config.archive_toc","title":"<code>archive_toc</code>","text":"<p>9.2.0 <code>false</code></p> <p>Use this setting to leverage the table of contents to display post titles on all archive pages. The value of this setting is inherited from <code>blog_toc</code>, unless it's explicitly set. To change it, use</p> <pre><code>plugins:\n  - blog:\n      archive_toc: true\n</code></pre>"},{"location":"plugins/blog/#categories","title":"Categories","text":"<p>The following settings are available for category pages:</p>"},{"location":"plugins/blog/#config.categories","title":"<code>categories</code>","text":"<p>9.2.0 <code>true</code></p> <p>Use this setting to enable or disable category pages. A category page shows all posts for a specific category in reverse chronological order. If you want to disable category pages, use:</p> <pre><code>plugins:\n  - blog:\n      categories: false\n</code></pre>"},{"location":"plugins/blog/#config.categories_name","title":"<code>categories_name</code>","text":"<p>9.2.0 </p> <p>Use this setting to change the title of the category section the plugin adds to the navigation. If this setting is omitted, it's sourced from the translations. If you want to change it, use:</p> <pre><code>plugins:\n  - blog:\n      categories_name: Categories\n</code></pre>"},{"location":"plugins/blog/#config.categories_url_format","title":"<code>categories_url_format</code>","text":"<p>9.2.0 <code>category/{slug}</code></p> <p>Use this setting to change the format string that is used when generating category page URLs. You can freely combine placeholders, and join them with slashes or other characters:</p>  blog/category// blog// <pre><code>plugins:\n  - blog:\n      categories_url_format: \"category/{slug}\"\n</code></pre> <pre><code>plugins:\n  - blog:\n      categories_url_format: \"{slug}\"\n</code></pre> <p>The following placeholders are available:</p> <ul> <li><code>slug</code> \u2013 Category, slugified with <code>categories_slugify</code></li> </ul>"},{"location":"plugins/blog/#config.categories_slugify","title":"<code>categories_slugify</code>","text":"<p>9.2.0 <code>pymdownx.slugs.slugify</code></p> <p>Use this setting to change the function for generating URL-compatible slugs from categories. By default, the <code>slugify</code> function from Python Markdown Extensions is used as follows:</p> <pre><code>plugins:\n  - blog:\n      categories_slugify: !!python/object/apply:pymdownx.slugs.slugify\n        kwds:\n          case: lower\n</code></pre> <p>The default configuration is Unicode-aware and should produce good slugs for all languages. Of course, you can also provide a custom slugification function for more granular control.</p>"},{"location":"plugins/blog/#config.categories_slugify_separator","title":"<code>categories_slugify_separator</code>","text":"<p>9.2.0 <code>-</code></p> <p>Use this setting to change the separator that is passed to the slugification function set as part of <code>categories_slugify</code>. While the default is a hyphen, it can be set to any string, e.g., <code>_</code>:</p> <pre><code>plugins:\n  - blog:\n      categories_slugify_separator: _\n</code></pre>"},{"location":"plugins/blog/#config.categories_sort_by","title":"<code>categories_sort_by</code>","text":"<p> insiders-4.45.0 <code>material.plugins.blog.view_name</code></p> <p>Use this setting to specify a custom function for sorting categories. For example, if you want to sort categories by the number of posts they contain, use the following configuration:</p> <pre><code>plugins:\n  - blog:\n      categories_sort_by: !!python/name:material.plugins.blog.view_post_count\n</code></pre> <p>Don't forget to enable <code>categories_sort_reverse</code>. You can define your own comparison function, which must return something that can be compared while sorting, i.e., a string or number.</p>"},{"location":"plugins/blog/#config.categories_sort_reverse","title":"<code>categories_sort_reverse</code>","text":"<p> insiders-4.45.0 <code>false</code></p> <p>Use this setting to reverse the order in which categories are sorted. By default, categories are sorted in ascending order, but you can reverse ordering as follows:</p> <pre><code>plugins:\n  - blog:\n      categories_sort_reverse: true\n</code></pre>"},{"location":"plugins/blog/#config.categories_allowed","title":"<code>categories_allowed</code>","text":"<p>9.2.0 </p> <p>The plugin allows to check categories against a predefined list, in order to catch typos or make sure that categories are not arbitrarily added. Specify the categories you want to allow with:</p> <pre><code>plugins:\n  - blog:\n      categories_allowed:\n        - Search\n        - Performance\n</code></pre> <p>The plugin stops the build if a post references a category that is not part of this list. Posts can be assigned to categories by using the <code>categories</code> metadata property.</p>"},{"location":"plugins/blog/#config.categories_pagination","title":"<code>categories_pagination</code>","text":"<p> insiders-4.44.0 <code>true</code></p> <p>Use this setting to enable or disable pagination for category pages. The value of this setting is inherited from <code>pagination</code>, unless it's explicitly set. To disable pagination, use:</p> <pre><code>plugins:\n  - blog:\n      categories_pagination: false\n</code></pre>"},{"location":"plugins/blog/#config.categories_pagination_per_page","title":"<code>categories_pagination_per_page</code>","text":"<p> insiders-4.44.0 <code>10</code></p> <p>Use this setting to change the number of posts rendered per category page. The value of this setting is inherited from <code>pagination_per_page</code>, unless it's explicitly set. To change it, use:</p> <pre><code>plugins:\n  - blog:\n      categories_pagination_per_page: 5\n</code></pre>"},{"location":"plugins/blog/#config.categories_toc","title":"<code>categories_toc</code>","text":"<p>9.2.0 <code>false</code></p> <p>Use this setting to leverage the table of contents to display post titles on all category pages. The value of this setting is inherited from <code>blog_toc</code>, unless it's explicitly set. To change it, use:</p> <pre><code>plugins:\n  - blog:\n      categories_toc: true\n</code></pre>"},{"location":"plugins/blog/#authors","title":"Authors","text":"<p>The following settings are available for authors:</p>"},{"location":"plugins/blog/#config.authors","title":"<code>authors</code>","text":"<p>9.2.0 <code>true</code></p> <p>Use this setting to enable or disable post authors. If this setting is enabled, the plugin will look for a file named <code>.authors.yml</code> and render authors in posts and views. Disable this behavior with:</p> <pre><code>plugins:\n  - blog:\n      authors: false\n</code></pre>"},{"location":"plugins/blog/#config.authors_file","title":"<code>authors_file</code>","text":"<p>9.2.0 <code>{blog}/.authors.yml</code></p> <p>Use this setting to change the path of the file where the author information for your posts resides. It's normally not necessary to change this setting, but if you need to, use:</p> <pre><code>plugins:\n  - blog:\n      authors_file: \"{blog}/.authors.yml\"\n</code></pre> <p>The following placeholders are available:</p> <ul> <li><code>blog</code> \u2013 <code>blog</code> directory</li> </ul> <p>The provided path is resolved from the <code>docs</code> directory.</p> <p>Format of author information</p> <p>The <code>.authors.yml</code> file must adhere to the following format:</p> .authors.yml<pre><code>authors:\n  &lt;author&gt;:\n    name: string        # Author name\n    description: string # Author description\n    avatar: url         # Author avatar\n    slug: url           # Author profile slug\n    url: url            # Author website URL\n</code></pre> <p>Note that <code>&lt;author&gt;</code> must be set to an identifier for associating authors with posts, e.g., a GitHub username like <code>squidfunk</code>. This identifier can then be used in the <code>authors</code> metadata property of a post. Multiple authors are supported. As an example, see the <code>.authors.yml</code> file we're using for our blog.</p>"},{"location":"plugins/blog/#config.authors_profiles","title":"<code>authors_profiles</code>","text":"<p> insiders-4.46.0 <code>false</code></p> <p>Use this setting to enable or disable automatically generated author profiles. An author profile shows all posts by an author in reverse chronological order. You can enable author profiles with:</p> <pre><code>plugins:\n  - blog:\n      authors_profiles: true\n</code></pre>"},{"location":"plugins/blog/#config.authors_profiles_name","title":"<code>authors_profiles_name</code>","text":"<p> insiders-4.46.0 </p> <p>Use this setting to change the title of the authors section the plugin adds to the navigation. If this setting is omitted, it's sourced from the translations. If you want to change it, use:</p> <pre><code>plugins:\n  - blog:\n      authors_profiles_name: Authors\n</code></pre>"},{"location":"plugins/blog/#config.authors_profiles_url_format","title":"<code>authors_profiles_url_format</code>","text":"<p> insiders-4.46.0 <code>author/{slug}</code></p> <p>Use this setting to change the format string that is used when generating author profile URLs. You can freely combine placeholders, and join them with slashes or other characters:</p>  blog/author// blog// <pre><code>plugins:\n  - blog:\n      authors_profiles_url_format: \"author/{slug}\"\n</code></pre> <pre><code>plugins:\n  - blog:\n      authors_profiles_url_format: \"{slug}\"\n</code></pre> <p>The following placeholders are available:</p> <ul> <li><code>slug</code> \u2013 Author slug or identifier from <code>authors_file</code></li> <li><code>name</code> \u2013 Author name from <code>authors_file</code></li> </ul>"},{"location":"plugins/blog/#config.authors_profiles_pagination","title":"<code>authors_profiles_pagination</code>","text":"<p> insiders-4.46.0 <code>true</code></p> <p>Use this setting to enable or disable pagination for author profiles. The value of this setting is inherited from <code>pagination</code>, unless it's explicitly set. To disable pagination, use:</p> <pre><code>plugins:\n  - blog:\n      authors_profiles_pagination: false\n</code></pre>"},{"location":"plugins/blog/#config.authors_profiles_pagination_per_page","title":"<code>authors_profiles_pagination_per_page</code>","text":"<p> insiders-4.46.0 <code>10</code></p> <p>Use this setting to change the number of posts rendered per archive page. The value of this setting is inherited from <code>pagination_per_page</code>, unless it's explicitly set. To change it, use:</p> <pre><code>plugins:\n  - blog:\n      authors_profiles_pagination_per_page: 5\n</code></pre>"},{"location":"plugins/blog/#config.authors_profiles_toc","title":"<code>authors_profiles_toc</code>","text":"<p> insiders-4.46.0 <code>false</code></p> <p>Use this setting to leverage the table of contents to display post titles on all author profiles. The value of this setting is inherited from <code>blog_toc</code>, unless it's explicitly set. To change it, use:</p> <pre><code>plugins:\n  - blog:\n      authors_profiles_toc: true\n</code></pre>"},{"location":"plugins/blog/#pagination","title":"Pagination","text":"<p>The following settings are available for pagination:</p>"},{"location":"plugins/blog/#config.pagination","title":"<code>pagination</code>","text":"<p>9.2.0 <code>true</code></p> <p>Use this setting to enable or disable pagination in views \u2013 generated pages that show posts or subsets of posts in reverse chronological order. If you want to disable pagination, use:</p> <pre><code>plugins:\n  - blog:\n      pagination: false\n</code></pre>"},{"location":"plugins/blog/#config.pagination_per_page","title":"<code>pagination_per_page</code>","text":"<p>9.2.0 <code>10</code></p> <p>Use this setting to change the number of posts rendered per page. If you have rather long post excerpts, it can be a good idea to reduce the number of posts per page:</p> <pre><code>plugins:\n  - blog:\n      pagination_per_page: 5\n</code></pre>"},{"location":"plugins/blog/#config.pagination_url_format","title":"<code>pagination_url_format</code>","text":"<p>9.2.0 <code>page/{page}</code></p> <p>Use this setting to change the format string that is used when generating paginated view URLs. You can freely combine placeholders, and join them with slashes or other characters:</p>  blog/page/n/ blog/n/ <pre><code>plugins:\n  - blog:\n      pagination_url_format: \"page/{page}\"\n</code></pre> <pre><code>plugins:\n  - blog:\n      pagination_url_format: \"{page}\"\n</code></pre> <p>The following placeholders are available:</p> <ul> <li><code>page</code> \u2013 Page number</li> </ul>"},{"location":"plugins/blog/#config.pagination_format","title":"<code>pagination_format</code>","text":"<p>9.2.0 <code>~2~</code></p> <p>The plugin uses the paginate module to generate the pagination markup using a special syntax. Use this setting to customize how pagination is constructed. Some popular choices:</p> 1 2 3 .. n1 2 3 .. n  1  <pre><code>plugins:\n  - blog:\n      pagination_format: \"~2~\"\n</code></pre> <pre><code>plugins:\n  - blog:\n      pagination_format: \"$link_first $link_previous ~2~ $link_next $link_last\"\n</code></pre> <pre><code>plugins:\n  - blog:\n      pagination_format: \"$link_previous $page $link_next\"\n</code></pre> <p>The following placeholders are supported by paginate:</p> <ul> <li><code>$first_page</code> \u2013 Number of first reachable page</li> <li><code>$last_page</code> \u2013 Number of last reachable page</li> <li><code>$page</code> \u2013 Number of currently selected page</li> <li><code>$page_count</code> \u2013 Number of reachable pages</li> <li><code>$items_per_page</code> \u2013 Maximal number of items per page</li> <li><code>$first_item</code> \u2013 Index of first item on the current page</li> <li><code>$last_item</code> \u2013 Index of last item on the current page</li> <li><code>$item_count</code> \u2013 Total number of items</li> <li><code>$link_first</code> \u2013 Link to first page (unless on first page)</li> <li><code>$link_last</code> \u2013 Link to last page (unless on last page)</li> <li><code>$link_previous</code> \u2013 Link to previous page (unless on first page)</li> <li><code>$link_next</code> \u2013 Link to next page (unless on last page)</li> </ul>"},{"location":"plugins/blog/#config.pagination_if_single_page","title":"<code>pagination_if_single_page</code>","text":"<p>9.2.0 <code>false</code></p> <p>Use this setting to control whether pagination should be automatically disabled when the view only consists of a single page. If you want to always render pagination, use:</p> <pre><code>plugins:\n  - blog:\n      pagination_if_single_page: true\n</code></pre>"},{"location":"plugins/blog/#config.pagination_keep_content","title":"<code>pagination_keep_content</code>","text":"<p>9.2.0 <code>false</code></p> <p>Use this setting to enable or disable persistence of content, i.e., if paginated views should also display the content of their containing view. If you want to enable this behavior, use:</p> <pre><code>plugins:\n  - blog:\n      pagination_keep_content: true\n</code></pre>"},{"location":"plugins/blog/#drafts","title":"Drafts","text":"<p>The following settings are available for drafts:</p>"},{"location":"plugins/blog/#config.draft","title":"<code>draft</code>","text":"<p>9.2.0 <code>false</code></p> <p>Rendering draft posts can be useful in deploy previews. Use this setting to specify whether the plugin should include posts marked as drafts when building your project:</p> Render draftsDon't render drafts <pre><code>plugins:\n  - blog:\n      draft: true\n</code></pre> <pre><code>plugins:\n  - blog:\n      draft: false\n</code></pre>"},{"location":"plugins/blog/#config.draft_on_serve","title":"<code>draft_on_serve</code>","text":"<p>9.2.0 <code>true</code></p> <p>Use this setting to control whether the plugin should include posts marked as drafts when previewing your site. If you don't wish to include draft posts when previewing, use:</p> <pre><code>plugins:\n  - blog:\n      draft_on_serve: false\n</code></pre>"},{"location":"plugins/blog/#config.draft_if_future_date","title":"<code>draft_if_future_date</code>","text":"<p>9.2.0 <code>false</code></p> <p>The plugin can automatically mark posts with future dates as drafts. When the date is past today, the post is automatically included when building your project, unless explicitly marked as draft:</p> <pre><code>plugins:\n  - blog:\n      draft_if_future_date: true\n</code></pre>"},{"location":"plugins/blog/#usage","title":"Usage","text":""},{"location":"plugins/blog/#metadata","title":"Metadata","text":"<p>Posts can define a handful of metadata properties that specify how the plugin renders them, in which views they are integrated, and how they are linked to each other. The metadata of each post is validated against a schema to allow for a quicker discovery of syntax errors.</p> <p>The following properties are available:</p>"},{"location":"plugins/blog/#meta.authors","title":"<code>authors</code>","text":"<p>9.2.0 </p> <p>Use this property to associate a post with authors by providing a list of identifiers as defined in the <code>authors_file</code>. If an author can't be resolved, the plugin will terminate with an error:</p> <pre><code>---\nauthors:\n  - squidfunk # (1)!\n---\n\n# Post title\n...\n</code></pre> <ol> <li>Authors are linked by using their identifiers. As an example, see     the <code>.authors.yml</code> file we're using for our blog.</li> </ol>"},{"location":"plugins/blog/#meta.categories","title":"<code>categories</code>","text":"<p>9.2.0 </p> <p>Use this property to associate a post with one or more categories, making the post a part of the generated category page. Categories are defined as a list of strings (whitespaces are allowed):</p> <pre><code>---\ncategories:\n  - Search\n  - Performance\n---\n\n# Post title\n...\n</code></pre> <p>If you want to prevent accidental typos assigning categories to posts, you can set a predefined list of allowed categories in <code>mkdocs.yml</code> by using the <code>categories_allowed</code> setting.</p>"},{"location":"plugins/blog/#meta.date","title":"<code>date</code>","text":"<p>9.2.0 </p> <p>Use this property to specify a post's date. Note that this property is required, which means the build fails when it's not set. Additional dates can be set by using a slightly different syntax:</p> DateUpdate dateCustom date <pre><code>---\ndate: 2024-01-31\n---\n\n# Post title\n...\n</code></pre> <pre><code>---\ndate:\n  created: 2024-01-31 # (1)!\n  updated: 2024-02-01\n---\n\n# Post title\n...\n</code></pre> <ol> <li>Each post must have a creation date set.</li> </ol> <pre><code>---\ndate:\n  created: 2024-01-31\n  my_custom_date: 2024-02-01 # (1)!\n---\n\n# Post title\n...\n</code></pre> <ol> <li> <p>The blog plugin validates all dates and allows to format them with     babel's pattern syntax in templates. When using theme extension,     authors can add custom dates to templates.</p> <p>This was first requested in #5733.</p> </li> </ol> <p>The following date formats are supported:</p> <ul> <li><code>2024-01-31</code></li> <li><code>2024-01-31T12:00:00</code></li> </ul>"},{"location":"plugins/blog/#meta.draft","title":"<code>draft</code>","text":"<p>9.2.0 </p> <p>Use this property to mark a post as draft. The plugin allows to include or exclude posts marked as drafts when building your project using the <code>draft</code> setting. Mark a post as draft with:</p> <pre><code>---\ndraft: true\n---\n\n# Post title\n...\n</code></pre>"},{"location":"plugins/blog/#meta.pin","title":"<code>pin</code>","text":"<p> insiders-4.53.0 <code>false</code> </p> <p>Use this property to pin a post to the top of a view. In case multiple posts are pinned, the pinned posts are sorted by descending order and appear before all other posts. Pin a post with:</p> <pre><code>---\npin: true\n---\n\n# Post title\n...\n</code></pre>"},{"location":"plugins/blog/#meta.links","title":"<code>links</code>","text":"<p> insiders-4.23.0 </p> <p>Use this property to define a list of links that are rendered in the sidebar of a post. The property follows the same syntax as <code>nav</code> in <code>mkdocs.yml</code>, supporting sections and even anchors:</p> LinksLinks with sectionsLinks with anchors <pre><code>---\nlinks:\n  - setup/setting-up-site-search.md\n  - insiders/index.md\n---\n\n# Post title\n...\n</code></pre> <pre><code>---\nlinks:\n  - setup/setting-up-site-search.md\n  - Insiders:\n    - insiders/index.md\n    - insiders/getting-started.md\n---\n\n# Post title\n...\n</code></pre> <pre><code>---\nlinks:\n  - plugins/search.md # (1)!\n  - Insiders:\n    - insiders/how-to-sponsor.md\n    - insiders/getting-started.md#requirements\n---\n\n# Post title\n...\n</code></pre> <ol> <li>If a link defines an anchor, the plugin resolves the anchor from the     linked page and sets the anchor title as a subtitle.</li> </ol> <p>All relative links are resolved from the <code>docs</code> directory.</p>"},{"location":"plugins/blog/#meta.readtime","title":"<code>readtime</code>","text":"<p>9.2.0 </p> <p>Use this property to explicitly set the reading time of a post in minutes. When <code>post_readtime</code> is enabled, the plugin computes the reading time of a post, which can be overridden with:</p> <pre><code>---\nreadtime: 15\n---\n\n# Post title\n...\n</code></pre>"},{"location":"plugins/blog/#meta.slug","title":"<code>slug</code>","text":"<p>9.2.0 </p> <p>Use this property to explicitly set the slug of a post. By default, the slug of a post is automatically computed by the <code>post_slugify</code> function from the post's title, which can be overridden with:</p> <pre><code>---\nslug: help-im-trapped-in-a-universe-factory\n---\n\n# Post title\n...\n</code></pre> <p>Slugs are passed to <code>post_url_format</code>.</p> <p>Missing something?</p> <p>When setting up your blog or migrating from another blog framework, you might discover that you're missing specific functionality \u2013 we're happy to consider adding it to the plugin! You can open a discussion to ask a question, or create a change request on our issue tracker, so we can find out if it might be a good fit for the plugin.</p> <ol> <li> <p>Views are pages that are automatically generated, i.e., the entry point to your blog listing all latest posts, as well as archive and category pages that list all posts associated with them through metadata in chronological order.\u00a0\u21a9</p> </li> </ol>"},{"location":"plugins/group/","title":"Built-in group plugin","text":"<p>The group plugin allows to group plugins into logical units to conditionally enable or disable them for specific environments with the use of environment variables, e.g., to only enable a subset of plugins when building your project during continuous integration (CI).</p>"},{"location":"plugins/group/#objective","title":"Objective","text":""},{"location":"plugins/group/#how-it-works","title":"How it works","text":"<p>The plugin conditionally and lazily loads all plugins that are part of a group if and only if the group is enabled, which means that the plugin doesn't add any overhead when the group is disabled. It also means that the grouped plugins only need to be installed when the group is enabled.</p> <p>The plugins that are part of the group are executed in the same order as if they were defined at the top-level in the list of <code>plugins</code>. Thus, order is preserved and deterministic.</p>"},{"location":"plugins/group/#when-to-use-it","title":"When to use it","text":"<p>Whenever you're using multiple plugins that are only required in specific environments, e.g., when building your project during continuous integration (CI), the plugin is the perfect utility for making configuration simpler, as it removes the need for splitting configuration into multiple files.</p> <p>It can be used with any built-in or third-party plugin.</p>"},{"location":"plugins/group/#configuration","title":"Configuration","text":"<p>9.3.0 group \u2013 built-in </p> <p>As with all built-in plugins, getting started with the group plugin is straightforward. Just add the following lines to <code>mkdocs.yml</code>, and start splitting plugins into logical units:</p> <pre><code>plugins:\n  - group\n</code></pre> <p>The group plugin is built into Material for MkDocs and doesn't need to be installed.</p>"},{"location":"plugins/group/#general","title":"General","text":"<p>The following settings are available:</p>"},{"location":"plugins/group/#config.enabled","title":"<code>enabled</code>","text":"<p>9.3.0 <code>false</code></p> <p>Use this setting to enable or disable the plugin when building your project. The plugin behaves differently than all other built-in plugins \u2013 it is disabled by default. To enable a group, use:</p> <pre><code>plugins:\n  - group:\n      enabled: !ENV CI # (1)!\n</code></pre> <ol> <li> <p>If you only want to use the group plugin for better organization and     always want to enable the plugins that are part of it, use:</p> <pre><code>plugins:\n  - group:\n      enabled: true\n</code></pre> </li> </ol> <p>The decision to disable the plugin by default was made to simplify the usage of environment variables, as it removes the need to provide a default value for an environment variable.</p> <p>Now, when building your project, you can enable a group by setting the environment variable:</p> <pre><code>CI=true mkdocs build\n</code></pre>"},{"location":"plugins/group/#config.plugins","title":"<code>plugins</code>","text":"<p>9.3.0 </p> <p>Use this setting to list the plugins that are part of the group. The syntax is exactly the same as for the <code>plugins</code> setting, so you can simply copy the list of plugins that you want to group, e.g:</p> <pre><code>plugins:\n  - group:\n      plugins:\n        - optimize\n        - minify\n</code></pre> <p>The plugins mentioned here are just used for illustration purposes.</p>"},{"location":"plugins/info/","title":"Built-in info plugin","text":"<p>The info plugin is a utility that is solely intended to create self-contained minimal reproductions as <code>.zip</code> files when reporting bugs or proposing change requests, making communication between us maintainers and you much easier, as we have a common ground to work on.</p>"},{"location":"plugins/info/#objective","title":"Objective","text":""},{"location":"plugins/info/#how-it-works","title":"How it works","text":"<p>The plugin helps you to prepare a minimal reproduction by collecting the necessary information about the environment and configuration of your project. This makes it easier for us to fix bugs, as it requires that you upgrade to the latest version and remove your customizations.</p> <p>When following these principles, you can be confident that you don't report a bug that has already been fixed in a subsequent release, or which is caused by one of your customizations. Even more importantly, you actively help us to fix the bug as quickly as possible.</p> <p>The output of the plugin is a <code>.zip</code> file that you can share with us maintainers.</p>"},{"location":"plugins/info/#when-to-use-it","title":"When to use it","text":"<p>Whenever you're reporting a bug or have something to discuss, like a question or change request, you should attach a small, self-contained minimal reproduction. Runnable examples help to make communication much more efficient, giving us maintainers more time to benefit more users by pushing the project forward. Minimal reproductions are mandatory for bug reports.</p>"},{"location":"plugins/info/#configuration","title":"Configuration","text":"<p>9.0.0 info \u2013 built-in</p> <p>In order to get started with the built-in info plugin, just add the following lines to <code>mkdocs.yml</code>, and quickly create a minimal reproduction to share with us maintainers:</p> <pre><code>plugins:\n  - info\n</code></pre> <p>The info plugin is built into Material for MkDocs and doesn't need to be installed.</p>"},{"location":"plugins/info/#general","title":"General","text":"<p>The following settings are available:</p>"},{"location":"plugins/info/#config.enabled","title":"<code>enabled</code>","text":"<p>9.0.0 <code>true</code></p> <p>Use this setting to enable or disable the plugin when building your project. It's normally not necessary to specify this setting, but if you want to disable the plugin, use:</p> <pre><code>plugins:\n  - info:\n      enabled: false\n</code></pre>"},{"location":"plugins/info/#config.enabled_on_serve","title":"<code>enabled_on_serve</code>","text":"<p>9.0.6 <code>false</code></p> <p>Use this setting to control whether the plugin should be enabled when previewing your site. It's normally not necessary to specify this setting, but if you want to change this behavior, use:</p> <pre><code>plugins:\n  - info:\n      enabled_on_serve: true\n</code></pre> <p>This setting streamlines the process of creating and inspecting minimal reproductions, as it allows to quickly iterate on the reproduction without having to disable the plugin first.</p>"},{"location":"plugins/info/#archive","title":"Archive","text":""},{"location":"plugins/info/#config.archive","title":"<code>archive</code>","text":"<p>9.0.0 <code>true</code></p> <p>Use this setting to control whether the plugin should create a <code>.zip</code> file from the project or exit after the version check. This setting is solely intended for debugging the plugin itself:</p> <pre><code>plugins:\n  - info:\n      archive: false\n</code></pre>"},{"location":"plugins/info/#config.archive_stop_on_violation","title":"<code>archive_stop_on_violation</code>","text":"<p>9.0.0 <code>true</code></p> <p>Use this setting to control whether the plugin should stop creating the <code>.zip</code> file when one of the requirements is not satisfied. This setting must only be used when reporting a bug that is related to a customization explicitly mentioned in our documentation. You can change it with:</p> <pre><code>plugins:\n  - info:\n      archive_stop_on_violation: false\n</code></pre> <p>If you're using this setting when reporting a bug, please explain why you think it is necessary to include customizations. If you're unsure, please ask us first by creating a discussion.</p>"},{"location":"plugins/meta/","title":"Built-in meta plugin","text":"<p>The meta plugin solves the problem of setting metadata (front matter) for all pages in a folder, i.e., a subsection of your project, which is particularly useful to ensure that a certain subset of pages features specific tags, uses a custom template, or is attributed to an author.</p>"},{"location":"plugins/meta/#objective","title":"Objective","text":""},{"location":"plugins/meta/#how-it-works","title":"How it works","text":"<p>The plugin scans the <code>docs</code> directory for <code>.meta.yml</code> files, and recursively merges the contents of those files with the metadata (front matter) of all pages that are contained in the same folder and all subfolders. For example, if you want to add the tag Example to multiple pages, use:</p> .meta.yml<pre><code>tags:\n  - Example\n</code></pre> <p>Now, given the following directory layout, if you store the file in the folder named <code>example</code>, all pages in that folder receive the tag, while all pages outside of the folder remain unaffected:</p> <pre><code>.\n\u251c\u2500 docs/\n\u2502  \u251c\u2500 ...\n\u2502  \u251c\u2500 example/\n\u2502  \u2502  \u251c\u2500 .meta.yml\n\u2502  \u2502  \u251c\u2500 a.md\n\u2502  \u2502  \u251c\u2500 ...\n\u2502  \u2502  \u2514\u2500 z.md\n\u2502  \u2514\u2500 ...\n\u2514\u2500 mkdocs.yml\n</code></pre> <p>When combining metadata, lists and dictionaries are recursively merged, which means you can append values to a list and add or set specific properties in a dictionary on arbitrary levels.</p>"},{"location":"plugins/meta/#when-to-use-it","title":"When to use it","text":"<p>While the plugin itself doesn't offer much functionality beyond adding and merging metadata, it is a perfect companion for many of the other built-in plugins that Material for MkDocs offers. Some of the most powerful combinations of the meta plugin and other built-in plugins are:</p> <ul> <li> <p> Built-in social plugin</p> <p>The meta plugin can be used to change the layout for social cards or change specific layout options like background or color for a subset of pages.</p> .meta.yml<pre><code>social:\n  cards_layout: default/variant\n</code></pre> </li> <li> <p> Built-in blog plugin</p> <p>The meta plugin allows to automatically associate blog posts with specific authors and categories, ensuring that blog posts are always correctly annotated.</p> .meta.yml<pre><code>authors:\n  - squidfunk\n</code></pre> </li> <li> <p> Built-in tags plugin</p> <p>The meta plugin makes it possible to ensure that subsections of your project are annotated with specific tags, so they can't be forgotten when adding pages.</p> .meta.yml<pre><code>tags:\n  - Example\n</code></pre> </li> <li> <p> Built-in search plugin</p> <p>The meta plugin makes it easy to boost specific sections in search results or to exclude them entirely from being indexed, giving more granular control over search.</p> .meta.yml<pre><code>search:\n  exclude: true\n</code></pre> </li> </ul>"},{"location":"plugins/meta/#configuration","title":"Configuration","text":"<p>9.6.0 meta \u2013 built-in </p> <p>As with all built-in plugins, getting started with the meta plugin is straightforward. Just add the following lines to <code>mkdocs.yml</code>, and start applying metadata for multiple pages at once:</p> <pre><code>plugins:\n  - meta\n</code></pre> <p>The meta plugin is included with Material for MkDocs and doesn't need to be installed.</p>"},{"location":"plugins/meta/#general","title":"General","text":"<p>The following settings are available:</p>"},{"location":"plugins/meta/#config.enabled","title":"<code>enabled</code>","text":"<p>9.6.0 <code>true</code></p> <p>Use this setting to enable or disable the plugin when building your project. It's normally not necessary to specify this setting, but if you want to disable the plugin, use:</p> <pre><code>plugins:\n  - meta:\n      enabled: false\n</code></pre>"},{"location":"plugins/meta/#meta-file","title":"Meta file","text":"<p>The following settings are available for meta files:</p>"},{"location":"plugins/meta/#config.meta_file","title":"<code>meta_file</code>","text":"<p>9.6.0 <code>.meta.yml</code></p> <p>Use this setting to change the meta file name the plugin will look for when scanning the <code>docs</code> directory. It's normally not necessary to change this setting, but if you want to change it, use:</p> <pre><code>plugins:\n  - meta:\n      meta_file: .meta.yml\n</code></pre> <p>The provided path is resolved from the <code>docs</code> directory recursively.</p>"},{"location":"plugins/offline/","title":"Built-in offline plugin","text":"<p>MkDocs is one of the few frameworks that allow to build offline-capable documentation that can be directly viewed by the user \u2013 no server needed. With the offline plugin, you can distribute the <code>site</code> directory as a downloadable <code>.zip</code> file while retaining most interactive functionality.</p>"},{"location":"plugins/offline/#objective","title":"Objective","text":""},{"location":"plugins/offline/#how-it-works","title":"How it works","text":"<p>After building your project, switch to the <code>site</code> directory and open <code>index.html</code> in your browser \u2013 you're now viewing your documentation from your local file system! Most browsers will denote this by showing <code>file://</code> in the address bar. However, you'll realize that the site search is gone.</p> <p>Material for MkDocs offers many interactive features, some of which will not work from the local file system due to the restrictions of modern browsers. More specifically and technically, all calls to the Fetch API will error with a message like:</p> <pre><code>Cross origin requests are only supported for protocol schemes: http, [...]\n</code></pre> <p>While browsers impose those restriction for security reasons, it reduces the interactivity of your project. The offline plugin makes sure that site search keeps working by moving the search index to a JavaScript file, and leveraging @squidfunk's iframe-worker shim.</p> <p>Additionally, the plugin automatically disables the <code>use_directory_urls</code> setting, ensuring that users can open your documentation directly from the local file system.</p> <p>There are some limitations.</p>"},{"location":"plugins/offline/#when-to-use-it","title":"When to use it","text":"<p>As the name already indicates, the plugin should only be used when you're building your project for offline distribution. It's also good to know, that the offline plugin plays nicely with the following other plugins, helping to create even better offline-capable documentation:</p> <ul> <li> <p> Built-in privacy plugin</p> <p>The privacy plugin makes it easy to use external assets when building for offline usage, as it automatically downloads them for distribution with your documentation.</p> <p>Your documentation can work without connectivity to the internet<sup>1</sup></p> </li> <li> <p> Built-in optimize plugin</p> <p>The optimize plugin automatically identifies and optimizes all media files that you reference in your project by using compression and conversion techniques.</p> <p>Your documentation can be distributed as a smaller <code>.zip</code> download</p> </li> </ul>"},{"location":"plugins/offline/#configuration","title":"Configuration","text":"<p>9.0.0 offline \u2013 built-in</p> <p>As with all built-in plugins, getting started with the offline plugin is straightforward. Just add the following lines to <code>mkdocs.yml</code>, and start building offline-capable documentation:</p> <pre><code>plugins:\n  - offline\n</code></pre> <p>The offline plugin is built into Material for MkDocs and doesn't need to be installed.</p>"},{"location":"plugins/offline/#general","title":"General","text":"<p>The following settings are available:</p>"},{"location":"plugins/offline/#config.enabled","title":"<code>enabled</code>","text":"<p>9.0.0 <code>true</code></p> <p>Use this setting to enable or disable the plugin when building your project. If you want to build online- as well as offline-capable documentation, it's a good idea to use an environment variable:</p> <pre><code>plugins:\n  - offline:\n      enabled: !ENV [OFFLINE, false]\n</code></pre>"},{"location":"plugins/offline/#limitations","title":"Limitations","text":"<p>When enabling the offline plugin, make sure to disable the following settings, as they make use of the Fetch API which will error when invoked from the local file system:</p> <ul> <li>Instant loading</li> <li>Site analytics</li> <li>Versioning</li> <li>Comment systems</li> </ul> <ol> <li> <p>You might wonder why the privacy plugin is necessary to build truly offline-capable documentation with the offline plugin. While it's certainly possible to also add support for downloading external assets to the offline plugin, this functionality is already fully implemented in the privacy plugin and is its very raison d'\u00eatre.</p> <p>Material for MkDocs follows a modular approach for its plugin system \u2013 many of the plugins work perfectly together and enhance each others functionalities, allowing to solve complex problems with a few lines of configuration.\u00a0\u21a9</p> </li> </ol>"},{"location":"plugins/optimize/","title":"Built-in optimize plugin","text":"<p>The optimize plugin automatically identifies and optimizes all media files when building your project by using common compression and conversion techniques. As a result, your site loads significantly faster and yields better rankings in search engines.</p> <p> Sponsors only \u2013 this plugin is currently reserved to our awesome sponsors.</p>"},{"location":"plugins/optimize/#objective","title":"Objective","text":""},{"location":"plugins/optimize/#how-it-works","title":"How it works","text":"<p>The plugin scans the <code>docs</code> directory for media files and assets, optimizing them automatically in order to reduce the final size of the <code>site</code> directory. This leads to faster loading times as you ship less bytes to your users, as well as a smaller download for offline-capable documentation.</p> <p>Optimized images are intelligently cached, which is why the plugin will only optimize media files that changed since the last build. This makes it possible to swap out or update images, without having to worry about optimizing them, or even worse, forgetting to do so.</p> <p>In order to optimize media files, a few dependencies need to be available on your system.</p>"},{"location":"plugins/optimize/#when-to-use-it","title":"When to use it","text":"<p>It's generally recommended to use the plugin, as media files are optimized automatically without the need for intervention, ensuring that your site loads as fast as possible. Optimized media files are one of the key components for a high and consistent ranking in search engines.</p> <p>Additionally, the plugin can be combined with other built-in plugins that Material for MkDocs offers, in order to create sophisticated build pipelines tailored to your project:</p> <ul> <li> <p> Built-in privacy plugin</p> <p>The privacy plugin makes it easy to use unoptimized external assets, passing them to the optimize plugin before copying them to the <code>site</code> directory.</p> <p>External media files can be automatically downloaded and optimized</p> </li> <li> <p> Built-in offline plugin</p> <p>The offline plugin adds support for building offline-capable documentation, so you can distribute the <code>site</code> directory as a <code>.zip</code> file that can be downloaded.</p> <p>Your documentation can be distributed as a smaller <code>.zip</code> download</p> </li> </ul>"},{"location":"plugins/optimize/#configuration","title":"Configuration","text":"<p> insiders-4.29.0 optimize \u2013 built-in </p> <p>As with all built-in plugins, getting started with the optimize plugin is straightforward. Just add the following lines to <code>mkdocs.yml</code>, and observe how media files are optimized automatically:</p> <pre><code>plugins:\n  - optimize\n</code></pre> <p>The optimize plugin is built into Material for MkDocs and doesn't need to be installed.</p> <p>However, in order to optimize all media files, it's necessary to install the dependencies for image processing, if they're not already available on your system. The linked guide includes instructions for several operating systems and mentions some alternative environments.</p>"},{"location":"plugins/optimize/#general","title":"General","text":"<p>The following settings are available:</p>"},{"location":"plugins/optimize/#config.enabled","title":"<code>enabled</code>","text":"<p> insiders-4.29.0 <code>true</code></p> <p>Use this setting to enable or disable the plugin when building your project. If you want to disable the plugin, e.g., for local builds, you can use an environment variable in <code>mkdocs.yml</code>:</p> <pre><code>plugins:\n  - optimize:\n      enabled: !ENV [CI, false]\n</code></pre> <p>This configuration enables the plugin only during continuous integration (CI).</p>"},{"location":"plugins/optimize/#config.concurrency","title":"<code>concurrency</code>","text":"<p> insiders-4.29.0 available CPUs - 1</p> <p>With more CPUs available, the plugin can do more work in parallel, and thus complete media file optimization faster. If you want to disable concurrent processing completely, use:</p> <pre><code>plugins:\n  - optimize:\n      concurrency: 1\n</code></pre> <p>By default, the plugin uses all available CPUs - 1 with a minimum of 1.</p>"},{"location":"plugins/optimize/#caching","title":"Caching","text":"<p>The plugin implements an intelligent caching mechanism, ensuring that a media file or asset is only passed through the optimization pipeline when its contents change. If you swap out or update an image, the plugin detects it and updates the optimized version of the media file.</p> <p>The following settings are available for caching:</p>"},{"location":"plugins/optimize/#config.cache","title":"<code>cache</code>","text":"<p> insiders-4.29.0 <code>true</code></p> <p>Use this setting to instruct the plugin to bypass the cache, in order to re-optimize all media files, even though the cache may not be stale. It's normally not necessary to specify this setting, except for when debugging the plugin itself. Caching can be disabled with:</p> <pre><code>plugins:\n  - optimize:\n      cache: false\n</code></pre>"},{"location":"plugins/optimize/#config.cache_dir","title":"<code>cache_dir</code>","text":"<p> insiders-4.29.0 <code>.cache/plugin/optimize</code></p> <p>It is normally not necessary to specify this setting, except for when you want to change the path within your root directory where media files are cached. If you want to change it, use:</p> <pre><code>plugins:\n  - optimize:\n      cache_dir: my/custom/dir\n</code></pre> <p>If you're using multiple instances of the plugin, it can be a good idea to set different cache directories for both instances, so that they don't interfere with each other.</p>"},{"location":"plugins/optimize/#optimization","title":"Optimization","text":"<p>Documentation often makes use of screenshots or diagrams for better visualization of things, both of which are prime candidates for optimization. The plugin automatically optimizes images using pngquant for <code>.png</code> files, and Pillow for <code>.jpg</code> files.</p> <p>The following settings are available for optimization:</p>"},{"location":"plugins/optimize/#config.optimize","title":"<code>optimize</code>","text":"<p> insiders-4.41.0 <code>true</code></p> <p>Use this setting to enable or disable media file optimization. Currently, the plugin's sole purpose is to optimize media files, so it's equivalent to the <code>enabled</code> setting, but in the near future, other features might be added. If you want to disable optimization, use:</p> <pre><code>plugins:\n  - optimize:\n      optimize: false\n</code></pre>"},{"location":"plugins/optimize/#config.optimize_png","title":"<code>optimize_png</code>","text":"<p> insiders-4.29.0 <code>true</code></p> <p>Use this setting to enable or disable the optimization of <code>.png</code> files. It's normally not necessary to specify this setting, but if you want to disable the optimization of <code>.png</code> files, use:</p> <pre><code>plugins:\n  - optimize:\n      optimize_png: false\n</code></pre>"},{"location":"plugins/optimize/#config.optimize_png_speed","title":"<code>optimize_png_speed</code>","text":"<p> insiders-4.29.0 <code>3</code> of <code>1-10</code></p> <p>Use this setting to specify the speed/quality tradeoff that pngquant applies when optimizing <code>.png</code> files. The lower the number, the more aggressively pngquant will try to optimize:</p> Slower smallerFaster larger <pre><code>plugins:\n  - optimize:\n      optimize_png_speed: 1\n</code></pre> <pre><code>plugins:\n  - optimize:\n      optimize_png_speed: 10\n</code></pre> <p>A factor of <code>10</code> has 5% lower quality, but is 8x faster than the default <code>3</code>.</p>"},{"location":"plugins/optimize/#config.optimize_png_strip","title":"<code>optimize_png_strip</code>","text":"<p> insiders-4.29.0 <code>true</code></p> <p>Use this setting to specify whether pngquant should strip optional metadata from <code>.png</code> files that are not required to display the image, e.g., EXIF. If you want to preserve metadata, use:</p> <pre><code>plugins:\n  - optimize:\n      optimize_png_strip: false\n</code></pre>"},{"location":"plugins/optimize/#config.optimize_jpg","title":"<code>optimize_jpg</code>","text":"<p> insiders-4.29.0 <code>true</code></p> <p>Use this setting to enable or disable the optimization of <code>.jpg</code> files. It's normally not necessary to specify this setting, but if you want to disable the optimization of <code>.jpg</code> files, use:</p> <pre><code>plugins:\n  - optimize:\n      optimize_jpg: false\n</code></pre>"},{"location":"plugins/optimize/#config.optimize_jpg_quality","title":"<code>optimize_jpg_quality</code>","text":"<p> insiders-4.29.0 <code>60</code> of <code>0-100</code></p> <p>Use this setting to specify the image quality that Pillow applies when optimizing <code>.jpg</code> files. If the images look blurry, it's a good idea to fine-tune and change this setting:</p> <pre><code>plugins:\n  - optimize:\n      optimize_jpg_quality: 75\n</code></pre>"},{"location":"plugins/optimize/#config.optimize_jpg_progressive","title":"<code>optimize_jpg_progressive</code>","text":"<p> insiders-4.29.0 <code>true</code></p> <p>Use this setting to specify whether Pillow should use progressive encoding when optimizing <code>.jpg</code> files, rendering faster on slow connections. If you want to disable progressive encoding, use:</p> <pre><code>plugins:\n  - optimize:\n      optimize_jpg_progressive: false\n</code></pre>"},{"location":"plugins/optimize/#config.optimize_include","title":"<code>optimize_include</code>","text":"<p> insiders-4.41.0 </p> <p>Use this setting to enable media file optimization for specific directories of your project, e.g., when using multiple instances of the plugin to optimize media files differently:</p> <pre><code>plugins:\n  - optimize:\n      optimize_include:\n        - screenshots/*\n</code></pre> <p>This configuration enables optimization for all media files that are contained in the <code>screenshots</code> folder and its subfolders inside the <code>docs</code> directory.</p>"},{"location":"plugins/optimize/#config.optimize_exclude","title":"<code>optimize_exclude</code>","text":"<p> insiders-4.41.0 </p> <p>Use this setting to disable media file optimization for specific directories of your project, e.g., when using multiple instances of the plugin to optimize media files differently:</p> <pre><code>plugins:\n  - social:\n      optimize_exclude:\n        - vendor/*\n</code></pre> <p>This configuration disables optimization for all media files that are contained in the <code>vendor</code> folder and its subfolders inside the <code>docs</code> directory.</p>"},{"location":"plugins/optimize/#reporting","title":"Reporting","text":"<p>The following settings are available for reporting:</p>"},{"location":"plugins/optimize/#config.print_gain","title":"<code>print_gain</code>","text":"<p> insiders-4.29.0 <code>true</code></p> <p>Use this setting to control whether the plugin should print the number of bytes gained after optimizing each file. If you want to disable this behavior, use:</p> <pre><code>plugins:\n  - optimize:\n      print_gain: false\n</code></pre>"},{"location":"plugins/optimize/#config.print_gain_summary","title":"<code>print_gain_summary</code>","text":"<p> insiders-4.29.0 <code>true</code></p> <p>Use this setting to control whether the plugin should print the total number of bytes gained after optimizing all files. If you want to disable this behavior, use:</p> <pre><code>plugins:\n  - optimize:\n      print_gain_summary: false\n</code></pre>"},{"location":"plugins/privacy/","title":"Built-in privacy plugin","text":"<p>The privacy plugin offers a streamlined solution for automatically self-hosting external assets. With just a single line of configuration, the plugin can automatically identify and download external assets, making GDPR compliance as effortless as it can possibly be.</p>"},{"location":"plugins/privacy/#objective","title":"Objective","text":""},{"location":"plugins/privacy/#how-it-works","title":"How it works","text":"<p>The plugin scans the generated HTML for external assets, i.e., scripts, style sheets, images, and web fonts, downloads them, stores them in the <code>site</code> directory and replaces all references with links to the downloaded copies for effortless self-hosting. For example:</p> <pre><code>&lt;script src=\"https://example.com/script.js\"&gt;&lt;/script&gt;\n</code></pre> <p>This external script is downloaded, and the link is replaced with:</p> <pre><code>&lt;script src=\"assets/external/example.com/script.js\"&gt;&lt;/script&gt;\n</code></pre> <p>Of course, scripts and style sheets can reference further external assets, which is why this process is repeated recursively until no further external assets are detected:</p> <ul> <li>Scripts are scanned for further scripts, style sheets and JSON files</li> <li>Style sheets are scanned for images and web fonts</li> </ul> <p>Additionally, hints like <code>preconnect</code>, used to reduce latency when requesting external assets, are removed from the output, as they're not necessary when self-hosting. After the plugin has done it's work, your project will be free of requests to external services.</p> <p>There are some limitations.</p>"},{"location":"plugins/privacy/#when-to-use-it","title":"When to use it","text":"<p>The plugin was developed to make compliance with the 2018 European General Data Protection Regulation (GDPR) as simple as possible, while retaining the flexibility and power that Material for MkDocs offers, like for example its tight integration with Google Fonts.</p> <p>But, that's only the start. For example, if your project includes a lot of images, enabling the plugin allows to move them outside of your repository, as the plugin will automatically download and store them in the <code>site</code> directory when building your project.</p> <p>Even more interestingly, the plugin can be combined with other built-in plugins that Material for MkDocs offers, in order to create sophisticated build pipelines tailored to your project:</p> <ul> <li> <p> Built-in optimize plugin</p> <p>The optimize plugin allows to optimize all downloaded external assets detected by the privacy plugin by using compression and conversion techniques.</p> <p>External media files are automatically downloaded and optimized</p> </li> <li> <p> Built-in offline plugin</p> <p>The offline plugin adds support for building offline-capable documentation, so you can distribute the <code>site</code> directory as a <code>.zip</code> file that can be downloaded.</p> <p>Your documentation can work without connectivity to the internet</p> </li> </ul>"},{"location":"plugins/privacy/#configuration","title":"Configuration","text":"<p>9.5.0 privacy \u2013 built-in </p> <p>As with all built-in plugins, getting started with the privacy plugin is straightforward. Just add the following lines to <code>mkdocs.yml</code>, and start effortlessly self-hosting external assets:</p> <pre><code>plugins:\n  - privacy\n</code></pre> <p>The privacy plugin is built into Material for MkDocs and doesn't need to be installed.</p>"},{"location":"plugins/privacy/#general","title":"General","text":"<p>The following settings are available:</p>"},{"location":"plugins/privacy/#config.enabled","title":"<code>enabled</code>","text":"<p>9.5.0 <code>true</code></p> <p>Use this setting to enable or disable the plugin when building your project. If you want to disable the plugin, e.g., for local builds, you can use an environment variable in <code>mkdocs.yml</code>:</p> <pre><code>plugins:\n  - privacy:\n      enabled: !ENV [CI, false]\n</code></pre> <p>This configuration enables the plugin only during continuous integration (CI).</p>"},{"location":"plugins/privacy/#config.concurrency","title":"<code>concurrency</code>","text":"<p>9.5.0 available CPUs - 1</p> <p>With more CPUs available, the plugin can do more work in parallel, and thus complete handling of external assets faster. If you want to disable concurrent processing completely, use:</p> <pre><code>plugins:\n  - privacy:\n      concurrency: 1\n</code></pre> <p>By default, the plugin uses all available CPUs - 1 with a minimum of 1.</p>"},{"location":"plugins/privacy/#caching","title":"Caching","text":"<p>The plugin implements an intelligent caching mechanism, ensuring that external assets are only downloaded when they're not already contained in the cache. While the initial build might take some time, it's a good idea to use caching, as it will speed up consecutive builds.</p> <p>The following settings are available for caching:</p>"},{"location":"plugins/privacy/#config.cache","title":"<code>cache</code>","text":"<p>9.5.0 <code>true</code></p> <p>Use this setting to instruct the plugin to bypass the cache, in order to re-schedule downloads for all external assets, even though the cache may not be stale. It's normally not necessary to specify this setting, except for when debugging the plugin itself. Caching can be disabled with:</p> <pre><code>plugins:\n  - privacy:\n      cache: false\n</code></pre>"},{"location":"plugins/privacy/#config.cache_dir","title":"<code>cache_dir</code>","text":"<p>9.5.0 <code>.cache/plugin/privacy</code></p> <p>It is normally not necessary to specify this setting, except for when you want to change the path within your root directory where downloaded copies are cached. If you want to change it, use:</p> <pre><code>plugins:\n  - privacy:\n      cache_dir: my/custom/dir\n</code></pre> <p>If you're using multiple instances of the plugin, it can be a good idea to set different cache directories for both instances, so that they don't interfere with each other.</p>"},{"location":"plugins/privacy/#logging","title":"Logging","text":"<p>The following settings are available for logging:</p>"},{"location":"plugins/privacy/#config.log","title":"<code>log</code>","text":"<p> insiders-4.50.0 <code>true</code></p> <p>Use this setting to control whether the plugin should display log messages when building your site. While not being recommended, you can disable logging with:</p> <pre><code>plugins:\n  - privacy:\n      log: false\n</code></pre>"},{"location":"plugins/privacy/#config.log_level","title":"<code>log_level</code>","text":"<p> insiders-4.50.0 <code>info</code></p> <p>Use this setting to control the log level that the plugin should employ when encountering errors, which requires that the <code>log</code> setting is enabled. The following log levels are available:</p> <code>error</code><code>warn</code><code>info</code><code>debug</code> <pre><code>plugins:\n  - privacy:\n      log_level: error\n</code></pre> <p>Only errors are reported.</p> <pre><code>plugins:\n  - privacy:\n      log_level: warn\n</code></pre> <p>Errors and warnings are reported, terminating the build in <code>strict</code> mode. This includes warnings when symlinks cannot be created due to a lack of permissions on Windows systems (#6550).</p> <pre><code>plugins:\n  - privacy:\n      log_level: info\n</code></pre> <p>Errors, warnings and informational messages are reported, including which assets were successfully downloaded by the plugin.</p> <pre><code>plugins:\n  - privacy:\n      log_level: debug\n</code></pre> <p>All messages are reported, including debug messages, if and only if MkDocs was started with the <code>--verbose</code> flag. Note that this will print a lot of messages and is only useful for debugging.</p>"},{"location":"plugins/privacy/#external-assets","title":"External assets","text":"<p>The following settings are available for external assets:</p>"},{"location":"plugins/privacy/#config.assets","title":"<code>assets</code>","text":"<p>9.5.0 <code>true</code></p> <p>Use this setting to control whether the plugin should download external assets. If you only want the plugin to process external links, you can disable handling of external assets with:</p> <pre><code>plugins:\n  - privacy:\n      assets: false\n</code></pre>"},{"location":"plugins/privacy/#config.assets_fetch","title":"<code>assets_fetch</code>","text":"<p>9.5.0 <code>true</code></p> <p>Use this setting to control whether the plugin should downloads or only report external assets when they're encountered. If you already self-host all external assets, this setting can be used as a safety net to detect links to external assets placed by the author in pages:</p> <pre><code>plugins:\n  - privacy:\n      assets_fetch: true\n</code></pre>"},{"location":"plugins/privacy/#config.assets_fetch_dir","title":"<code>assets_fetch_dir</code>","text":"<p>9.5.0 <code>assets/external</code></p> <p>It is normally not necessary to specify this setting, except for when you want to change the path within the <code>site</code> directory where external assets are stored. If you want to change it, use:</p> <pre><code>plugins:\n  - privacy:\n      assets_fetch_dir: my/custom/dir\n</code></pre> <p>This configuration stores the downloaded copies at <code>my/custom/dir</code> in the <code>site</code> directory.</p>"},{"location":"plugins/privacy/#config.assets_include","title":"<code>assets_include</code>","text":"<p> insiders-4.37.0 </p> <p>Use this setting to enable downloading of external assets for specific origins, e.g., when using multiple instances of the plugin to fine-tune processing of external assets for different origins:</p> <pre><code>plugins:\n  - privacy:\n      assets_include:\n        - unsplash.com/*\n</code></pre>"},{"location":"plugins/privacy/#config.assets_exclude","title":"<code>assets_exclude</code>","text":"<p> insiders-4.37.0 </p> <p>Use this setting to disable downloading of external assets for specific origins, e.g., when using multiple instances of the plugin to fine-tune processing of external assets for different origins:</p> <pre><code>plugins:\n  - privacy:\n      assets_exclude: # (1)!\n        - unpkg.com/mathjax@3/*\n        - giscus.app/*\n</code></pre> <ol> <li> <p>MathJax loads web fonts for typesetting of mathematical content     through relative URLs, and thus cannot be automatically bundled by the     privacy plugin. MathJax can be self-hosted.</p> <p>Giscus, which we recommend to use as a comment system, uses a technique called code-splitting to load only the code that is necessary, which is implemented via relative URLs. Giscus can be self-hosted as well.</p> </li> </ol>"},{"location":"plugins/privacy/#external-links","title":"External links","text":"<p>The following settings are available for external links:</p>"},{"location":"plugins/privacy/#config.links","title":"<code>links</code>","text":"<p> insiders-4.37.0 <code>true</code></p> <p>Use this setting to instruct the plugin to parse and process external links to annotate them for improved security, or to automatically add additional attributes to external links. If you want to disable processing of external links, use:</p> <pre><code>plugins:\n  - privacy:\n      links: false\n</code></pre>"},{"location":"plugins/privacy/#config.links_attr_map","title":"<code>links_attr_map</code>","text":"<p> insiders-4.37.0 </p> <p>Use this setting to specify additional attributes that should be added to external links, for example, to add <code>target=\"_blank\"</code> to all external links so they open in a new tab:</p> <pre><code>plugins:\n  - privacy:\n      links_attr_map:\n        target: _blank\n</code></pre>"},{"location":"plugins/privacy/#config.links_noopener","title":"<code>links_noopener</code>","text":"<p> insiders-4.37.0 <code>true</code></p> <p>It is normally not recommended to change this setting, as it will automatically annotate external links that open in a new window with <code>rel=\"noopener\"</code> for improved security:</p> <pre><code>plugins:\n  - privacy:\n      links_noopener: true\n</code></pre>"},{"location":"plugins/privacy/#limitations","title":"Limitations","text":""},{"location":"plugins/privacy/#dynamic-urls","title":"Dynamic URLs","text":"<p>Dynamically created URLs as part of scripts are not detected, and thus cannot be downloaded automatically, as the plugin does not execute scripts \u2013 it only detects fully qualified URLs for downloading and replacement. In short, don't do this:</p> <pre><code>const host = \"https://example.com\"\nconst path = `${host}/script.js`\n</code></pre> <p>Instead, always use fully qualified URLs:</p> <pre><code>const url =\"https://example.com/script.js\"\n</code></pre>"},{"location":"plugins/privacy/#embedded-html","title":"Embedded HTML","text":"<p>By default, embedded HTML files (e.g. in iframes) are not scanned for external assets. This is a limitation of MkDocs, as it considers <code>.html</code> files to be templates, which must be explicitly listed under <code>extra_templates</code>. Thus, to self-host external assets of an embedded HTML file:</p> <pre><code>extra_templates:\n  - iframe.html\n</code></pre> <p>Note that the path to <code>iframe.html</code> is relative to the <code>docs_dir</code> directory.</p>"},{"location":"plugins/projects/","title":"Built-in projects plugin","text":"<p>The projects plugin adds the ability to split your main project into multiple distinct projects, build them concurrently and preview them together as one. This is particularly useful when creating a multi-language project, but can also be used to split very large projects into smaller parts.</p> <p> Sponsors only \u2013 this plugin is currently reserved to our awesome sponsors.</p>"},{"location":"plugins/projects/#objective","title":"Objective","text":""},{"location":"plugins/projects/#how-it-works","title":"How it works","text":"<p>The plugin scans the configured <code>projects</code> directory for <code>mkdocs.yml</code> files, identifies all nested projects and builds them concurrently. If not configured otherwise, the plugin expects that your project has the following directory layout, e.g. for a multi-language project:</p> <pre><code>.\n\u251c\u2500 docs/\n\u251c\u2500 projects/\n\u2502  \u251c\u2500 en/\n\u2502  \u2502  \u251c\u2500 docs/\n\u2502  \u2502  \u2514\u2500 mkdocs.yml\n\u2502  \u2514\u2500 de/\n\u2502     \u251c\u2500 docs/\n\u2502     \u2514\u2500 mkdocs.yml\n\u2514\u2500 mkdocs.yml\n</code></pre> <p>One of the most useful and interesting features of the plugin is that it allows previewing your site from the main project, while still being able to preview and build each project individually. This is especially useful for multi-language projects.</p> <p>If, when previewing your site, you change a file in one of the projects, the plugin only rebuilds this project and makes sure that MkDocs will also reload the associated files. This also creates the opportunity for splitting your main project into several projects for a better editing experience.</p> <p>There are some limitations, but we're working hard to remove them.</p>"},{"location":"plugins/projects/#when-to-use-it","title":"When to use it","text":"<p>The plugin came into existence because we needed a convenient and scalable method to build our examples repository, which features many self-contained and runnable projects that users can download and use as a basis when bootstrapping a new project or creating a reproduction.</p> <p>When you want to create a multi-language project, or have a very large existing project, you might consider using the plugin, as it makes managing, editing and building more comfortable.</p>"},{"location":"plugins/projects/#configuration","title":"Configuration","text":"<p> insiders-4.38.0 projects \u2013 built-in </p> <p>In order to get started with the projects plugin, just add the following lines to <code>mkdocs.yml</code>, and split your main project into several distinct projects that can be built concurrently:</p> <pre><code>plugins:\n  - projects\n</code></pre> <p>The projects plugin is built into Material for MkDocs and doesn't need to be installed.</p>"},{"location":"plugins/projects/#general","title":"General","text":"<p>The following settings are available:</p>"},{"location":"plugins/projects/#config.enabled","title":"<code>enabled</code>","text":"<p> insiders-4.38.0 <code>true</code></p> <p>Use this setting to enable or disable the plugin when building your project. If you want to disable the plugin, e.g., for local builds, you can use an environment variable in <code>mkdocs.yml</code>:</p> <pre><code>plugins:\n  - projects:\n      enabled: !ENV [CI, false]\n</code></pre> <p>This configuration enables the plugin only during continuous integration (CI).</p>"},{"location":"plugins/projects/#config.concurrency","title":"<code>concurrency</code>","text":"<p> insiders-4.38.0 available CPUs - 1</p> <p>With more CPUs available, the plugin can do more work in parallel, and thus build projects faster. If you want to disable concurrent processing completely, use:</p> <pre><code>plugins:\n  - projects:\n      concurrency: 1\n</code></pre> <p>By default, the plugin uses all available CPUs - 1 with a minimum of 1.</p>"},{"location":"plugins/projects/#caching","title":"Caching","text":"<p>The plugin implements an intelligent caching mechanism, ensuring that a project is only rebuilt when its contents change. While the initial build might take some time, it's a good idea to use caching, as it will speed up consecutive builds.</p> <p>The following settings are available for caching:</p>"},{"location":"plugins/projects/#config.cache","title":"<code>cache</code>","text":"<p> insiders-4.38.0 <code>true</code></p> <p>Use this setting to instruct the plugin to bypass the cache, in order to rebuild all projects, even though the cache may not be stale. It's normally not necessary to specify this setting, except for when debugging the plugin itself. Caching can be disabled with:</p> <pre><code>plugins:\n  - projects:\n      cache: false\n</code></pre>"},{"location":"plugins/projects/#config.cache_dir","title":"<code>cache_dir</code>","text":"<p> insiders-4.38.0 <code>.cache/plugin/projects</code></p> <p>It is normally not necessary to specify this setting, except for when you want to change the path within your root directory where the metadata is cached. If you want to change it, use:</p> <pre><code>plugins:\n  - projects:\n      cache_dir: my/custom/dir\n</code></pre>"},{"location":"plugins/projects/#logging","title":"Logging","text":"<p>The following settings are available for logging:</p>"},{"location":"plugins/projects/#config.log","title":"<code>log</code>","text":"<p> insiders-4.47.0 <code>true</code></p> <p>Use this setting to control whether the plugin should display log messages from projects when building your site. While not being recommended, you can disable logging with:</p> <pre><code>plugins:\n  - projects:\n      log: false\n</code></pre>"},{"location":"plugins/projects/#config.log_level","title":"<code>log_level</code>","text":"<p> insiders-4.47.0 <code>info</code></p> <p>Use this setting to control the log level that the plugin should employ when encountering errors, which requires that the <code>log</code> setting is enabled. The following log levels are available:</p> <code>error</code><code>warn</code><code>info</code><code>debug</code> <pre><code>plugins:\n  - projects:\n      log_level: error\n</code></pre> <p>Only errors are reported.</p> <pre><code>plugins:\n  - projects:\n      log_level: warn\n</code></pre> <p>Errors and warnings are reported, terminating the build in <code>strict</code> mode.</p> <pre><code>plugins:\n  - projects:\n      log_level: info\n</code></pre> <p>Errors, warnings and informational messages are reported.</p> <pre><code>plugins:\n  - projects:\n      log_level: debug\n</code></pre> <p>All messages are reported, including debug messages.</p>"},{"location":"plugins/projects/#projects","title":"Projects","text":"<p>The following settings are available for projects:</p>"},{"location":"plugins/projects/#config.projects","title":"<code>projects</code>","text":"<p> insiders-4.38.0 <code>true</code></p> <p>Use this setting to enable or disable building of projects. Currently, the plugin's sole purpose is to build projects, so it's equivalent to the <code>enabled</code> setting, but in the future, other features might be added. If you want to disable building of projects, use:</p> <pre><code>plugins:\n  - projects:\n      projects: false\n</code></pre>"},{"location":"plugins/projects/#config.projects_dir","title":"<code>projects_dir</code>","text":"<p> insiders-4.38.0 <code>projects</code></p> <p>Use this setting to change the folder where your projects are located. It's normally not necessary to change this setting, but if you want to rename the folder or change its file system location, use:</p> <pre><code>plugins:\n  - projects:\n      projects_dir: projects\n</code></pre> <p>Note that the <code>projects</code> directory is solely used for project organization \u2013 it is not included in project URLs, since projects are automatically hoisted by the plugin.</p> <p>The provided path is resolved from the root directory.</p>"},{"location":"plugins/projects/#config.projects_config_files","title":"<code>projects_config_files</code>","text":"<p> insiders-4.42.0 <code>*/mkdocs.yml</code></p> <p>Use this setting to change the location or name of configuration files the plugin will look for when scanning the <code>projects</code> directory. Adjusting this setting can be necessary when the configuration files are located in subdirectories of projects, e.g. <code>docs/mkdocs.yml</code>:</p> <pre><code>plugins:\n  - projects:\n      projects_config_files: \"**/mkdocs.yml\" # (1)!\n</code></pre> <ol> <li> <p>If all projects share the same location for their configuration files, e.g.,     <code>docs/mkdocs.yml</code>, it's advisable to fully qualify the path, as it's faster     to resolve than a <code>**</code> glob pattern.</p> <pre><code>plugins:\n  - projects:\n      projects_config_files: \"*/docs/mkdocs.yml\"\n</code></pre> <p>This configuration fits the following directory structure, which is quite common for projects using git submodules:</p> <pre><code>.\n\u251c\u2500 docs/\n\u251c\u2500 projects/\n\u2502  \u251c\u2500 git-submodule-a/\n\u2502  \u2502  \u2514\u2500 docs/\n\u2502  \u2502     \u2514\u2500 mkdocs.yml\n\u2502  \u2514\u2500 git-submodule-b/\n\u2502     \u2514\u2500 docs/\n\u2502        \u2514\u2500 mkdocs.yml\n\u2514\u2500 mkdocs.yml\n</code></pre> </li> </ol> <p>The provided path is resolved from the <code>projects</code> directory.</p>"},{"location":"plugins/projects/#config.projects_config_transform","title":"<code>projects_config_transform</code>","text":"<p> insiders-4.42.0 </p> <p>Use this setting to transform the configuration of each project as read from <code>mkdocs.yml</code> before it is built, which allows for adjusting the configuration of each project when building them together, but leave them untouched when building them individually:</p> <pre><code>plugins:\n  - projects:\n      projects_config_transform: !!python/name:projects.transform\n</code></pre> <p>The provided module and function name are looked up in Python's module search path. You need to add your root directory to the search path when building your site, so Python can resolve it. The easiest way is to add the working directory to the <code>PYTHONPATH</code> environment variable:</p> <pre><code>export PYTHONPATH=.\n</code></pre> <p>How to define a configuration transformation function</p> <p>The <code>python/name</code> tag is provided by PyYAML and must point to a valid module and function name within Python's module search path. The plugin passes the <code>project</code> and top-level <code>config</code> objects to the function.</p> <p>As an example, we can inherit the <code>use_directory_urls</code> setting for all projects from the top-level configuration:</p> projects/__init__.py<pre><code>from mkdocs.config.defaults import MkDocsConfig\n\n# Transform project configuration\ndef transform(project: MkDocsConfig, config: MkDocsConfig):\n    project.use_directory_urls = config.use_directory_urls\n</code></pre>"},{"location":"plugins/projects/#hoisting","title":"Hoisting","text":"<p>The following settings are available for hoisting:</p>"},{"location":"plugins/projects/#config.hoisting","title":"<code>hoisting</code>","text":"<p> insiders-4.39.0 <code>true</code></p> <p>Use this setting to enable or disable hoisting of themes files to the main project. If you disable this setting, each project receives a copy of the theme's files, which can be considered redundant:</p> <pre><code>plugins:\n  - projects:\n      hoisting: false\n</code></pre> <p>It's generally advisable to enable hoisting, as it yields faster deployments and faster loading of your project's sites, because the files are the same for all projects and can be deduplicated.</p>"},{"location":"plugins/projects/#limitations","title":"Limitations","text":"<p>The plugin is one of the latest additions to Material for MkDocs, which means it is rather young and has some limitations. We're working hard to remove them, and we're happy to receive feedback and learn about your requirements in #5800. Current limitations are:</p> <ul> <li> <p>Basic multi-language support only: we'll be investigating how to provide   better support for multi-language projects, allowing to easier interlink   projects and switch between them.</p> </li> <li> <p>Separate search indexes and sitemaps: currently, the projects are entirely   separate, which means they will have separate search indexes and sitemaps.</p> </li> </ul>"},{"location":"plugins/search/","title":"Built-in search plugin","text":"<p>The search plugin adds a search bar to the header, allowing users to search your documentation. It's powered by lunr.js, a lightweight full-text search engine for the browser, elimininating the need for external services, and even works when building offline-capable documentation.</p>"},{"location":"plugins/search/#objective","title":"Objective","text":""},{"location":"plugins/search/#how-it-works","title":"How it works","text":"<p>The plugin scans the generated HTML and builds a search index from all pages and sections by extracting the section titles and contents. It preserves some inline formatting like code blocks and lists, but removes all other formatting, so the search index is as small as possible.</p> <p>When a user visits your site, the search index is shipped to the browser, indexed with lunr.js and made available for fast and simple querying \u2013 no server needed. This ensures that the search index is always up to date with your documentation, yielding accurate results.</p>"},{"location":"plugins/search/#when-to-use-it","title":"When to use it","text":"<p>It's generally recommended to use the plugin, as interactive search functionality is a vital part of every good documentation. Additionally, the plugin integrates perfectly with several of the other built-in plugins that Material for MkDocs offers:</p> <ul> <li> <p> Built-in offline plugin</p> <p>The offline plugin adds support for building offline-capable documentation, so you can distribute the <code>site</code> directory as a <code>.zip</code> file that can be downloaded.</p> <p>Your documentation can work without connectivity to the internet</p> </li> <li> <p> Built-in meta plugin</p> <p>The meta plugin makes it easy to boost specific sections in search results or to exclude them entirely from being indexed, giving more granular control over search.</p> <p>Simpler organization and management of search in different subsections</p> </li> </ul>"},{"location":"plugins/search/#configuration","title":"Configuration","text":"<p>9.0.0 search \u2013 built-in</p> <p>As with all built-in plugins, getting started with the search plugin is straightforward. Just add the following lines to <code>mkdocs.yml</code>, and your users will be able to search your documentation:</p> <pre><code>plugins:\n  - search\n</code></pre> <p>The search plugin is built into Material for MkDocs and doesn't need to be installed.</p>"},{"location":"plugins/search/#general","title":"General","text":"<p>The following settings are available:</p>"},{"location":"plugins/search/#config.enabled","title":"<code>enabled</code>","text":"<p>9.3.2 <code>true</code></p> <p>Use this setting to enable or disable the plugin when building your project. It's normally not necessary to specify this setting, but if you want to disable the plugin, use:</p> <pre><code>plugins:\n  - search:\n      enabled: false\n</code></pre>"},{"location":"plugins/search/#search","title":"Search","text":"<p>The following settings are available for search:</p>"},{"location":"plugins/search/#config.lang","title":"<code>lang</code>","text":"<p>9.0.0 </p> <p>Use this setting to specify the language of the search index, enabling stemming support for other languages than English. The default value is automatically computed from the site language, but can be explicitly set to another language or even multiple languages with:</p> Set languageAdd further languages <pre><code>plugins:\n  - search:\n      lang: en\n</code></pre> <pre><code>plugins:\n  - search:\n      lang: # (1)!\n        - en\n        - de\n</code></pre> <ol> <li>Be aware that including support for further languages increases the     base JavaScript payload by around 20kb and by another 15-30kb per     language, all before <code>gzip</code>.</li> </ol> <p>Language support is provided by lunr languages, a collection of language-specific stemmers and stop words for lunr.js maintained by the Open Source community.</p> <p>The following languages are currently supported by lunr languages:</p> <ul> <li><code>ar</code> \u2013 Arabic</li> <li><code>da</code> \u2013 Danish</li> <li><code>de</code> \u2013 German</li> <li><code>du</code> \u2013 Dutch</li> <li><code>en</code> \u2013 English</li> <li><code>es</code> \u2013 Spanish</li> <li><code>fi</code> \u2013 Finnish</li> <li><code>fr</code> \u2013 French</li> <li><code>hi</code> \u2013 Hindi</li> <li><code>hu</code> \u2013 Hungarian</li> <li><code>hy</code> \u2013 Armenian</li> <li><code>it</code> \u2013 Italian</li> <li><code>ja</code> \u2013 Japanese</li> <li><code>kn</code> - Kannada</li> <li><code>ko</code> \u2013 Korean</li> <li><code>no</code> \u2013 Norwegian</li> <li><code>pt</code> \u2013 Portuguese</li> <li><code>ro</code> \u2013 Romanian</li> <li><code>ru</code> \u2013 Russian</li> <li><code>sa</code> \u2013 Sanskrit</li> <li><code>sv</code> \u2013 Swedish</li> <li><code>ta</code> \u2013 Tamil</li> <li><code>te</code> \u2013 Telugu</li> <li><code>th</code> \u2013 Thai</li> <li><code>tr</code> \u2013 Turkish</li> <li><code>vi</code> \u2013 Vietnamese</li> <li><code>zh</code> \u2013 Chinese</li> </ul> <p>If lunr languages doesn't provide support for the selected site language, the plugin falls back to another language that yields the best stemming results. If you discover that the search results are not satisfactory, you can contribute to lunr languages by adding support for your language.</p>"},{"location":"plugins/search/#config.separator","title":"<code>separator</code>","text":"<p>9.0.0 </p> <p>Use this setting to specify the separator used to split words when building the search index on the client side. The default value is automatically computed from the site language, but can also be explicitly set to another value with:</p> <pre><code>plugins:\n  - search:\n      separator: '[\\s\\-,:!=\\[\\]()\"/]+|(?!\\b)(?=[A-Z][a-z])|\\.(?!\\d)|&amp;[lg]t;'\n</code></pre> <p>Separators support positive and negative lookahead assertions, which allows for rather complex expressions that yield precise control over how words are split when building the search index.</p> <p>Broken into its parts, this separator induces the following behavior:</p> Special charactersCase changesVersion stringsHTML/XML tags <pre><code>[\\s\\-,:!=\\[\\]()\"/]+\n</code></pre> <p>The first part of the expression inserts token boundaries for each document before and after whitespace, hyphens, commas, brackets and other special characters. If several of those special characters are adjacent, they are treated as one.</p> <pre><code>(?!\\b)(?=[A-Z][a-z])\n</code></pre> <p>Many programming languages have naming conventions like <code>PascalCase</code> or <code>camelCase</code>. By adding this subexpression to the separator, words are split at case changes, tokenizing the word <code>PascalCase</code> into <code>Pascal</code> and <code>Case</code>.</p> <pre><code>\\.(?!\\d)\n</code></pre> <p>When adding <code>.</code> to the separator, version strings like <code>1.2.3</code> are split into <code>1</code>, <code>2</code> and <code>3</code>, which makes them undiscoverable via search. When using this subexpression, a small lookahead is introduced which will preserve version strings and keep them discoverable.</p> <pre><code>&amp;[lg]t;\n</code></pre> <p>If your documentation includes HTML/XML code examples, you may want to allow users to find specific tag names. Unfortunately, the <code>&lt;</code> and <code>&gt;</code> control characters are encoded in code blocks as <code>&amp;lt;</code> and <code>&amp;gt;</code>. Adding this subexpression to the separator allows for just that.</p>"},{"location":"plugins/search/#config.pipeline","title":"<code>pipeline</code>","text":"<p>9.0.0 </p> <p>Use this setting to specify the pipeline functions that are used to filter and expand tokens after tokenizing them with the <code>separator</code> and before adding them to the search index. The default value is automatically computed from the site language, but can also be explicitly set with:</p> <pre><code>plugins:\n  - search:\n      pipeline:\n        - stemmer\n        - stopWordFilter\n        - trimmer\n</code></pre> <p>The following pipeline functions can be used:</p> <ul> <li><code>stemmer</code> \u2013 Stem tokens to their root form, e.g. <code>running</code> to <code>run</code></li> <li><code>stopWordFilter</code> \u2013 Filter common words according, e.g. <code>a</code>, <code>the</code>, etc.</li> <li><code>trimmer</code> \u2013 Trim whitespace from tokens</li> </ul>"},{"location":"plugins/search/#segmentation","title":"Segmentation","text":"<p>The plugin supports text segmentation of Chinese via jieba, a popular Chinese text segmentation library. Other languages like Japanese and Korean are currently segmented on the client side, but we're considering to move this functionality into the plugin in the future.</p> <p>The following settings are available for segmentation:</p>"},{"location":"plugins/search/#config.jieba_dict","title":"<code>jieba_dict</code>","text":"<p>9.2.0 </p> <p>Use this setting to specify a custom dictionary to be used by jieba for segmenting text, replacing the default dictionary. jieba comes with several dictionaries, which can be used with:</p> <pre><code>plugins:\n  - search:\n      jieba_dict: dict.txt\n</code></pre> <p>The following dictionaries are provided by jieba:</p> <ul> <li>dict.txt.small \u2013 \u5360\u7528\u5185\u5b58\u8f83\u5c0f\u7684\u8bcd\u5178\u6587\u4ef6</li> <li>dict.txt.big \u2013 \u652f\u6301\u7e41\u4f53\u5206\u8bcd\u66f4\u597d\u7684\u8bcd\u5178\u6587\u4ef6</li> </ul> <p>The provided path is resolved from the root directory.</p>"},{"location":"plugins/search/#config.jieba_dict_user","title":"<code>jieba_dict_user</code>","text":"<p>9.2.0 </p> <p>Use this setting to specify an additional user dictionary to be used by jieba for segmenting text, augmenting the default dictionary. User dictionaries are ideal for tuning the segmenter:</p> <pre><code>plugins:\n  - search:\n      jieba_dict_user: user_dict.txt\n</code></pre> <p>The provided path is resolved from the root directory.</p>"},{"location":"plugins/search/#usage","title":"Usage","text":""},{"location":"plugins/search/#metadata","title":"Metadata","text":"<p>The following properties are available:</p>"},{"location":"plugins/search/#meta.search.boost","title":"<code>boost</code>","text":"<p>8.3.0 </p> <p>Use this property to increase or decrease the relevance of a page in the search results, giving more weight to them. Use values above <code>1</code> to rank up and values below <code>1</code> to rank down:</p>  Rank up Rank down <pre><code>---\nsearch:\n  boost: 2 # (1)!\n---\n\n# Page title\n...\n</code></pre> <ol> <li>When boosting pages, always start with low values.</li> </ol> <pre><code>---\nsearch:\n  boost: 0.5\n---\n\n# Page title\n...\n</code></pre>"},{"location":"plugins/search/#meta.search.exclude","title":"<code>exclude</code>","text":"<p>9.0.0 </p> <p>Use this property to exclude a page from the search results. Note that this will not only remove the page, but also all subsections of the page from the search results:</p> <pre><code>---\nsearch:\n  exclude: true\n---\n\n# Page title\n...\n</code></pre>"},{"location":"plugins/social/","title":"Built-in social plugin","text":"<p>The social plugin automatically and intelligently generates beautiful and highly customizable social cards in different layouts for each page of your project, rendering as preview images whenever you or somebody else share a link to your project on social media.</p>"},{"location":"plugins/social/#objective","title":"Objective","text":""},{"location":"plugins/social/#how-it-works","title":"How it works","text":"<p>The plugin automatically generates a customizable social card for each page of your project, which appears as a preview image when sharing a link to your project on social media, without the use of external services and just a single line of configuration.</p> <p>With the use of an efficient image processing library, the plugin allows to define custom layouts for social cards, which can be adapted to match your project's style and branding. While it would technically be much simpler to generate social cards by using a web browser and an automation framework like Puppeteer<sup>1</sup>, it would add further liabilities to your toolchain, with the potential to make build pipelines more complex, much more resource intense, and significantly slower.</p> <p>The generated social cards are cached and stored in the <code>site</code> directory, and thus self-hosted, ensuring that your project doesn't depend on external services. In order to generate social cards images, a few dependencies need to be available on your system.</p>"},{"location":"plugins/social/#when-to-use-it","title":"When to use it","text":"<p>There's one particular case when we don't recommend to use the plugin: when you build offline-capable documentation to offer it as a download. Otherwise, it always makes sense to enable the plugin, as links to your documentation shared on social media will appear much more appealing.</p> <p>Even more interestingly, the plugin can be combined with other built-in plugins that Material for MkDocs offers, in order to create sophisticated build pipelines tailored to your project:</p> <ul> <li> <p> Built-in blog plugin</p> <p>The social plugin automatically generates beautiful and customizable social cards for each post and page, showing as previews on social media.</p> <p>Links to your blog render beautiful social cards when shared on social media</p> </li> <li> <p> Built-in meta plugin</p> <p>The meta plugin can be used to change the layout for social cards or change specific layout options like background or color for a subset of pages.</p> <p>Your documentation can use completely different social cards per section</p> </li> </ul>"},{"location":"plugins/social/#configuration","title":"Configuration","text":"<p>8.5.0 social \u2013 built-in </p> <p>In order to get started with the social plugin, just add the following lines to <code>mkdocs.yml</code>, and observe how Material for MkDocs generates beautiful social cards for you:</p> <pre><code>plugins:\n  - social\n</code></pre> <p>The social plugin is built into Material for MkDocs and doesn't need to be installed.</p> <p>However, in order to generate social card images, it's necessary to install the dependencies for image processing, if they're not already available on your system. The linked guide includes instructions for several operating systems and mentions some alternative environments.</p>"},{"location":"plugins/social/#general","title":"General","text":"<p>The following settings are available:</p>"},{"location":"plugins/social/#config.enabled","title":"<code>enabled</code>","text":"<p>8.5.0 <code>true</code></p> <p>Use this setting to enable or disable the plugin when building your project. If you want to disable the plugin, e.g., for local builds, you can use an environment variable in <code>mkdocs.yml</code>:</p> <pre><code>plugins:\n  - social:\n      enabled: !ENV [CI, false]\n</code></pre> <p>This configuration enables the plugin only during continuous integration (CI).</p>"},{"location":"plugins/social/#config.concurrency","title":"<code>concurrency</code>","text":"<p> insiders-4.33.0 available CPUs - 1</p> <p>With more CPUs available, the plugin can do more work in parallel, and thus complete social card generation faster. If you want to disable concurrent processing completely, use:</p> <pre><code>plugins:\n  - social:\n      concurrency: 1\n</code></pre> <p>By default, the plugin uses all available CPUs - 1 with a minimum of 1.</p>"},{"location":"plugins/social/#caching","title":"Caching","text":"<p>The plugin implements an intelligent caching mechanism, ensuring that social cards are only regenerated when their contents change or they're not already contained in the cache. If any of the variables used in a layout changes, the plugin detects it and regenerates the social card.</p> <p>The following settings are available for caching:</p>"},{"location":"plugins/social/#config.cache","title":"<code>cache</code>","text":"<p> insiders-4.33.0 <code>true</code></p> <p>Use this setting to instruct the plugin to bypass the cache, in order to re-generate social cards for all pages, even though the cache may not be stale. It's normally not necessary to specify this setting, except for when debugging the plugin itself. Caching can be disabled with:</p> <pre><code>plugins:\n  - social:\n      cache: false\n</code></pre>"},{"location":"plugins/social/#config.cache_dir","title":"<code>cache_dir</code>","text":"<p>8.5.0 <code>.cache/plugin/social</code></p> <p>It is normally not necessary to specify this setting, except for when you want to change the path within your root directory where social card images are cached. If you want to change it, use:</p> <pre><code>plugins:\n  - social:\n      cache_dir: my/custom/dir\n</code></pre> <p>If you're using multiple instances of the plugin, it can be a good idea to set different cache directories for both instances, so that they don't interfere with each other.</p>"},{"location":"plugins/social/#logging","title":"Logging","text":"<p>The following settings are available for logging:</p>"},{"location":"plugins/social/#config.log","title":"<code>log</code>","text":"<p> insiders-4.40.2 <code>true</code></p> <p>Use this setting to control whether the plugin should only log errors when generating social cards without terminating the build, e.g., invalid references to icons. To terminate the build, use:</p> <pre><code>plugins:\n  - social:\n      log: false\n</code></pre>"},{"location":"plugins/social/#config.log_level","title":"<code>log_level</code>","text":"<p> insiders-4.40.2 <code>warn</code></p> <p>Use this setting to control the log level that the plugin should employ when encountering errors, which requires that the <code>log</code> setting is enabled. The following log levels are available:</p> <code>warn</code><code>info</code><code>ignore</code> <pre><code>plugins:\n  - social:\n      log_level: warn\n</code></pre> <p>Errors are reported as warnings, terminating the build in <code>strict</code> mode.</p> <pre><code>plugins:\n  - social:\n      log_level: info\n</code></pre> <p>Errors are only reported as informational messages.</p> <pre><code>plugins:\n  - social:\n      log_level: ignore\n</code></pre> <p>Errors are only reported when using the <code>--verbose</code> flag.</p>"},{"location":"plugins/social/#social-cards","title":"Social cards","text":"<p>The following settings are available for social card generation:</p>"},{"location":"plugins/social/#config.cards","title":"<code>cards</code>","text":"<p>8.5.0 <code>true</code></p> <p>Use this setting to enable or disable social card generation. Currently, the plugin's sole purpose is to generate social cards, so it's equivalent to the <code>enabled</code> setting, but in the future, other features might be added. If you want to disable social card generation, use:</p> <pre><code>plugins:\n  - social:\n      cards: false\n</code></pre>"},{"location":"plugins/social/#config.cards_dir","title":"<code>cards_dir</code>","text":"<p>8.5.0 <code>assets/images/social</code></p> <p>It is normally not necessary to specify this setting, except for when you want to change the path within the <code>site</code> directory where social cards are stored. If you want to change it, use:</p> <pre><code>plugins:\n  - social:\n      cards_dir: my/custom/dir\n</code></pre> <p>This configuration stores the generated images at <code>my/custom/dir</code> in the <code>site</code> directory.</p>"},{"location":"plugins/social/#config.cards_layout_dir","title":"<code>cards_layout_dir</code>","text":"<p> insiders-4.33.0 <code>layouts</code></p> <p>If you want to build a custom social card layout, use this setting to change the folder where you store your custom layouts, the default being a folder called <code>layouts</code> in your root directory:</p> <pre><code>plugins:\n  - social:\n      cards_layout_dir: layouts\n</code></pre> <p>The provided path is resolved from the root directory.</p> <p>Where to store custom layouts</p> <p>Our recommendation is to locate the folder outside of the <code>docs</code> directory, to make sure that your custom layouts are not copied to the <code>site</code> directory when building your project, e.g., by adhering to the following directory layout:</p> <pre><code>.\n\u251c\u2500 docs/\n\u2502  \u2514\u2500 *.md\n\u251c\u2500 layouts/\n\u2502  \u2514\u2500 *.yml\n\u2514\u2500 mkdocs.yml\n</code></pre>"},{"location":"plugins/social/#config.cards_layout","title":"<code>cards_layout</code>","text":"<p> insiders-4.33.0 <code>default</code></p> <p>The plugin ships a growing list of <code>default</code> layouts for social cards. If you've created a custom social card layout, you can instruct the plugin to use it exactly as one of the included layouts:</p> <pre><code>plugins:\n  - social:\n      cards_layout: my-custom-layout\n</code></pre> <p>The provided path is resolved from the <code>layouts</code> directory.</p> <p>How custom layouts are resolved</p> <p>By default, the plugin will load your custom layouts from a folder named <code>layouts</code> in your root directory. If your layout is called <code>my-custom-layout</code>, the directory layout must adhere to:</p> <pre><code>.\n\u251c\u2500 docs/\n\u2502  \u2514\u2500 *.md\n\u251c\u2500 layouts/\n\u2502  \u2514\u2500 my-custom-layout.yml\n\u2514\u2500 mkdocs.yml\n</code></pre>"},{"location":"plugins/social/#config.cards_layout_options","title":"<code>cards_layout_options</code>","text":"<p>9.1.10 </p> <p>Use this setting to set options for the layout specified via <code>cards_layout</code> (if the layout supports it), which allows for making layouts easily and entirely configurable:</p> <pre><code>plugins:\n  - social:\n      cards_layout_options:\n        &lt;option&gt;: &lt;value&gt;\n</code></pre> <p>When creating a custom layout, you are completely free in defining which parts of your layout can be parametrized. The <code>default</code> layouts included with the plugin support the following options:</p> <ul> <li><code>background_color</code></li> <li><code>background_image</code></li> <li><code>color</code></li> <li><code>font_family</code></li> <li><code>font_variant</code></li> <li><code>logo</code></li> <li><code>title</code></li> <li><code>description</code></li> </ul>"},{"location":"plugins/social/#config.cards_include","title":"<code>cards_include</code>","text":"<p> insiders-4.35.0 </p> <p>Use this setting to enable social card generation for subsections of your project, e.g., when using multiple instances of the plugin to generate different social cards for different subsections:</p> <pre><code>plugins:\n  - social:\n      cards_include:\n        - blog/*\n</code></pre> <p>This configuration enables social card generation for all pages that are contained in the <code>blog</code> folder and its subfolders inside the <code>docs</code> directory.</p>"},{"location":"plugins/social/#config.cards_exclude","title":"<code>cards_exclude</code>","text":"<p> insiders-4.35.0 </p> <p>Use this setting to disable social card generation for subsections of your project, e.g., when using multiple instances of the plugin to generate different social cards for different subsections:</p> <pre><code>plugins:\n  - social:\n      cards_exclude:\n        - changelog/*\n</code></pre> <p>This configuration disables social card generation for all pages that are contained in the <code>changelog</code> folder and its subfolders inside the <code>docs</code> directory.</p>"},{"location":"plugins/social/#debugging","title":"Debugging","text":"<p>The plugin includes a special mode for debugging layouts, which is very useful when creating custom layouts, as it allows for quicker iteration and better understanding of composition.</p> <p>The following settings are available for debugging:</p>"},{"location":"plugins/social/#config.debug","title":"<code>debug</code>","text":"<p> insiders-4.33.0 <code>false</code></p> <p>Use this setting to enable a special mode for debugging your layout, which renders each layer with a colored outline and its <code>x</code> and <code>y</code> offsets, and overlays a dot grid for alignment, so it's easier to understand how the distinct layers of your layout are composed together:</p> <pre><code>plugins:\n  - social:\n      debug: true\n</code></pre>"},{"location":"plugins/social/#config.debug_on_build","title":"<code>debug_on_build</code>","text":"<p> insiders-4.34.1 <code>false</code></p> <p>By default, the plugin automatically disables <code>debug</code> mode when building your project, so you can be sure that debug overlays are never deployed to production. If you want to change that, use:</p> <pre><code>plugins:\n  - social:\n      debug_on_build: true\n</code></pre> <p>It's normally not necessary to change this setting, as it's just intended to be a safety net.</p>"},{"location":"plugins/social/#config.debug_grid","title":"<code>debug_grid</code>","text":"<p> insiders-4.33.0 <code>true</code></p> <p>When <code>debug</code> mode is enabled, this setting specifies whether a dot grid is rendered on top of all layers, to allow for better alignment. If you want to switch the grid off, use:</p> <pre><code>plugins:\n  - social:\n      debug_grid: false\n</code></pre>"},{"location":"plugins/social/#config.debug_grid_step","title":"<code>debug_grid_step</code>","text":"<p> insiders-4.33.0 <code>32</code></p> <p>Use this setting to specify the step size of the dot grid in pixels, if enabled, which can be useful to create perfectly aligned layers for ideal composition. It you want to change it, use:</p> <pre><code>plugins:\n  - social:\n      debug_grid_step: 64\n</code></pre>"},{"location":"plugins/social/#config.debug_color","title":"<code>debug_color</code>","text":"<p> insiders-4.33.0 <code>grey</code></p> <p>Use this setting to specify the color of the outlines that are added to each layer and the dot grid that is rendered on top of all layers. If you need to change it, use:</p> <pre><code>plugins:\n  - social:\n      debug_color: yellow\n</code></pre> <p>In rare cases, it might be necessary to change this setting if the dot grid or the outlines are hard to distinguish, as the plugin will automatically adjust the color if not explicitly set.</p>"},{"location":"plugins/social/#usage","title":"Usage","text":""},{"location":"plugins/social/#metadata","title":"Metadata","text":"<p>The plugin allows to override a subset of settings through metadata (front matter) in order to customize social card generation, e.g., to set options for the included <code>default</code> layouts for a single page, or even for an entire subsection of your project by leveraging the meta plugin.</p> <p>The following properties are available:</p>"},{"location":"plugins/social/#meta.social.cards","title":"<code>cards</code>","text":"<p> insiders-4.37.0 </p> <p>Use this property to override the <code>cards</code> setting for the given page:</p> <pre><code>---\nsocial:\n  cards: false\n---\n\n# Page title\n...\n</code></pre>"},{"location":"plugins/social/#meta.social.cards_layout","title":"<code>cards_layout</code>","text":"<p> insiders-4.37.0 </p> <p>Use this property to override the <code>cards_layout</code> setting for the given page:</p> <pre><code>---\nsocial:\n  cards_layout: my-custom-layout\n---\n\n# Page title\n...\n</code></pre>"},{"location":"plugins/social/#meta.social.cards_layout_options","title":"<code>cards_layout_options</code>","text":"<p> insiders-4.37.0 </p> <p>Use this property to override the <code>cards_layout_options</code> setting for the given page:</p> <pre><code>---\nsocial:\n  cards_layout_options:\n    background_color: blue             # Change background color\n    background_image: null             # Remove background image\n---\n\n# Page title\n...\n</code></pre> <p>Setting an option to <code>null</code> resets the option.</p>"},{"location":"plugins/social/#layouts","title":"Layouts","text":"<p> insiders-4.33.0</p> <p>While it is possible and simple to build custom layouts, the plugin ships several predefined layouts, all of which are prefixed with <code>default</code>. The following layouts are included:</p> <code>default</code><code>default/variant</code><code>default/accent</code><code>default/invert</code><code>default/only/image</code> <pre><code>plugins:\n  - social:\n      cards_layout: default\n</code></pre> <p></p> <p>This layout sets the following defaults:</p> <ul> <li> <p><code>background_color</code>   \u2013 <code>theme.palette.primary</code></p> </li> <li> <p><code>font_family</code>   \u2013 <code>theme.font.text</code></p> </li> </ul> <pre><code>plugins:\n  - social:\n      cards_layout: default/variant\n</code></pre> <p></p> <p>This layout includes the page icon and sets the following defaults:</p> <ul> <li> <p><code>background_color</code>   \u2013 <code>theme.palette.primary</code></p> </li> <li> <p><code>font_family</code>   \u2013 <code>theme.font.text</code></p> </li> </ul> <pre><code>plugins:\n  - social:\n      cards_layout: default/accent\n</code></pre> <p></p> <p>This layout sets the following defaults:</p> <ul> <li> <p><code>background_color</code>   \u2013 <code>theme.palette.accent</code></p> </li> <li> <p><code>font_family</code>   \u2013 <code>theme.font.text</code></p> </li> </ul> <pre><code>plugins:\n  - social:\n      cards_layout: default/invert\n</code></pre> <p></p> <p>This layout sets the following defaults:</p> <ul> <li> <p><code>color</code>   \u2013 <code>theme.palette.primary</code></p> </li> <li> <p><code>font_family</code>   \u2013 <code>theme.font.text</code></p> </li> </ul> <pre><code>plugins:\n  - social:\n      cards_layout: default/only/image\n      cards_layout_options:\n        background_image: layouts/background.png\n</code></pre> <p>This layout only shows the given background image and scales it to cover.</p> <p>The <code>default</code> layouts are very flexible and comfortable to use, as they replicate the original behavior of the plugin, sourcing default values for all options from other <code>theme</code> settings.</p> <p>The following options are available:</p>"},{"location":"plugins/social/#option.background_color","title":"<code>background_color</code>","text":"<p>9.1.10 </p> <p>Use this option to change the background color of the generated social card. The value can be set to a valid color value supported by pillow, the imaging library used for card generation:</p> HexadecimalColor functionColor name <pre><code>plugins:\n  - social:\n      cards_layout_options:\n        background_color: \"#ff1493\" # (1)!\n</code></pre> <ol> <li> <p>The following notations are supported, whereas each character after the     <code>#</code> must be a valid hexadecimal in the range <code>0-F</code>:</p> <ul> <li><code>#rgb</code> \u2013 Color (short)</li> <li><code>#rgba</code> \u2013 Color + alpha (short)</li> <li><code>#rrggbb</code> \u2013 Color</li> <li><code>#rrggbbaa</code> \u2013 Color + alpha</li> </ul> </li> </ol> <pre><code>plugins:\n  - social:\n      cards_layout_options:\n        background_color: rgb(255, 20, 147) # (1)!\n</code></pre> <ol> <li> <p>The following functions are supported, listing the allowed maximum     values with the minimum values all being <code>0</code> or <code>0%</code>:</p> <ul> <li><code>rgb(255, 255, 255)</code> \u2013 Red, green and blue</li> <li><code>hsl(360, 100%, 100%)</code> \u2013 Hue, saturation and lightness</li> <li><code>hsv(360, 100%, 100%)</code> \u2013 Hue, saturation and value</li> </ul> </li> </ol> <pre><code>plugins:\n  - social:\n      cards_layout_options:\n        background_color: deeppink # (1)!\n</code></pre> <ol> <li>See the <code>&lt;named-color&gt;</code> CSS data type for a list of     supported color names. Note that some might not be available.</li> </ol> <p>If this options is used together with <code>background_image</code>, the color is rendered on top of the image which allows for tinting images. If you want to remove the background color, use:</p> <pre><code>plugins:\n  - social:\n      cards_layout_options:\n        background_color: transparent\n</code></pre>"},{"location":"plugins/social/#option.background_image","title":"<code>background_image</code>","text":"<p> insiders-4.33.0 </p> <p>Use this option to define a background image for the generated social card. Note that the image is tinted with the <code>background_color</code>, which can also be set to <code>transparent</code>:</p> ImageImage with tint <pre><code>plugins:\n  - social:\n      cards_layout_options:\n        background_image: layouts/background.png\n        background_color: transparent\n</code></pre> <pre><code>plugins:\n  - social:\n      cards_layout_options:\n        background_image: layouts/background.png\n        background_color: \"#ff149366\"\n</code></pre> <p>The provided path is resolved from the root directory.</p>"},{"location":"plugins/social/#option.color","title":"<code>color</code>","text":"<p>9.1.10 </p> <p>Use this option to change the foreground color of the generated social card. The value can be set to a valid color value supported by pillow, the imaging library used for card generation:</p> HexadecimalColor functionColor name <pre><code>plugins:\n  - social:\n      cards_layout_options:\n        color: \"#ffffff\" # (1)!\n</code></pre> <ol> <li> <p>The following notations are supported, whereas each character after the     <code>#</code> must be a valid hexadecimal in the range <code>0-F</code>:</p> <ul> <li><code>#rgb</code> \u2013 Color (short)</li> <li><code>#rgba</code> \u2013 Color + alpha (short)</li> <li><code>#rrggbb</code> \u2013 Color</li> <li><code>#rrggbbaa</code> \u2013 Color + alpha</li> </ul> </li> </ol> <pre><code>plugins:\n  - social:\n      cards_layout_options:\n        color: rgb(255, 255, 255) # (1)!\n</code></pre> <ol> <li> <p>The following functions are supported, listing the allowed maximum     values with the minimum values all being <code>0</code> or <code>0%</code>:</p> <ul> <li><code>rgb(255, 255, 255)</code> \u2013 Red, green and blue</li> <li><code>hsl(360, 100%, 100%)</code> \u2013 Hue, saturation and lightness</li> <li><code>hsv(360, 100%, 100%)</code> \u2013 Hue, saturation and value</li> </ul> </li> </ol> <pre><code>plugins:\n  - social:\n      cards_layout_options:\n        color: white # (1)!\n</code></pre> <ol> <li>See the <code>&lt;named-color&gt;</code> CSS data type for a list of     supported color names. Note that some might not be available.</li> </ol>"},{"location":"plugins/social/#option.font_family","title":"<code>font_family</code>","text":"<p>9.1.10 </p> <p>Use this option to change the font family of the generated social card. The plugin automatically downloads the font from Google Fonts, so the font must point to an existing Google Font:</p> <pre><code>plugins:\n  - social:\n      cards_layout_options:\n        font_family: Ubuntu\n</code></pre> <p>When you've found a font that you like on Google Fonts, you can just copy the name from the font's specimen page and use it as the value for this option \u2013 no further configuration needed.</p>"},{"location":"plugins/social/#option.font_variant","title":"<code>font_variant</code>","text":"<p> insiders-4.53.3 </p> <p>Use this option to change the font variant used to generate the social card. If the downloaded font has variants like <code>Condensed</code> or <code>Expanded</code>, you can set them with:</p> <pre><code>plugins:\n  - social:\n      cards_layout_options:\n        font_variant: Condensed\n</code></pre> <p>The variant is combined with the style as used in the custom layout, so the plugin is instructed to use combinations like <code>Condensed Regular</code> or <code>Expanded Bold</code>.</p>"},{"location":"plugins/social/#option.logo","title":"<code>logo</code>","text":"<p> insiders-4.40.0 </p> <p>Use this option to change the logo that is used in the generated social card. By default, the plugin uses the <code>theme.logo</code> or <code>theme.icon.logo</code> setting from <code>mkdocs.yml</code>. You can change it with:</p> <pre><code>plugins:\n  - social:\n      cards_layout_options:\n        logo: layouts/logo.png\n</code></pre> <p>The provided path is resolved from the root directory.</p>"},{"location":"plugins/social/#option.title","title":"<code>title</code>","text":"<p> insiders-4.40.0 </p> <p>Use this option to change the title of the generated social card. This overrides the computed page title as assigned by MkDocs, as well as the <code>title</code> metadata property:</p> <pre><code>plugins:\n  - social:\n      cards_layout_options:\n        title: My custom title\n</code></pre>"},{"location":"plugins/social/#option.description","title":"<code>description</code>","text":"<p> insiders-4.40.0 </p> <p>Use this option to change the description of the generated social card. This overrides the set <code>site_description</code>, if defined, as well as the <code>description</code> metadata property:</p> <pre><code>plugins:\n  - social:\n      cards_layout_options:\n        description: My custom description\n</code></pre> <p>Missing something?</p> <p>When setting up social cards, you might discover that you're missing specific functionality \u2013 we're happy to consider adding it to the plugin! You can open a discussion to ask a question, or create a change request on our issue tracker, so we can find out if it might be a good fit for the plugin.</p> <ol> <li> <p>GitHub wrote in their blog that they use Puppeteer to generate social card images for repositories, issues, commits, discussions, and basically everything else that appear as preview images when shared on social media.\u00a0\u21a9</p> </li> </ol>"},{"location":"plugins/tags/","title":"Built-in tags plugin","text":"<p>The tags plugin adds first-class support for categorizing pages with the use of tags, adding the possibility to group related pages and make them discoverable via search and dedicated tags indexes. If your documentation is large, tags can help to discover relevant information faster.</p>"},{"location":"plugins/tags/#objective","title":"Objective","text":""},{"location":"plugins/tags/#how-it-works","title":"How it works","text":"<p>The plugin scans all pages for the <code>tags</code> metadata property and generates a tags index, which is an inverted list of tags and the pages they appear on. The tags index can be located anywhere in the <code>nav</code>, allowing for maximum flexibility when adding tags to your project.</p>"},{"location":"plugins/tags/#when-to-use-it","title":"When to use it","text":"<p>If you want to add one or multiple tags indexes to your project, the tags plugin is a perfect choice as it makes this process ridiculously simple. Additionally, it integrates perfectly with several of the other built-in plugins that Material for MkDocs offers:</p> <ul> <li> <p> Built-in meta plugin</p> <p>The meta plugin makes it possible to ensure that subsections of your project are annotated with specific tags, so they can't be forgotten when adding pages.</p> <p>Simpler organization and management of tags in different subsections</p> </li> <li> <p> Built-in blog plugin</p> <p>The tags plugin allows to categorize posts alongside with pages in your project, to improve their discoverability and connect posts to your documentation.</p> <p>Your documentation's tag system integrates with your blog</p> </li> </ul>"},{"location":"plugins/tags/#configuration","title":"Configuration","text":"<p>8.2.0 tags \u2013 built-in </p> <p>As with all built-in plugins, getting started with the tags plugin is straightforward. Just add the following lines to <code>mkdocs.yml</code>, and start using tags to categorize your pages:</p> <pre><code>plugins:\n  - tags\n</code></pre> <p>The tags plugin is built into Material for MkDocs and doesn't need to be installed.</p>"},{"location":"plugins/tags/#general","title":"General","text":"<p>The following settings are available:</p>"},{"location":"plugins/tags/#config.enabled","title":"<code>enabled</code>","text":"<p>9.1.7 <code>true</code></p> <p>Use this setting to enable or disable the plugin when building your project. It's normally not necessary to specify this setting, but if you want to disable the plugin, use:</p> <pre><code>plugins:\n  - tags:\n      enabled: false\n</code></pre>"},{"location":"plugins/tags/#tags","title":"Tags","text":"<p>The following settings are available for tags:</p>"},{"location":"plugins/tags/#config.tags","title":"<code>tags</code>","text":"<p>9.3.2 <code>true</code></p> <p>Use this setting to enable or disable rendering of tags. The plugin still extracts tags from all pages, e.g., for exporting tags without rendering them. Rendering can be disabled with:</p> <pre><code>plugins:\n  - tags:\n      tags: false\n</code></pre> <p>This setting is automatically disabled if <code>export_only</code> is enabled.</p>"},{"location":"plugins/tags/#config.tags_file","title":"<code>tags_file</code>","text":"<p>8.2.0 </p> <p>This setting is deprecated</p> <p>As of version 9.6.0, this setting is deprecated, as this version ships a ground up rewrite of the tags plugin which is much more powerful than the previous version. Tags listings can be used on any page now.</p> <p>Use this setting to specify the location of the tags index, which is the page used to render a list of all tags and their associated pages. If this setting is specified, tags become clickable, pointing to the corresponding section in the tags index:</p> <pre><code>plugins:\n  - tags:\n      tags_file: tags.md\n</code></pre> <p>The page holding the tags index can be linked anywhere in the <code>nav</code> section of <code>mkdocs.yml</code>. This setting is not required \u2013 you should only use it if you want to have a tags index.</p> <p>The provided path is resolved from the <code>docs</code> directory.</p>"},{"location":"plugins/tags/#config.tags_slugify","title":"<code>tags_slugify</code>","text":"<p>9.6.0 <code>pymdownx.slugs.slugify</code></p> <p>Use this setting to change the function for generating URL-compatible slugs from post titles. By default, the <code>slugify</code> function from Python Markdown Extensions is used as follows:</p> <pre><code>plugins:\n  - tags:\n      tags_slugify: !!python/object/apply:pymdownx.slugs.slugify\n        kwds:\n          case: lower\n</code></pre> <p>The default configuration is Unicode-aware and should produce good slugs for all languages. Of course, you can also provide a custom slugification function for more granular control.</p>"},{"location":"plugins/tags/#config.tags_slugify_separator","title":"<code>tags_slugify_separator</code>","text":"<p>9.6.0 <code>-</code></p> <p>Use this setting to change the separator that is passed to the slugification function set as part of <code>tags_slugify</code>. While the default is a hyphen, it can be set to any string, e.g., <code>_</code>:</p> <pre><code>plugins:\n  - tags:\n      tags_slugify_separator: _\n</code></pre>"},{"location":"plugins/tags/#config.tags_slugify_format","title":"<code>tags_slugify_format</code>","text":"<p>9.6.0 <code>tag:{slug}</code></p> <p>Use this setting to change the format string that is used when generating tag slugs. It is a good idea to prefix tag slugs with a string that makes them unique, the default being:</p> <pre><code>plugins:\n  - tags:\n      tags_slugify_format: \"tag:{slug}\"\n</code></pre> <p>The following placeholders are available:</p> <ul> <li><code>slug</code> \u2013 Tag slug, slugified with <code>tags_slugify</code></li> </ul>"},{"location":"plugins/tags/#config.tags_hierarchy","title":"<code>tags_hierarchy</code>","text":"<p> insiders-4.48.0 <code>false</code> </p> <p>Use this setting to enable support for tag hierarchies (nested tags, e.g., <code>foo/bar</code>). If you intend to create hierarchical listings of tags, you can enable this setting in <code>mkdocs.yml</code> with:</p> <pre><code>plugins:\n  - tags:\n      tags_hierarchy: true\n</code></pre>"},{"location":"plugins/tags/#config.tags_hierarchy_separator","title":"<code>tags_hierarchy_separator</code>","text":"<p> insiders-4.48.0 <code>/</code> </p> <p>Use this setting to change the separator that is used when creating tag hierarchies. By default, tags are separated by a forward slash <code>/</code>, but you can change this to any string, e.g., <code>.</code>:</p> <pre><code>plugins:\n  - tags:\n      tags_hierarchy_separator: .\n</code></pre>"},{"location":"plugins/tags/#config.tags_sort_by","title":"<code>tags_sort_by</code>","text":"<p>9.6.0 <code>material.plugins.tags.tag_name</code></p> <p>Use this setting to specify a custom function for comparing tags. By default, tag comparison is case-sensitive, but you can use <code>tag_name_casefold</code> for case-insensitive comparison:</p> <pre><code>plugins:\n  - tags:\n      tags_sort_by: !!python/name:material.plugins.tags.tag_name_casefold\n</code></pre> <p>You can also define your own comparison function, which must return a string or number representing the tag, that is used for sorting, and reference it in <code>tags_sort_by</code>.</p>"},{"location":"plugins/tags/#config.tags_sort_reverse","title":"<code>tags_sort_reverse</code>","text":"<p>9.6.0 <code>false</code></p> <p>Use this setting to reverse the order in which tags are sorted when comparing them. By default, tags are sorted in ascending order, but you can reverse ordering as follows:</p> <pre><code>plugins:\n  - tags:\n      tags_sort_reverse: true\n</code></pre>"},{"location":"plugins/tags/#config.tags_name_property","title":"<code>tags_name_property</code>","text":"<p>9.6.0 <code>tags</code></p> <p>Use this setting to change the name of the front matter property that is used by the plugin. It is normally not necessary to change this setting, but if you want to change it, you can use:</p> <pre><code>plugins:\n  - tags:\n      tags_name_property: tags\n</code></pre>"},{"location":"plugins/tags/#config.tags_name_variable","title":"<code>tags_name_variable</code>","text":"<p>9.6.0 <code>tags</code></p> <p>Use this setting to change the name of the template variable that is used by the plugin. It is normally not necessary to change this setting, but if you want to change it, you can use:</p> <pre><code>plugins:\n  - tags:\n      tags_name_variable: tags\n</code></pre>"},{"location":"plugins/tags/#config.tags_allowed","title":"<code>tags_allowed</code>","text":"<p>9.6.0 </p> <p>The plugin allows to check tags against a predefined list, in order to catch typos or make sure that tags are not arbitrarily added. Specify the tags you want to allow with:</p> <pre><code>plugins:\n  - tags:\n      tags_allowed:\n        - HTML5\n        - JavaScript\n        - CSS\n</code></pre> <p>The plugin stops the build if a page references a tag that is not part of this list. Pages can be assigned to tags by using the <code>tags</code> metadata property.</p>"},{"location":"plugins/tags/#listings","title":"Listings","text":"<p>The following settings are available for listings:</p>"},{"location":"plugins/tags/#config.listings","title":"<code>listings</code>","text":"<p>9.6.0 <code>true</code></p> <p>Use this setting to enable or disable listings. It is normally not necessary to change this setting, as listings are created entirely by inline comments, but you can disable them if necessary with:</p> <pre><code>plugins:\n  - tags:\n      listings: false\n</code></pre> <p>This setting is automatically disabled if <code>export_only</code> is enabled.</p>"},{"location":"plugins/tags/#config.listings_map","title":"<code>listings_map</code>","text":"<p>9.6.0 </p> <p>Use this define listing configurations that you can then reference in listings with a custom identifier. Sharing configurations is a good idea, especially when you have many tag listings:</p> <pre><code>plugins:\n  - tags:\n      listings_map:\n        custom-id:\n          scope: true\n          exclude: Internal\n</code></pre> <p>Then, just reference the listing identifier:</p> <pre><code>&lt;!-- material/tags custom-id --&gt;\n</code></pre> <p>See the listings section for a list of all available settings.</p>"},{"location":"plugins/tags/#config.listings_sort_by","title":"<code>listings_sort_by</code>","text":"<p>9.6.0 <code>material.plugins.tags.item_title</code></p> <p>Use this setting to specify a custom function for comparing listing items. By default, items are ordered by their titles, but you can change the sorting criterion with the following configuration:</p> Sort by item titleSort by item URL <pre><code>plugins:\n  - tags:\n      listings_sort_by: !!python/name:material.plugins.tags.item_title\n</code></pre> <pre><code>plugins:\n  - tags:\n      listings_sort_by: !!python/name:material.plugins.tags.item_url\n</code></pre> <p>You can also define your own comparison function, which must return a string or number representing the item, that is used for sorting, and reference it in <code>listings_sort_by</code>.</p>"},{"location":"plugins/tags/#config.listings_sort_reverse","title":"<code>listings_sort_reverse</code>","text":"<p>9.6.0 <code>false</code></p> <p>Use this setting to reverse the order in which items are sorted when comparing them. By default, items are sorted in ascending order, but you can reverse ordering as follows:</p> <pre><code>plugins:\n  - tags:\n      listings_sort_reverse: true\n</code></pre>"},{"location":"plugins/tags/#config.listings_tags_sort_by","title":"<code>listings_tags_sort_by</code>","text":"<p>9.6.0 <code>material.plugins.tags.tag_name</code></p> <p>Use this setting to specify a custom function for comparing tags in listings. By default, tag comparison is case-sensitive, but you can use <code>tag_name_casefold</code> for case-insensitivity:</p> <pre><code>plugins:\n  - tags:\n      tags_sort_by: !!python/name:material.plugins.tags.tag_name_casefold\n</code></pre> <p>You can also define your own comparison function, which must return a string or number representing the tag, that is used for sorting, and reference it in <code>tags_sort_by</code>.</p>"},{"location":"plugins/tags/#config.listings_tags_sort_reverse","title":"<code>listings_tags_sort_reverse</code>","text":"<p>9.6.0 <code>false</code></p> <p>Use this setting to reverse the order in which tags are sorted when comparing them. By default, tags are sorted in ascending order, but you can reverse ordering as follows:</p> <pre><code>plugins:\n  - tags:\n      tags_sort_reverse: true\n</code></pre>"},{"location":"plugins/tags/#config.listings_directive","title":"<code>listings_directive</code>","text":"<p>9.6.0 <code>material/tags</code></p> <p>Use this setting to change the name of the directive the plugin will look for when processing pages. If you want to use a shorter directive than <code>material/tags</code>, you could use:</p> <pre><code>plugins:\n  - tags:\n      listings_directive: $tags\n</code></pre> <p>Using this setting, listings must now be referenced as such:</p> <pre><code>&lt;!-- $tags { include: [foo, bar] } --&gt;\n</code></pre>"},{"location":"plugins/tags/#config.listings_toc","title":"<code>listings_toc</code>","text":"<p> insiders-4.48.0 <code>true</code></p> <p>Use this setting to enable or disable tags showing up in the table of contents. If you don't want tags to show up in the table of contents, you can disable this behavior with:</p> <pre><code>plugins:\n  - tags:\n      listings_toc: false\n</code></pre>"},{"location":"plugins/tags/#shadow-tags","title":"Shadow tags","text":"<p>The following settings are available for shadow tags:</p>"},{"location":"plugins/tags/#config.shadow","title":"<code>shadow</code>","text":"<p> insiders-4.48.0 <code>false</code></p> <p>Use this setting to specify whether the plugin should include shadow tags on pages and in listings when building your project, which might be useful for deploy previews:</p> Show shadow tagsHide shadow tags <pre><code>plugins:\n  - tags:\n      shadow: true\n</code></pre> <pre><code>plugins:\n  - tags:\n      shadow: false\n</code></pre>"},{"location":"plugins/tags/#config.shadow_on_serve","title":"<code>shadow_on_serve</code>","text":"<p> insiders-4.48.0 <code>true</code></p> <p>Use this setting to control whether the plugin should include shadow tags on pages and in listings when previewing your site. If you don't wish to include them when previewing, use:</p> <pre><code>plugins:\n  - tags:\n      shadow_on_serve: false\n</code></pre>"},{"location":"plugins/tags/#config.shadow_tags","title":"<code>shadow_tags</code>","text":"<p> insiders-4.48.0 </p> <p>The plugin allows to specify a predefined list of shadow tags which can be included and excluded from builds by using the <code>shadow</code> setting. Shadow tags must be specified as a list:</p> <pre><code>plugins:\n  - tags:\n      shadow_tags:\n        - Draft\n        - Internal\n</code></pre>"},{"location":"plugins/tags/#config.shadow_tags_prefix","title":"<code>shadow_tags_prefix</code>","text":"<p> insiders-4.48.0 </p> <p>Use this setting to specify a string that is checked as a prefix for each tag. If the tag starts with this string, the tag is marked as a shadow tag. A common practice is to use <code>_</code> as a prefix:</p> <pre><code>plugins:\n  - tags:\n      shadow_tags_prefix: _\n</code></pre>"},{"location":"plugins/tags/#config.shadow_tags_suffix","title":"<code>shadow_tags_suffix</code>","text":"<p> insiders-4.48.0 </p> <p>Use this setting to specify a string that is checked as a suffix for each tag. If the tag ends with this string, the tag is marked as a shadow tag. One option can be to use <code>Internal</code> as a suffix:</p> <pre><code>plugins:\n  - tags:\n      shadow_tags_suffix: Internal\n</code></pre>"},{"location":"plugins/tags/#export","title":"Export","text":"<p>The following settings are available for exporting:</p>"},{"location":"plugins/tags/#config.export","title":"<code>export</code>","text":"<p> insiders-4.49.0 <code>true</code></p> <p>Use this setting to control whether the plugin creates a <code>tags.json</code> file inside your <code>site</code> directory, which can then be consumed by other plugins and projects:</p> <pre><code>plugins:\n  - tags:\n      export: true\n</code></pre>"},{"location":"plugins/tags/#config.export_file","title":"<code>export_file</code>","text":"<p> insiders-4.49.0 <code>tags.json</code></p> <p>Use this setting to change the path of the file where the exported tags are stored. It's normally not necessary to change this setting, but if you need to, use:</p> <pre><code>plugins:\n  - tags:\n      export_file: tags.json\n</code></pre> <p>The provided path is resolved from the <code>site</code> directory.</p>"},{"location":"plugins/tags/#config.export_only","title":"<code>export_only</code>","text":"<p> insiders-4.49.0 <code>false</code></p> <p>This setting is solely provided for convenience to disable the rendering of tags and listings with a single setting (e.g. by using an environment variable), while keeping the export functionality:</p> <pre><code>plugins:\n  - tags:\n      export_only: true\n</code></pre> <p>This will automatically disable the <code>tags</code> and <code>listings</code> settings.</p>"},{"location":"plugins/tags/#usage","title":"Usage","text":""},{"location":"plugins/tags/#metadata","title":"Metadata","text":"<p>The following properties are available:</p>"},{"location":"plugins/tags/#meta.tags","title":"<code>tags</code>","text":"<p>8.2.0 </p> <p>Use this property to associate a page with one or more tags, making the page appear in the generated tags index. Tags are defined as a list of strings (whitespaces are allowed):</p> <pre><code>---\ntags:\n  - HTML5\n  - JavaScript\n  - CSS\n---\n\n# Page title\n...\n</code></pre> <p>If you want to prevent accidental typos when assigning tags to pages, you can set a predefined list of allowed tags in <code>mkdocs.yml</code> by using the <code>tags_allowed</code> setting.</p>"},{"location":"plugins/tags/#listing-configuration","title":"Listing configuration","text":"<p>The listings configuration controls which tags are included in or excluded from a listing and whether a listing only includes pages in the current scope. Furthermore, listings can override some values from the global configuration.</p> <p>The following settings are available:</p>"},{"location":"plugins/tags/#listing.scope","title":"<code>scope</code>","text":"<p>9.6.0 <code>false</code></p> <p>This setting specifies whether the listing should only consider pages that are within the current subsection of the documentation of the page the listing is embedded in:</p> Inline usageUsage in <code>mkdocs.yml</code> <pre><code>&lt;!-- material/tags { scope: true } --&gt;\n</code></pre> <pre><code>plugins:\n  - tags:\n      listings_map:\n        custom-id:\n          scope: false\n</code></pre> <p>Then, just reference the listing identifier:</p> <pre><code>&lt;!-- material/tags custom-id --&gt;\n</code></pre>"},{"location":"plugins/tags/#listing.shadow","title":"<code>shadow</code>","text":"<p> insiders-4.49.0 </p> <p>This setting specifies whether the listing should include shadow tags, which allows to override the global <code>shadow</code> setting on a per-listing basis:</p> Inline usageUsage in <code>mkdocs.yml</code> <pre><code>&lt;!-- material/tags { shadow: true } --&gt;\n</code></pre> <pre><code>plugins:\n  - tags:\n      listings_map:\n        custom-id:\n          shadow: true\n</code></pre> <p>Then, just reference the listing identifier:</p> <pre><code>&lt;!-- material/tags custom-id --&gt;\n</code></pre>"},{"location":"plugins/tags/#listing.toc","title":"<code>toc</code>","text":"<p> insiders-4.48.0 <code>listings_toc</code></p> <p>This setting specifies whether the listing should render tags inside the table of contents, allowing to override the global <code>listings_toc</code> setting on a per-listing basis:</p> Inline usageUsage in <code>mkdocs.yml</code> <pre><code>&lt;!-- material/tags { toc: true } --&gt;\n</code></pre> <pre><code>plugins:\n  - tags:\n      listings_map:\n        custom-id:\n          toc: true\n</code></pre> <p>Then, just reference the listing identifier:</p> <pre><code>&lt;!-- material/tags custom-id --&gt;\n</code></pre>"},{"location":"plugins/tags/#listing.include","title":"<code>include</code>","text":"<p>9.6.0 </p> <p>Use this setting to specify which tags should be included in the listing. Each page that features a tag that is part of this setting, is listed under the respective tag:</p> Inline usageUsage in <code>mkdocs.yml</code> <pre><code>&lt;!-- material/tags { include: [foo, bar] } --&gt;\n</code></pre> <pre><code>plugins:\n  - tags:\n      listings_map:\n        custom-id:\n          include:\n            - foo\n            - bar\n</code></pre> <p>Then, just reference the listing identifier:</p> <pre><code>&lt;!-- material/tags custom-id --&gt;\n</code></pre> <p>If this setting is left empty, all tags and pages are included.</p>"},{"location":"plugins/tags/#listing.exclude","title":"<code>exclude</code>","text":"<p>9.6.0 </p> <p>Use this setting to specify which tags should be excluded from the listing. Each page that features a tag that is part of this setting, is excluded from the listing entirely:</p> Inline usageUsage in <code>mkdocs.yml</code> <pre><code>&lt;!-- material/tags { exclude: [foo, bar] } --&gt;\n</code></pre> <pre><code>plugins:\n  - tags:\n      listings_map:\n        custom-id:\n          exclude:\n            - foo\n            - bar\n</code></pre> <p>Then, just reference the listing identifier:</p> <pre><code>&lt;!-- material/tags custom-id --&gt;\n</code></pre> <p>If this setting is left empty, no tags or pages are excluded.</p>"},{"location":"plugins/typeset/","title":"Built-in typeset plugin","text":"<p>The typeset plugin allows to preserve the enriched presentation of titles and headlines within the navigation and table of contents. This means that code blocks, icons, emojis and any other inline formatting can be rendered exactly as defined in the page's content.</p> <p> Sponsors only \u2013 this plugin is currently reserved to our awesome sponsors.</p>"},{"location":"plugins/typeset/#objective","title":"Objective","text":""},{"location":"plugins/typeset/#how-it-works","title":"How it works","text":"<p>When building your project, MkDocs extracts the plain text from headlines and drops the original formatting. This is generally useful and a good idea, since this information is made available to other plugins that might have problems when being passed HTML instead of plain text.</p> <p>However, it also means that the entire formatting is lost.</p> <p>The plugin hooks into the rendering process, extracts the original headlines, and makes them available to be used in templates and plugins. The templates of Material for MkDocs use this information to render an enriched version of the navigation and table of contents.</p>"},{"location":"plugins/typeset/#when-to-use-it","title":"When to use it","text":"<p>It's generally recommended to use the plugin, because it is a drop-in solution that doesn't require any configuration and is designed to work out of the box. Since it doesn't overwrite but only adds information, it's not expected to interfere with other plugins.</p>"},{"location":"plugins/typeset/#configuration","title":"Configuration","text":"<p> insiders-4.27.0 typeset \u2013 built-in </p> <p>As with all built-in plugins, getting started with the typeset plugin is straightforward. Just add the following lines to <code>mkdocs.yml</code>, and observe the enriched navigation and table of contents:</p> <pre><code>plugins:\n  - typeset\n</code></pre> <p>The typeset plugin is built into Material for MkDocs and doesn't need to be installed.</p>"},{"location":"plugins/typeset/#general","title":"General","text":"<p>The following settings are available:</p>"},{"location":"plugins/typeset/#config.enabled","title":"<code>enabled</code>","text":"<p> insiders-4.27.0 <code>true</code></p> <p>Use this setting to enable or disable the plugin when building your project. It's normally not necessary to specify this setting, but if you want to disable the plugin, use:</p> <pre><code>plugins:\n  - typeset:\n      enabled: false\n</code></pre>"},{"location":"plugins/requirements/caching/","title":"Caching","text":"<p>Some of the built-in plugins implement intelligent caching mechanisms, which massively speed up consecutive builds by reducing the amount of work that needs to be done. This guide explains how to configure caching in different environments.</p>"},{"location":"plugins/requirements/caching/#prerequisites","title":"Prerequisites","text":"<p>Caching is entirely optional but enabled by default. It can be disabled per plugin. If not configured otherwise, plugins will cache their data in the <code>.cache</code> folder in the root of your project. For this reason it's recommended to create a <code>.gitignore</code> file in the root of your project:</p> .gitignore<pre><code>.cache\n</code></pre> <p>This ensures that cached files are not added to your git repository \u2013 something that is generally not recommended to do unless absolutely necessary. In some cases, you might need to check in cached files, e.g. when you need to pre-generate social cards locally, e.g., when you're not be able to install the image processing dependencies in your continuous integration (CI) environment.</p> <p>In this case, we recommend changing the <code>cache_dir</code> setting \u2013 something that all plugins that implement caching share \u2013 to a folder which you add to your git repository.</p>"},{"location":"plugins/requirements/image-processing/","title":"Image processing","text":"<p>Some of the built-in plugins depend on external libraries for efficient image processing, most notably the social plugin to generate social cards, and the optimize plugin for applying image optimization. This guide explains how to install those libraries in different environments.</p>"},{"location":"plugins/requirements/image-processing/#dependencies","title":"Dependencies","text":"<p>The libraries for image processing are entirely optional, and only need to be installed if you want to use the social plugin or the optimize plugin. The libraries are listed under the <code>imaging</code> extra:</p> <pre><code>pip install \"mkdocs-material[imaging]\"\n</code></pre> <p>This will install compatible versions of the following packages:</p> <ul> <li>Pillow</li> <li>CairoSVG</li> </ul>"},{"location":"plugins/requirements/image-processing/#cairo-graphics","title":"Cairo Graphics","text":"<p>Cairo Graphics is a graphics library and dependency of Pillow, which Material for MkDocs makes use of for generating social cards and performing image optimization. See the following section which explains how to install Cairo Graphics and its dependencies on your system:</p>  macOS Windows Linux <p>Make sure Homebrew is installed, which is a modern package manager for macOS. Next, use the following command to install all necessary dependencies:</p> <pre><code>brew install cairo freetype libffi libjpeg libpng zlib\n</code></pre> <p>The easiest way to get up and running with the Cairo Graphics library is by installing it via MSYS2, which is a software distribution and building platform for Windows. Run the following command inside of a MSYS2 shell:</p> <pre><code>pacman -S mingw-w64-ucrt-x86_64-cairo\n</code></pre> <p>MSYS2 provides the Cairo Graphics library in several different environments. The above command uses the UCRT64 environment, as recommended by the MSYS2 developers.</p> <p>There are several package managers for Linux with varying availability per distribution. The installation guide explains how to install the Cairo Graphics library for your distribution:</p>  Ubuntu Fedora openSUSE <pre><code>apt-get install libcairo2-dev libfreetype6-dev libffi-dev libjpeg-dev libpng-dev libz-dev\n</code></pre> <pre><code>yum install cairo-devel freetype-devel libffi-devel libjpeg-devel libpng-devel zlib-devel\n</code></pre> <pre><code>zypper install cairo-devel freetype-devel libffi-devel libjpeg-devel libpng-devel zlib-devel\n</code></pre> <p>The following environments come with a preinstalled version of Cairo Graphics:</p> <ul> <li> No installation needed in Docker image</li> <li> No installation needed in GitHub Actions (Ubuntu)</li> </ul>"},{"location":"plugins/requirements/image-processing/#pngquant","title":"pngquant","text":"<p>pngquant is an excellent library for lossy PNG compression, and a direct dependency of the built-in optimize plugin. See the following section which explains how to install pngquant system:</p>  macOS Windows Linux <p>Make sure Homebrew is installed, which is a modern package manager for macOS. Next, use the following command to install all necessary dependencies:</p> <pre><code>brew install pngquant\n</code></pre> <p>The easiest way to get pngquant is by installing it via MSYS2, which is a software distribution and building platform for Windows. Run the following command inside of a MSYS2 shell:</p> <pre><code>pacman -S mingw-w64-ucrt-x86_64-pngquant\n</code></pre> <p>All popular Linux distributions, regardless of package manager, should allow to install pngquant with the bundled package manager. For example, on Ubuntu, pngquant can be installed with:</p> <pre><code>apt-get install pngquant\n</code></pre> <p>The same is true for <code>yum</code> and <code>zypper</code>.</p> <p>The following environments come with a preinstalled version of pngquant:</p> <ul> <li> No installation needed in Docker image</li> </ul>"},{"location":"plugins/requirements/image-processing/#troubleshooting","title":"Troubleshooting","text":""},{"location":"plugins/requirements/image-processing/#cairo-library-was-not-found","title":"Cairo library was not found","text":"<p>After following the installation guide above it may happen that you still get the following error:</p> <pre><code>no library called \"cairo-2\" was found\nno library called \"cairo\" was found\nno library called \"libcairo-2\" was found\ncannot load library 'libcairo.so.2': error 0x7e.  Additionally, ctypes.util.find_library() did not manage to locate a library called 'libcairo.so.2'\ncannot load library 'libcairo.2.dylib': error 0x7e.  Additionally, ctypes.util.find_library() did not manage to locate a library called 'libcairo.2.dylib'\ncannot load library 'libcairo-2.dll': error 0x7e.  Additionally, ctypes.util.find_library() did not manage to locate a library called 'libcairo-2.dll'\n</code></pre> <p>This means that the <code>cairosvg</code> package was installed, but the underlying <code>cairocffi</code> dependency couldn't find the installed library. Depending on the operating system the library lookup process is different:</p> <p>Tip</p> <p>Before proceeding remember to fully restart any open Terminal windows, and their parent hosts like IDEs to reload any environmental variables, which were altered during the installation process. This might be the quick fix.</p>  macOS Windows Linux <p>On macOS the library lookup checks inside paths defined in dyld. Additionally each library <code>name</code> is checked in three variants with the <code>libname.dylib</code>, <code>name.dylib</code> and <code>name.framework/name</code> format.</p> <p>Homebrew should set every needed variable to point at the installed library directory, but if that didn't happen, you can use the debug script below to see what paths are looked up.</p> <p>A known workaround is to add the Homebrew lib path directly before running MkDocs:</p> <pre><code>export DYLD_FALLBACK_LIBRARY_PATH=/opt/homebrew/lib\n</code></pre> <p>View source code of cairo-lookup-macos.py</p> Python Debug macOS Script<pre><code>curl \"https://raw.githubusercontent.com/squidfunk/mkdocs-material/master/includes/debug/cairo-lookup-macos.py\" | python -\n</code></pre> <p>On Windows the library lookup checks inside the paths defined in the environmental <code>PATH</code> variable. Additionally each library <code>name</code> is checked in two variants with the <code>name</code> and <code>name.dll</code> format.</p> <p>The default binary and shared library path for the UCRT64 environment of MSYS2, in which the packages were installed using the above commands, is:</p> <pre><code>C:\\msys64\\ucrt64\\bin\n</code></pre> <p>Use the debug script below to check if the path is included. If it isn't then:</p> <ol> <li>Press Win+R.</li> <li>Run the <code>SystemPropertiesAdvanced</code> applet.</li> <li>Select \"Environmental Variables\" at the bottom.</li> <li>Add the whole path to the above directory to your <code>Path</code> variable.</li> <li>Click OK on all open windows to apply changes.</li> <li>Fully restart any open Terminal windows and their parent hosts like IDEs.</li> </ol> You can also list paths using PowerShell<pre><code>$env:Path -split ';'\n</code></pre> <p>View source code of cairo-lookup-windows.py</p> PowerShell - Python Debug Windows Script<pre><code>(Invoke-WebRequest \"https://raw.githubusercontent.com/squidfunk/mkdocs-material/master/includes/debug/cairo-lookup-windows.py\").Content | python -\n</code></pre> <p>On Linux the library lookup can differ greatly and is dependent from the installed distribution. For tested Ubuntu and Manjaro systems Python runs shell commands to check which libraries are available in <code>ldconfig</code>, in the <code>gcc</code>/<code>cc</code> compiler, and in <code>ld</code>.</p> <p>You can extend the <code>LD_LIBRARY_PATH</code> environmental variable with an absolute path to a library directory containing <code>libcairo.so</code> etc. Run this directly before MkDocs:</p> <pre><code>export LD_LIBRARY_PATH=/absolute/path/to/lib:$LD_LIBRARY_PATH\n</code></pre> <p>You can also modify the <code>/etc/ld.so.conf</code> file.</p> <p>The Python script below shows, which function is being run to find installed libraries. You can check the source to find out what specific commands are executed on your system during library lookup.</p> <p>View source code of cairo-lookup-linux.py</p> Python Debug Linux Script<pre><code>curl \"https://raw.githubusercontent.com/squidfunk/mkdocs-material/master/includes/debug/cairo-lookup-linux.py\" | python -\n</code></pre>"},{"location":"reference/","title":"Reference","text":"<p>Material for MkDocs is packed with many great features that make technical writing a joyful activity. This section of the documentation explains how to set up a page, and showcases all available specimen that can be used directly from within Markdown files.</p>"},{"location":"reference/#configuration","title":"Configuration","text":""},{"location":"reference/#usage","title":"Usage","text":""},{"location":"reference/#setting-the-page-title","title":"Setting the page <code>title</code>","text":"<p>Each page has a designated title, which is used in the navigation sidebar, for social cards and in other places. While MkDocs attempts to automatically determine the title of a page in a four step process, the title can also be explicitly set with the front matter <code>title</code> property:</p> <pre><code>---\ntitle: Lorem ipsum dolor sit amet # (1)!\n---\n\n# Page title\n...\n</code></pre> <ol> <li>This line sets the <code>title</code> inside the HTML document's     <code>head</code> for the generated page to the given value. Note that the     site title, which is set via <code>site_name</code>, is appended with a     dash.</li> </ol>"},{"location":"reference/#setting-the-page-description","title":"Setting the page <code>description</code>","text":"<p>A Markdown file can include a description that is added to the <code>meta</code> tags of a page, and is also used for social cards. It's a good idea to set a <code>site_description</code> in <code>mkdocs.yml</code> as a fallback value if the author does not explicitly define a description for a Markdown file:</p> <pre><code>---\ndescription: Nullam urna elit, malesuada eget finibus ut, ac tortor. # (1)!\n---\n\n# Page title\n...\n</code></pre> <ol> <li>This line sets the <code>meta</code> tag containing the description inside the     document <code>head</code> for the current page to the provided value.</li> </ol>"},{"location":"reference/#setting-the-page-icon","title":"Setting the page <code>icon</code>","text":"<p>9.2.0 </p> <p>An icon can be assigned to each page, which is then rendered as part of the navigation sidebar, as well as navigation tabs, if enabled. Use the front matter <code>icon</code> property to reference an icon, adding the following lines at the top of a Markdown file:</p> <pre><code>---\nicon: material/emoticon-happy # (1)!\n---\n\n# Page title\n...\n</code></pre> <ol> <li> <p>Enter a few keywords to find the perfect icon using our icon search and     click on the shortcode to copy it to your clipboard:</p> <p> <ol></ol> </p> </li> </ol>"},{"location":"reference/#setting-the-page-status","title":"Setting the page <code>status</code>","text":"<p>9.2.0 <code>.zip</code> </p> <p>A status can be assigned to each page, which is then displayed as part of the navigation sidebar. First, associate a status identifier with a description by adding the following to <code>mkdocs.yml</code>:</p> <pre><code>extra:\n  status:\n    &lt;identifier&gt;: &lt;description&gt; # (1)!\n</code></pre> <ol> <li> <p>The identifier can only include alphanumeric characters, as well as dashes     and underscores. For example, if you have a status <code>Recently added</code>, you can     set <code>new</code> as an identifier:</p> <pre><code>extra:\n  status:\n    new: Recently added\n</code></pre> </li> </ol> <p>The page status can now be set with the front matter <code>status</code> property. For example, you can mark a page as <code>new</code> with the following lines at the top of a Markdown file:</p> <pre><code>---\nstatus: new\n---\n\n# Page title\n...\n</code></pre> <p>The following status identifiers are already defined:</p> <ul> <li> \u2013 <code>new</code></li> <li> \u2013 <code>deprecated</code></li> </ul> <p>You can define a custom page status this way but if you want it to have an icon other than the default one you need to also configure that in your <code>extra.css</code>. We have an example for a custom page status to get you started.</p>"},{"location":"reference/#setting-the-page-subtitle","title":"Setting the page <code>subtitle</code>","text":"<p>9.6.0 </p> <p>Each page can define a subtitle, which is then rendered below the title as part of the navigation sidebar by using the front matter <code>subtitle</code> property, and adding the following lines:</p> <pre><code>---\nsubtitle: Nullam urna elit, malesuada eget finibus ut, ac tortor\n---\n\n# Page title\n...\n</code></pre>"},{"location":"reference/#setting-the-page-template","title":"Setting the page <code>template</code>","text":"<p>If you're using theme extension and created a new page template in the <code>overrides</code> directory, you can enable it for a specific page. Add the following lines at the top of a Markdown file:</p> <pre><code>---\ntemplate: custom.html\n---\n\n# Page title\n...\n</code></pre> How to set a page template for an entire folder? <p>With the help of the built-in meta plugin, you can set a custom template for an entire section and all nested pages, by creating a <code>.meta.yml</code> file in the corresponding folder with the following content:</p> <pre><code>template: custom.html\n</code></pre>"},{"location":"reference/#customization","title":"Customization","text":""},{"location":"reference/#using-metadata-in-templates","title":"Using metadata in templates","text":""},{"location":"reference/#on-all-pages","title":"on all pages","text":"<p>In order to add custom <code>meta</code> tags to your document, you can extend the theme  and override the <code>extrahead</code> block, e.g. to add indexing policies for search engines via the <code>robots</code> property:</p> <pre><code>{% extends \"base.html\" %}\n\n{% block extrahead %}\n  &lt;meta name=\"robots\" content=\"noindex, nofollow\" /&gt;\n{% endblock %}\n</code></pre>"},{"location":"reference/#on-a-single-page","title":"on a single page","text":"<p>If you want to set a <code>meta</code> tag on a single page, or want to set different values for different pages, you can use the <code>page.meta</code> object inside your template override, e.g.:</p> <pre><code>{% extends \"base.html\" %}\n\n{% block extrahead %}\n  {% if page and page.meta and page.meta.robots %}\n    &lt;meta name=\"robots\" content=\"{{ page.meta.robots }}\" /&gt;\n  {% else %}\n    &lt;meta name=\"robots\" content=\"index, follow\" /&gt;\n  {% endif %}\n{% endblock %}\n</code></pre> <p>You can now use <code>robots</code> exactly like <code>title</code> and <code>description</code> to set values. Note that in this case, the template defines an <code>else</code> branch, which would set a default if none was given.</p>"},{"location":"reference/admonitions/","title":"Admonitions","text":"<p>Admonitions, also known as call-outs, are an excellent choice for including side content without significantly interrupting the document flow. Material for MkDocs provides several different types of admonitions and allows for the inclusion and nesting of arbitrary content.</p>"},{"location":"reference/admonitions/#configuration","title":"Configuration","text":"<p>This configuration enables admonitions, allows to make them collapsible and to nest arbitrary content inside admonitions. Add the following lines to <code>mkdocs.yml</code>:</p> <pre><code>markdown_extensions:\n  - admonition\n  - pymdownx.details\n  - pymdownx.superfences\n</code></pre> <p>See additional configuration options:</p> <ul> <li>Admonition</li> <li>Details</li> <li>SuperFences</li> </ul>"},{"location":"reference/admonitions/#admonition-icons","title":"Admonition icons","text":"<p>8.3.0</p> <p>Each of the supported admonition types has a distinct icon, which can be changed to any icon bundled with the theme, or even a custom icon. Add the following lines to <code>mkdocs.yml</code>:</p> <pre><code>theme:\n  icon:\n    admonition:\n      &lt;type&gt;: &lt;icon&gt; # (1)!\n</code></pre> <ol> <li> <p>Enter a few keywords to find the perfect icon using our icon search and     click on the shortcode to copy it to your clipboard:</p> <p> <ol></ol> </p> </li> </ol> Expand to show alternate icon sets  Octicons FontAwesome <pre><code>theme:\n  icon:\n    admonition:\n      note: octicons/tag-16\n      abstract: octicons/checklist-16\n      info: octicons/info-16\n      tip: octicons/squirrel-16\n      success: octicons/check-16\n      question: octicons/question-16\n      warning: octicons/alert-16\n      failure: octicons/x-circle-16\n      danger: octicons/zap-16\n      bug: octicons/bug-16\n      example: octicons/beaker-16\n      quote: octicons/quote-16\n</code></pre> <pre><code>theme:\n  icon:\n    admonition:\n      note: fontawesome/solid/note-sticky\n      abstract: fontawesome/solid/book\n      info: fontawesome/solid/circle-info\n      tip: fontawesome/solid/bullhorn\n      success: fontawesome/solid/check\n      question: fontawesome/solid/circle-question\n      warning: fontawesome/solid/triangle-exclamation\n      failure: fontawesome/solid/bomb\n      danger: fontawesome/solid/skull\n      bug: fontawesome/solid/robot\n      example: fontawesome/solid/flask\n      quote: fontawesome/solid/quote-left\n</code></pre>"},{"location":"reference/admonitions/#usage","title":"Usage","text":"<p>Admonitions follow a simple syntax: a block starts with <code>!!!</code>, followed by a single keyword used as a type qualifier. The content of the block follows on the next line, indented by four spaces:</p> Admonition<pre><code>!!! note\n\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.\n</code></pre> <p>Note</p> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p>"},{"location":"reference/admonitions/#changing-the-title","title":"Changing the title","text":"<p>By default, the title will equal the type qualifier in titlecase. However, it can be changed by adding a quoted string containing valid Markdown (including links, formatting, ...) after the type qualifier:</p> Admonition with custom title<pre><code>!!! note \"Phasellus posuere in sem ut cursus\"\n\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.\n</code></pre> <p>Phasellus posuere in sem ut cursus</p> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p>"},{"location":"reference/admonitions/#nested-admonitions","title":"Nested admonitions","text":"<p>You can also include nested admonitions in your documentation. To do this, you can use your existing admonitions and indent the desired ones:</p> Nested Admonition<pre><code>!!! note \"Outer Note\"\n\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.\n\n    !!! note \"Inner Note\"\n\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n        nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n        massa, nec semper lorem quam in massa.\n</code></pre> <p>Outer Note</p> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> <p>Inner Note</p> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p>"},{"location":"reference/admonitions/#removing-the-title","title":"Removing the title","text":"<p>Similar to changing the title, the icon and title can be omitted entirely by adding an empty string directly after the type qualifier. Note that this will not work for collapsible blocks:</p> Admonition without title<pre><code>!!! note \"\"\n\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.\n</code></pre> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p>"},{"location":"reference/admonitions/#collapsible-blocks","title":"Collapsible blocks","text":"<p>When Details is enabled and an admonition block is started with <code>???</code> instead of <code>!!!</code>, the admonition is rendered as an expandable block with a small toggle on the right side:</p> Admonition, collapsible<pre><code>??? note\n\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.\n</code></pre> Note <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> <p>Adding a <code>+</code> after the <code>???</code> token renders the block expanded:</p> Admonition, collapsible and initially expanded<pre><code>???+ note\n\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.\n</code></pre> Note <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p>"},{"location":"reference/admonitions/#inline-blocks","title":"Inline blocks","text":"<p>Admonitions can also be rendered as inline blocks (e.g., for sidebars), placing them to the right using the <code>inline</code> + <code>end</code> modifiers, or to the left using only the <code>inline</code> modifier:</p>  inline end inline <p>Lorem ipsum</p> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> <pre><code>!!! info inline end \"Lorem ipsum\"\n\n    Lorem ipsum dolor sit amet, consectetur\n    adipiscing elit. Nulla et euismod nulla.\n    Curabitur feugiat, tortor non consequat\n    finibus, justo purus auctor massa, nec\n    semper lorem quam in massa.\n</code></pre> <p>Use <code>inline end</code> to align to the right (left for rtl languages).</p> <p>Lorem ipsum</p> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> <pre><code>!!! info inline \"Lorem ipsum\"\n\n    Lorem ipsum dolor sit amet, consectetur\n    adipiscing elit. Nulla et euismod nulla.\n    Curabitur feugiat, tortor non consequat\n    finibus, justo purus auctor massa, nec\n    semper lorem quam in massa.\n</code></pre> <p>Use <code>inline</code> to align to the left (right for rtl languages).</p> <p>Important: admonitions that use the <code>inline</code> modifiers must be declared prior to the content block you want to place them beside. If there's insufficient space to render the admonition next to the block, the admonition will stretch to the full width of the viewport, e.g., on mobile viewports.</p>"},{"location":"reference/admonitions/#supported-types","title":"Supported types","text":"<p>Following is a list of type qualifiers provided by Material for MkDocs, whereas the default type, and thus fallback for unknown type qualifiers, is <code>note</code><sup>1</sup>:</p> <code>note</code> <p>Note</p> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> <code>abstract</code> <p>Abstract</p> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> <code>info</code> <p>Info</p> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> <code>tip</code> <p>Tip</p> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> <code>success</code> <p>Success</p> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> <code>question</code> <p>Question</p> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> <code>warning</code> <p>Warning</p> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> <code>failure</code> <p>Failure</p> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> <code>danger</code> <p>Danger</p> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> <code>bug</code> <p>Bug</p> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> <code>example</code> <p>Example</p> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> <code>quote</code> <p>Quote</p> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p>"},{"location":"reference/admonitions/#customization","title":"Customization","text":""},{"location":"reference/admonitions/#classic-admonitions","title":"Classic admonitions","text":"<p>Prior to version 8.5.6, admonitions had a slightly different appearance:</p> <p>Note</p> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> <p>If you want to restore this appearance, add the following CSS to an additional style sheet:</p> <code>docs/stylesheets/extra.css</code> <code>mkdocs.yml</code> <pre><code>.md-typeset .admonition,\n.md-typeset details {\n  border-width: 0;\n  border-left-width: 4px;\n}\n</code></pre> <pre><code>extra_css:\n  - stylesheets/extra.css\n</code></pre>"},{"location":"reference/admonitions/#custom-admonitions","title":"Custom admonitions","text":"<p>If you want to add a custom admonition type, all you need is a color and an <code>*.svg</code> icon. Copy the icon's code from the <code>.icons</code> folder and add the following CSS to an additional style sheet:</p> <code>docs/stylesheets/extra.css</code> <code>mkdocs.yml</code> <pre><code>:root {\n  --md-admonition-icon--pied-piper: url('data:image/svg+xml;charset=utf-8,&lt;svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 576 512\"&gt;&lt;path d=\"M244 246c-3.2-2-6.3-2.9-10.1-2.9-6.6 0-12.6 3.2-19.3 3.7l1.7 4.9zm135.9 197.9c-19 0-64.1 9.5-79.9 19.8l6.9 45.1c35.7 6.1 70.1 3.6 106-9.8-4.8-10-23.5-55.1-33-55.1zM340.8 177c6.6 2.8 11.5 9.2 22.7 22.1 2-1.4 7.5-5.2 7.5-8.6 0-4.9-11.8-13.2-13.2-23 11.2-5.7 25.2-6 37.6-8.9 68.1-16.4 116.3-52.9 146.8-116.7C548.3 29.3 554 16.1 554.6 2l-2 2.6c-28.4 50-33 63.2-81.3 100-31.9 24.4-69.2 40.2-106.6 54.6l-6.3-.3v-21.8c-19.6 1.6-19.7-14.6-31.6-23-18.7 20.6-31.6 40.8-58.9 51.1-12.7 4.8-19.6 10-25.9 21.8 34.9-16.4 91.2-13.5 98.8-10zM555.5 0l-.6 1.1-.3.9.6-.6zm-59.2 382.1c-33.9-56.9-75.3-118.4-150-115.5l-.3-6c-1.1-13.5 32.8 3.2 35.1-31l-14.4 7.2c-19.8-45.7-8.6-54.3-65.5-54.3-14.7 0-26.7 1.7-41.4 4.6 2.9 18.6 2.2 36.7-10.9 50.3l19.5 5.5c-1.7 3.2-2.9 6.3-2.9 9.8 0 21 42.8 2.9 42.8 33.6 0 18.4-36.8 60.1-54.9 60.1-8 0-53.7-50-53.4-60.1l.3-4.6 52.3-11.5c13-2.6 12.3-22.7-2.9-22.7-3.7 0-43.1 9.2-49.4 10.6-2-5.2-7.5-14.1-13.8-14.1-3.2 0-6.3 3.2-9.5 4-9.2 2.6-31 2.9-21.5 20.1L15.9 298.5c-5.5 1.1-8.9 6.3-8.9 11.8 0 6 5.5 10.9 11.5 10.9 8 0 131.3-28.4 147.4-32.2 2.6 3.2 4.6 6.3 7.8 8.6 20.1 14.4 59.8 85.9 76.4 85.9 24.1 0 58-22.4 71.3-41.9 3.2-4.3 6.9-7.5 12.4-6.9.6 13.8-31.6 34.2-33 43.7-1.4 10.2-1 35.2-.3 41.1 26.7 8.1 52-3.6 77.9-2.9 4.3-21 10.6-41.9 9.8-63.5l-.3-9.5c-1.4-34.2-10.9-38.5-34.8-58.6-1.1-1.1-2.6-2.6-3.7-4 2.2-1.4 1.1-1 4.6-1.7 88.5 0 56.3 183.6 111.5 229.9 33.1-15 72.5-27.9 103.5-47.2-29-25.6-52.6-45.7-72.7-79.9zm-196.2 46.1v27.2l11.8-3.4-2.9-23.8zm-68.7-150.4l24.1 61.2 21-13.8-31.3-50.9zm84.4 154.9l2 12.4c9-1.5 58.4-6.6 58.4-14.1 0-1.4-.6-3.2-.9-4.6-26.8 0-36.9 3.8-59.5 6.3z\"/&gt;&lt;/svg&gt;')\n}\n.md-typeset .admonition.pied-piper,\n.md-typeset details.pied-piper {\n  border-color: rgb(43, 155, 70);\n}\n.md-typeset .pied-piper &gt; .admonition-title,\n.md-typeset .pied-piper &gt; summary {\n  background-color: rgba(43, 155, 70, 0.1);\n}\n.md-typeset .pied-piper &gt; .admonition-title::before,\n.md-typeset .pied-piper &gt; summary::before {\n  background-color: rgb(43, 155, 70);\n  -webkit-mask-image: var(--md-admonition-icon--pied-piper);\n          mask-image: var(--md-admonition-icon--pied-piper);\n}\n</code></pre> <pre><code>extra_css:\n  - stylesheets/extra.css\n</code></pre> <p>After applying the customization, you can use the custom admonition type:</p> Admonition with custom type<pre><code>!!! pied-piper \"Pied Piper\"\n\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et\n    euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo\n    purus auctor massa, nec semper lorem quam in massa.\n</code></pre> <p>Pied Piper</p> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> <ol> <li> <p>Previously, some of the supported types defined more than one qualifier. For example, authors could use <code>summary</code> or <code>tldr</code> as alternative qualifiers to render an <code>abstract</code> admonition. As this increased the size of the CSS that is shipped with Material for MkDocs, the additional type qualifiers are now all deprecated and will be removed in the next major version. This will also be mentioned in the upgrade guide.\u00a0\u21a9</p> </li> </ol>"},{"location":"reference/annotations/","title":"Annotations","text":"<p>One of the flagship features of Material for MkDocs is the ability to inject annotations \u2013 little markers that can be added almost anywhere in a document and expand a tooltip containing arbitrary Markdown on click or keyboard focus.</p>"},{"location":"reference/annotations/#configuration","title":"Configuration","text":"<p>This configuration allows to add annotations to all inline- and block-level elements, as well as code blocks, and nest annotations inside each other. Add the following lines to <code>mkdocs.yml</code>:</p> <pre><code>markdown_extensions:\n  - attr_list\n  - md_in_html\n  - pymdownx.superfences\n</code></pre> <p>See additional configuration options:</p> <ul> <li>Attribute Lists</li> <li>Markdown in HTML</li> <li>SuperFences</li> </ul>"},{"location":"reference/annotations/#annotation-icons","title":"Annotation icons","text":"<p>9.2.0</p> <p>The annotation icon can be changed to any icon bundled with the theme, or even a custom icon, e.g. to material/arrow-right-circle:. Simply add the following lines to <code>mkdocs.yml</code>:</p> <pre><code>theme:\n  icon:\n    annotation: material/arrow-right-circle # (1)!\n</code></pre> <ol> <li> <p>Enter a few keywords to find the perfect icon using our icon search and     click on the shortcode to copy it to your clipboard:</p> <p> <ol></ol> </p> </li> </ol> <p>Some popular choices:</p> <ul> <li> - <code>material/plus-circle</code></li> <li> - <code>material/circle-medium</code></li> <li> - <code>material/record-circle</code></li> <li> - <code>material/arrow-right-circle</code></li> <li> - <code>material/arrow-right-circle-outline</code></li> <li> - <code>material/chevron-right-circle</code></li> <li> - <code>material/star-four-points-circle</code></li> <li> - <code>material/plus-circle-outline</code></li> </ul>"},{"location":"reference/annotations/#usage","title":"Usage","text":""},{"location":"reference/annotations/#using-annotations","title":"Using annotations","text":"<p>9.2.0 </p> <p>Annotations consist of two parts: a marker, which can be placed anywhere in a block marked with the <code>annotate</code> class, and content located in a list below the block containing the marker:</p> Text with annotations<pre><code>Lorem ipsum dolor sit amet, (1) consectetur adipiscing elit.\n{ .annotate }\n\n1.  :man_raising_hand: I'm an annotation! I can contain `code`, __formatted\n    text__, images, ... basically anything that can be expressed in Markdown.\n</code></pre> <p>Lorem ipsum dolor sit amet, (1) consectetur adipiscing elit.</p> <ol> <li> I'm an annotation! I can contain <code>code</code>, formatted     text, images, ... basically anything that can be written in Markdown.</li> </ol> <p>Note that the <code>annotate</code> class must only be added to the outermost block. All nested elements can use the same list to define annotations, except when annotations are nested themselves.</p>"},{"location":"reference/annotations/#in-annotations","title":"in annotations","text":"<p>When SuperFences is enabled, annotations can be nested inside annotations by adding the <code>annotate</code> class to the list item hosting the annotation content, repeating the process:</p> Text with nested annotations<pre><code>Lorem ipsum dolor sit amet, (1) consectetur adipiscing elit.\n{ .annotate }\n\n1.  :man_raising_hand: I'm an annotation! (1)\n    { .annotate }\n\n    1.  :woman_raising_hand: I'm an annotation as well!\n</code></pre> <p>Lorem ipsum dolor sit amet, (1) consectetur adipiscing elit.</p> <ol> <li> <p> I'm an annotation! (1)</p> <ol> <li> I'm an annotation as well!</li> </ol> </li> </ol>"},{"location":"reference/annotations/#in-admonitions","title":"in admonitions","text":"<p>The titles and bodies of admonitions can also host annotations by adding the <code>annotate</code> modifier after the type qualifier, which is similar to how inline blocks work:</p> Admonition with annotations<pre><code>!!! note annotate \"Phasellus posuere in sem ut cursus (1)\"\n\n    Lorem ipsum dolor sit amet, (2) consectetur adipiscing elit. Nulla et\n    euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo\n    purus auctor massa, nec semper lorem quam in massa.\n\n1.  :man_raising_hand: I'm an annotation!\n2.  :woman_raising_hand: I'm an annotation as well!\n</code></pre> <p>Phasellus posuere in sem ut cursus (1)</p> <p>Lorem ipsum dolor sit amet, (2) consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> <ol> <li> I'm an annotation!</li> <li> I'm an annotation as well!</li> </ol>"},{"location":"reference/annotations/#in-content-tabs","title":"in content tabs","text":"<p>Content tabs can host annotations by adding the <code>annotate</code> class to the block of a dedicated content tab (and not to the container, which is not supported):</p> Content tabs with annotations<pre><code>=== \"Tab 1\"\n\n    Lorem ipsum dolor sit amet, (1) consectetur adipiscing elit.\n    { .annotate }\n\n    1.  :man_raising_hand: I'm an annotation!\n\n=== \"Tab 2\"\n\n    Phasellus posuere in sem ut cursus (1)\n    { .annotate }\n\n    1.  :woman_raising_hand: I'm an annotation as well!\n</code></pre> Tab 1Tab 2 <p>Lorem ipsum dolor sit amet, (1) consectetur adipiscing elit.</p> <ol> <li> I'm an annotation!</li> </ol> <p>Phasellus posuere in sem ut cursus (1)</p> <ol> <li> I'm an annotation as well!</li> </ol>"},{"location":"reference/annotations/#in-everything-else","title":"in everything else","text":"<p>The Attribute Lists extension is the key ingredient for adding annotations to most elements, but it has some limitations. However, it's always possible to leverage the Markdown in HTML extension to wrap arbitrary elements with a <code>div</code> with the <code>annotate</code> class:</p> HTML with annotations<pre><code>&lt;div class=\"annotate\" markdown&gt;\n\n&gt; Lorem ipsum dolor sit amet, (1) consectetur adipiscing elit.\n\n&lt;/div&gt;\n\n1.  :man_raising_hand: I'm an annotation!\n</code></pre> <p>Lorem ipsum dolor sit amet, (1) consectetur adipiscing elit.</p> <ol> <li> I'm an annotation!</li> </ol> <p>With this trick, annotations can also be added to blockquotes, lists, and many other elements that are not supported by the Attribute Lists extension. Furthermore, note that code blocks follow different semantics.</p> <p>Known limitations</p> <p>Please note that annotations currently don't work in data tables as reported in #3453, as data tables are scrollable elements and positioning is very tricky to get right. This might be fixed in the future.</p>"},{"location":"reference/buttons/","title":"Buttons","text":"<p>Material for MkDocs provides dedicated styles for primary and secondary buttons that can be added to any link, <code>label</code> or <code>button</code> element. This is especially useful for documents or landing pages with dedicated call-to-actions.</p>"},{"location":"reference/buttons/#configuration","title":"Configuration","text":"<p>This configuration allows to add attributes to all inline- and block-level elements with a simple syntax, turning any link into a button. Add the following lines to <code>mkdocs.yml</code>:</p> <pre><code>markdown_extensions:\n  - attr_list\n</code></pre> <p>See additional configuration options:</p> <ul> <li>Attribute Lists</li> </ul>"},{"location":"reference/buttons/#usage","title":"Usage","text":""},{"location":"reference/buttons/#adding-buttons","title":"Adding buttons","text":"<p>In order to render a link as a button, suffix it with curly braces and add the <code>.md-button</code> class selector to it. The button will receive the selected primary color and accent color if active.</p> Button<pre><code>[Subscribe to our newsletter](#){ .md-button }\n</code></pre> <p>Subscribe to our newsletter</p>"},{"location":"reference/buttons/#adding-primary-buttons","title":"Adding primary buttons","text":"<p>If you want to display a filled, primary button (like on the landing page of Material for MkDocs), add both, the <code>.md-button</code> and <code>.md-button--primary</code> CSS class selectors.</p> Button, primary<pre><code>[Subscribe to our newsletter](#){ .md-button .md-button--primary }\n</code></pre> <p>Subscribe to our newsletter</p>"},{"location":"reference/buttons/#adding-icon-buttons","title":"Adding icon buttons","text":"<p>Of course, icons can be added to all types of buttons by using the icon syntax together with any valid icon shortcode, which can be easily found with a few keystrokes through our icon search.</p> Button with icon<pre><code>[Send :fontawesome-solid-paper-plane:](#){ .md-button }\n</code></pre> <p>Send </p>"},{"location":"reference/code-blocks/","title":"Code blocks","text":"<p>Code blocks and examples are an essential part of technical project documentation. Material for MkDocs provides different ways to set up syntax highlighting for code blocks, either during build time using Pygments or during runtime using a JavaScript syntax highlighter.</p>"},{"location":"reference/code-blocks/#configuration","title":"Configuration","text":"<p>This configuration enables syntax highlighting on code blocks and inline code blocks, and allows to include source code directly from other files. Add the following lines to <code>mkdocs.yml</code>:</p> <pre><code>markdown_extensions:\n  - pymdownx.highlight:\n      anchor_linenums: true\n      line_spans: __span\n      pygments_lang_class: true\n  - pymdownx.inlinehilite\n  - pymdownx.snippets\n  - pymdownx.superfences\n</code></pre> <p>The following sections discuss how to use different syntax highlighting features with Pygments, the recommended highlighter, so they don't apply when using a JavaScript syntax highlighter.</p> <p>See additional configuration options:</p> <ul> <li>Highlight</li> <li>InlineHilite</li> <li>SuperFences</li> <li>Snippets</li> </ul>"},{"location":"reference/code-blocks/#code-copy-button","title":"Code copy button","text":"<p>9.0.0 </p> <p>Code blocks can automatically render a button on the right side to allow the user to copy a code block's contents to the clipboard. Add the following to <code>mkdocs.yml</code> to enable them globally:</p> <pre><code>theme:\n  features:\n    - content.code.copy\n</code></pre> Enabling or disabling code copy buttons for a specific code block <p>If you don't want to enable code copy buttons globally, you can enable them for a specific code block by using a slightly different syntax based on the Attribute Lists extension:</p> <pre><code>``` { .yaml .copy }\n# Code block content\n```\n</code></pre> <p>Note that there must be a language shortcode, which has to come first and must also be prefixed by a <code>.</code>. Similarly, the copy button can also be disabled for a specific code block:</p> <pre><code>``` { .yaml .no-copy }\n# Code block content\n```\n</code></pre> <p>To enable or disable the copy button without syntax highlighting, you can use the <code>.text</code> language shortcode, which doesn't highlight anything.</p>"},{"location":"reference/code-blocks/#code-selection-button","title":"Code selection button","text":"<p> insiders-4.32.0 </p> <p>Code blocks can include a button to allow for the selection of line ranges by the user, which is perfect for linking to a specific subsection of a code block. This allows the user to apply line highlighting dynamically. Add the following to <code>mkdocs.yml</code> to enable it globally:</p> <pre><code>theme:\n  features:\n    - content.code.select\n</code></pre> Enabling or disabling code selection buttons for a specific code block <p>If you don't want to enable code selection buttons globally, you can enable them for a specific code block by using a slightly different syntax based on the Attribute Lists extension:</p> <pre><code>``` { .yaml .select }\n# Code block content\n```\n</code></pre> <p>Note that the language shortcode which has to come first must now also be prefixed by a <code>.</code>. Similarly, the selection button can also be disabled for a specific code block:</p> <pre><code>``` { .yaml .no-select }\n# Code block content\n```\n</code></pre>"},{"location":"reference/code-blocks/#code-annotations","title":"Code annotations","text":"<p>8.0.0 </p> <p>Code annotations offer a comfortable and friendly way to attach arbitrary content to specific sections of code blocks by adding numeric markers in block and inline comments in the language of the code block. Add the following to <code>mkdocs.yml</code> to enable them globally:</p> <pre><code>theme:\n  features:\n    - content.code.annotate # (1)!\n</code></pre> <ol> <li> I'm a code annotation! I can contain <code>code</code>, formatted     text, images, ... basically anything that can be written in Markdown.</li> </ol> Enabling code annotations for a specific code block <p>If you don't want to enable code annotations globally, because you don't like the automatic inlining behavior, you can enable them for a specific code block by using a slightly different syntax based on the Attribute Lists extension:</p> <pre><code>``` { .yaml .annotate }\n# Code block content\n```\n</code></pre> <p>Note that the language shortcode which has to come first must now also be prefixed by a <code>.</code>.</p>"},{"location":"reference/code-blocks/#custom-selectors","title":"Custom selectors","text":"<p> insiders-4.32.0 </p> <p>Normally, code annotations can only be placed in comments, as comments can be considered safe for placement. However, sometimes it might be necessary to place annotations in parts of the code block where comments are not allowed, e.g. in strings.</p> <p>Additional selectors can be set per-language:</p> <pre><code>extra:\n  annotate:\n    json: [.s2] # (1)!\n</code></pre> <ol> <li> <p><code>.s2</code> is the name of the lexeme that Pygments generates for double-quoted     strings. If you want to use a code annotation in another lexeme than a     comment, inspect the code block and determine which lexeme needs to be added     to the list of additional selectors.</p> <p>Important: Code annotations cannot be split between lexemes.</p> </li> </ol> <p>Now, code annotations can be used from within strings in JSON:</p> <pre><code>{\n  \"key\": \"value (1)\"\n}\n</code></pre> <ol> <li> I'm a code annotation! I can contain <code>code</code>, formatted     text, images, ... basically anything that can be written in Markdown.</li> </ol>"},{"location":"reference/code-blocks/#usage","title":"Usage","text":"<p>Code blocks must be enclosed with two separate lines containing three backticks. To add syntax highlighting to those blocks, add the language shortcode directly after the opening block. See the list of available lexers to find the shortcode for a given language:</p> Code block<pre><code>``` py\nimport tensorflow as tf\n```\n</code></pre> <pre><code>import tensorflow as tf\n</code></pre>"},{"location":"reference/code-blocks/#adding-a-title","title":"Adding a title","text":"<p>In order to provide additional context, a custom title can be added to a code block by using the <code>title=\"&lt;custom title&gt;\"</code> option directly after the shortcode, e.g. to display the name of a file:</p> Code block with title<pre><code>``` py title=\"bubble_sort.py\"\ndef bubble_sort(items):\n    for i in range(len(items)):\n        for j in range(len(items) - 1 - i):\n            if items[j] &gt; items[j + 1]:\n                items[j], items[j + 1] = items[j + 1], items[j]\n```\n</code></pre> bubble_sort.py<pre><code>def bubble_sort(items):\n    for i in range(len(items)):\n        for j in range(len(items) - 1 - i):\n            if items[j] &gt; items[j + 1]:\n                items[j], items[j + 1] = items[j + 1], items[j]\n</code></pre>"},{"location":"reference/code-blocks/#adding-annotations","title":"Adding annotations","text":"<p>Code annotations can be placed anywhere in a code block where a comment for the language of the block can be placed, e.g. for JavaScript in <code>// ...</code> and <code>/* ... */</code>, for YAML in <code># ...</code>, etc.<sup>1</sup>:</p> Code block with annotation<pre><code>``` yaml\ntheme:\n  features:\n    - content.code.annotate # (1)\n```\n\n1.  :man_raising_hand: I'm a code annotation! I can contain `code`, __formatted\n    text__, images, ... basically anything that can be written in Markdown.\n</code></pre> <pre><code>theme:\n  features:\n    - content.code.annotate # (1)\n</code></pre> <ol> <li> I'm a code annotation! I can contain <code>code</code>, formatted     text, images, ... basically anything that can be written in Markdown.</li> </ol>"},{"location":"reference/code-blocks/#stripping-comments","title":"Stripping comments","text":"<p>8.5.0 </p> <p>If you wish to strip the comment characters surrounding a code annotation, simply add an <code>!</code> after the closing parenthesis of the code annotation:</p> Code block with annotation, stripped<pre><code>``` yaml\n# (1)!\n```\n\n1.  Look ma, less line noise!\n</code></pre> <pre><code># (1)!\n</code></pre> <ol> <li>Look ma, less line noise!</li> </ol> <p>Note that this only allows for a single code annotation to be rendered per comment. If you want to add multiple code annotations, comments cannot be stripped for technical reasons.</p>"},{"location":"reference/code-blocks/#adding-line-numbers","title":"Adding line numbers","text":"<p>Line numbers can be added to a code block by using the <code>linenums=\"&lt;start&gt;\"</code> option directly after the shortcode, whereas <code>&lt;start&gt;</code> represents the starting line number. A code block can start from a line number other than <code>1</code>, which allows to split large code blocks for readability:</p> Code block with line numbers<pre><code>``` py linenums=\"1\"\ndef bubble_sort(items):\n    for i in range(len(items)):\n        for j in range(len(items) - 1 - i):\n            if items[j] &gt; items[j + 1]:\n                items[j], items[j + 1] = items[j + 1], items[j]\n```\n</code></pre> <pre><code>def bubble_sort(items):\n    for i in range(len(items)):\n        for j in range(len(items) - 1 - i):\n            if items[j] &gt; items[j + 1]:\n                items[j], items[j + 1] = items[j + 1], items[j]\n</code></pre>"},{"location":"reference/code-blocks/#highlighting-specific-lines","title":"Highlighting specific lines","text":"<p>Specific lines can be highlighted by passing the line numbers to the <code>hl_lines</code> argument placed right after the language shortcode. Note that line counts start at <code>1</code>, regardless of the starting line number specified as part of <code>linenums</code>:</p> LinesLine ranges Code block with highlighted lines<pre><code>``` py hl_lines=\"2 3\"\ndef bubble_sort(items):\n    for i in range(len(items)):\n        for j in range(len(items) - 1 - i):\n            if items[j] &gt; items[j + 1]:\n                items[j], items[j + 1] = items[j + 1], items[j]\n```\n</code></pre> <pre><code>def bubble_sort(items):\n    for i in range(len(items)):\n        for j in range(len(items) - 1 - i):\n            if items[j] &gt; items[j + 1]:\n                items[j], items[j + 1] = items[j + 1], items[j]\n</code></pre> Code block with highlighted line range<pre><code>``` py hl_lines=\"3-5\"\ndef bubble_sort(items):\n    for i in range(len(items)):\n        for j in range(len(items) - 1 - i):\n            if items[j] &gt; items[j + 1]:\n                items[j], items[j + 1] = items[j + 1], items[j]\n```\n</code></pre> <pre><code>def bubble_sort(items):\n    for i in range(len(items)):\n        for j in range(len(items) - 1 - i):\n            if items[j] &gt; items[j + 1]:\n                items[j], items[j + 1] = items[j + 1], items[j]\n</code></pre>"},{"location":"reference/code-blocks/#highlighting-inline-code-blocks","title":"Highlighting inline code blocks","text":"<p>When InlineHilite is enabled, syntax highlighting can be applied to inline code blocks by prefixing them with a shebang, i.e. <code>#!</code>, directly followed by the corresponding language shortcode.</p> Inline code block<pre><code>The `#!python range()` function is used to generate a sequence of numbers.\n</code></pre> <p>The <code>range()</code> function is used to generate a sequence of numbers.</p>"},{"location":"reference/code-blocks/#embedding-external-files","title":"Embedding external files","text":"<p>When Snippets is enabled, content from other files (including source files) can be embedded by using the <code>--8&lt;--</code> notation directly from within a code block:</p> Code block with external content<pre><code>``` title=\".browserslistrc\"\n--8&lt;-- \".browserslistrc\"\n```\n</code></pre> .browserslistrc<pre><code>last 4 years\n</code></pre>"},{"location":"reference/code-blocks/#customization","title":"Customization","text":""},{"location":"reference/code-blocks/#custom-syntax-theme","title":"Custom syntax theme","text":"<p>If Pygments is used, Material for MkDocs provides the styles for code blocks, which are built with a custom and well-balanced palette that works equally well for both color schemes:</p> <ul> <li> <code>--md-code-hl-number-color</code></li> <li> <code>--md-code-hl-special-color</code></li> <li> <code>--md-code-hl-function-color</code></li> <li> <code>--md-code-hl-constant-color</code></li> <li> <code>--md-code-hl-keyword-color</code></li> <li> <code>--md-code-hl-string-color</code></li> <li> <code>--md-code-hl-name-color</code></li> <li> <code>--md-code-hl-operator-color</code></li> <li> <code>--md-code-hl-punctuation-color</code></li> <li> <code>--md-code-hl-comment-color</code></li> <li> <code>--md-code-hl-generic-color</code></li> <li> <code>--md-code-hl-variable-color</code></li> </ul> <p>Code block foreground, background and line highlight colors are defined via:</p> <ul> <li> <code>--md-code-fg-color</code></li> <li> <code>--md-code-bg-color</code></li> <li> <code>--md-code-hl-color</code></li> </ul> <p>Let's say you want to change the color of <code>\"strings\"</code>. While there are several types of string tokens, they use the same color. You can assign a new color by using an additional style sheet:</p> <code>docs/stylesheets/extra.css</code> <code>mkdocs.yml</code> <pre><code>:root &gt; * {\n  --md-code-hl-string-color: #0FF1CE;\n}\n</code></pre> <pre><code>extra_css:\n  - stylesheets/extra.css\n</code></pre> <p>If you want to tweak a specific type of string, e.g. <code>`backticks`</code>, you can lookup the specific CSS class name in the syntax theme definition, and override it as part of your additional style sheet:</p> <code>docs/stylesheets/extra.css</code> <code>mkdocs.yml</code> <pre><code>.highlight .sb {\n  color: #0FF1CE;\n}\n</code></pre> <pre><code>extra_css:\n  - stylesheets/extra.css\n</code></pre>"},{"location":"reference/code-blocks/#annotation-tooltip-width","title":"Annotation tooltip width","text":"<p>If you have a lot of content hosted inside your code annotations, it can be a good idea to increase the width of the tooltip by adding the following as part of an additional style sheet:</p> <code>docs/stylesheets/extra.css</code> <code>mkdocs.yml</code> <pre><code>:root {\n  --md-tooltip-width: 600px;\n}\n</code></pre> <pre><code>extra_css:\n  - stylesheets/extra.css\n</code></pre> <p>This will render annotations with a larger width:</p> <pre><code># (1)!\n</code></pre> <ol> <li>Muuuuuuuuuuuuuuuch more space for content</li> </ol> <ol> <li> <p>Code annotations require syntax highlighting with Pygments \u2013 they're currently not compatible with JavaScript syntax highlighters, or languages that do not have comments in their grammar. However, we're actively working on supporting alternate ways of defining code annotations, allowing to always place code annotations at the end of lines.\u00a0\u21a9</p> </li> </ol>"},{"location":"reference/content-tabs/","title":"Content tabs","text":"<p>Sometimes, it's desirable to group alternative content under different tabs, e.g. when describing how to access an API from different languages or environments. Material for MkDocs allows for beautiful and functional tabs, grouping code blocks and other content.</p>"},{"location":"reference/content-tabs/#configuration","title":"Configuration","text":"<p>This configuration enables content tabs, and allows to nest arbitrary content inside content tabs, including code blocks and ... more content tabs! Add the following lines to <code>mkdocs.yml</code>:</p> <pre><code>markdown_extensions:\n  - pymdownx.superfences\n  - pymdownx.tabbed:\n      alternate_style: true\n</code></pre> <p>See additional configuration options:</p> <ul> <li>SuperFences</li> <li>Tabbed</li> </ul>"},{"location":"reference/content-tabs/#anchor-links","title":"Anchor links","text":"<p>9.5.0 </p> <p>In order to link to content tabs and share them more easily, an anchor link is automatically added to each content tab, which you can copy via right click or open in a new tab:</p> Open me in a new tab ...... or me ...... or even me <p>You can copy the link of the tab and create a link on the same or any other page. For example, you can jump to the third tab above this paragraph or to the publishing guide for Insiders.</p> <p>Readable anchor links</p> <p>Python Markdown Extensions 9.6 adds support for slugification of content tabs, which produces nicer looking and more readable anchor links. Enable the slugify function with the following lines:</p> <pre><code>markdown_extensions:\n  - pymdownx.tabbed:\n      slugify: !!python/object/apply:pymdownx.slugs.slugify\n        kwds:\n          case: lower\n</code></pre> <p>Fore more information, please see the extension guide.</p>"},{"location":"reference/content-tabs/#linked-content-tabs","title":"Linked content tabs","text":"<p>8.3.0 </p> <p>When enabled, all content tabs across the whole documentation site will be linked and switch to the same label when the user clicks on a tab. Add the following lines to <code>mkdocs.yml</code>:</p> <pre><code>theme:\n  features:\n    - content.tabs.link\n</code></pre> <p>Content tabs are linked based on their label, not offset. This means that all tabs with the same label will be activated when a user clicks a content tab regardless of order inside a container. Furthermore, this feature is fully integrated with instant loading and persisted across page loads.</p> Feature enabledFeature disabled <p></p> <p></p>"},{"location":"reference/content-tabs/#usage","title":"Usage","text":""},{"location":"reference/content-tabs/#grouping-code-blocks","title":"Grouping code blocks","text":"<p>Code blocks are one of the primary targets to be grouped, and can be considered a special case of content tabs, as tabs with a single code block are always rendered without horizontal spacing:</p> Content tabs with code blocks<pre><code>=== \"C\"\n\n    ``` c\n    #include &lt;stdio.h&gt;\n\n    int main(void) {\n      printf(\"Hello world!\\n\");\n      return 0;\n    }\n    ```\n\n=== \"C++\"\n\n    ``` c++\n    #include &lt;iostream&gt;\n\n    int main(void) {\n      std::cout &lt;&lt; \"Hello world!\" &lt;&lt; std::endl;\n      return 0;\n    }\n    ```\n</code></pre> CC++ <pre><code>#include &lt;stdio.h&gt;\n\nint main(void) {\n  printf(\"Hello world!\\n\");\n  return 0;\n}\n</code></pre> <pre><code>#include &lt;iostream&gt;\n\nint main(void) {\n  std::cout &lt;&lt; \"Hello world!\" &lt;&lt; std::endl;\n  return 0;\n}\n</code></pre>"},{"location":"reference/content-tabs/#grouping-other-content","title":"Grouping other content","text":"<p>When a content tab contains more than one code block, it is rendered with horizontal spacing. Vertical spacing is never added, but can be achieved by nesting tabs in other blocks:</p> Content tabs<pre><code>=== \"Unordered list\"\n\n    * Sed sagittis eleifend rutrum\n    * Donec vitae suscipit est\n    * Nulla tempor lobortis orci\n\n=== \"Ordered list\"\n\n    1. Sed sagittis eleifend rutrum\n    2. Donec vitae suscipit est\n    3. Nulla tempor lobortis orci\n</code></pre> Unordered listOrdered list <ul> <li>Sed sagittis eleifend rutrum</li> <li>Donec vitae suscipit est</li> <li>Nulla tempor lobortis orci</li> </ul> <ol> <li>Sed sagittis eleifend rutrum</li> <li>Donec vitae suscipit est</li> <li>Nulla tempor lobortis orci</li> </ol>"},{"location":"reference/content-tabs/#embedded-content","title":"Embedded content","text":"<p>When SuperFences is enabled, content tabs can contain arbitrary nested content, including further content tabs, and can be nested in other blocks like admonitions or blockquotes:</p> Content tabs in admonition<pre><code>!!! example\n\n    === \"Unordered List\"\n\n        ``` markdown\n        * Sed sagittis eleifend rutrum\n        * Donec vitae suscipit est\n        * Nulla tempor lobortis orci\n        ```\n\n    === \"Ordered List\"\n\n        ``` markdown\n        1. Sed sagittis eleifend rutrum\n        2. Donec vitae suscipit est\n        3. Nulla tempor lobortis orci\n        ```\n</code></pre> <p>Example</p> Unordered ListOrdered List <pre><code>* Sed sagittis eleifend rutrum\n* Donec vitae suscipit est\n* Nulla tempor lobortis orci\n</code></pre> <pre><code>1. Sed sagittis eleifend rutrum\n2. Donec vitae suscipit est\n3. Nulla tempor lobortis orci\n</code></pre>"},{"location":"reference/data-tables/","title":"Data tables","text":"<p>Material for MkDocs defines default styles for data tables \u2013 an excellent way of rendering tabular data in project documentation. Furthermore, customizations like sortable tables can be achieved with a third-party library and some additional JavaScript.</p>"},{"location":"reference/data-tables/#configuration","title":"Configuration","text":"<p>This configuration enables Markdown table support, which should normally be enabled by default, but to be sure, add the following lines to <code>mkdocs.yml</code>:</p> <pre><code>markdown_extensions:\n  - tables\n</code></pre> <p>See additional configuration options:</p> <ul> <li>Tables</li> </ul>"},{"location":"reference/data-tables/#usage","title":"Usage","text":"<p>Data tables can be used at any position in your project documentation and can contain arbitrary Markdown, including inline code blocks, as well as icons and emojis:</p> Data table<pre><code>| Method      | Description                          |\n| ----------- | ------------------------------------ |\n| `GET`       | :material-check:     Fetch resource  |\n| `PUT`       | :material-check-all: Update resource |\n| `DELETE`    | :material-close:     Delete resource |\n</code></pre> Method Description <code>GET</code>      Fetch resource <code>PUT</code>  Update resource <code>DELETE</code>      Delete resource"},{"location":"reference/data-tables/#column-alignment","title":"Column alignment","text":"<p>If you want to align a specific column to the <code>left</code>, <code>center</code> or <code>right</code>, you can use the regular Markdown syntax placing <code>:</code> characters at the beginning and/or end of the divider.</p> LeftCenterRight Data table, columns aligned to left<pre><code>| Method      | Description                          |\n| :---------- | :----------------------------------- |\n| `GET`       | :material-check:     Fetch resource  |\n| `PUT`       | :material-check-all: Update resource |\n| `DELETE`    | :material-close:     Delete resource |\n</code></pre> Method Description <code>GET</code>      Fetch resource <code>PUT</code>  Update resource <code>DELETE</code>      Delete resource Data table, columns centered<pre><code>| Method      | Description                          |\n| :---------: | :----------------------------------: |\n| `GET`       | :material-check:     Fetch resource  |\n| `PUT`       | :material-check-all: Update resource |\n| `DELETE`    | :material-close:     Delete resource |\n</code></pre> Method Description <code>GET</code>      Fetch resource <code>PUT</code>  Update resource <code>DELETE</code>      Delete resource Data table, columns aligned to right<pre><code>| Method      | Description                          |\n| ----------: | -----------------------------------: |\n| `GET`       | :material-check:     Fetch resource  |\n| `PUT`       | :material-check-all: Update resource |\n| `DELETE`    | :material-close:     Delete resource |\n</code></pre> Method Description <code>GET</code>      Fetch resource <code>PUT</code>  Update resource <code>DELETE</code>      Delete resource"},{"location":"reference/data-tables/#customization","title":"Customization","text":""},{"location":"reference/data-tables/#sortable-tables","title":"Sortable tables","text":"<p>If you want to make data tables sortable, you can add tablesort, which is natively integrated with Material for MkDocs and will also work with instant loading via additional JavaScript:</p> <code>docs/javascripts/tablesort.js</code> <code>mkdocs.yml</code> <pre><code>document$.subscribe(function() {\n  var tables = document.querySelectorAll(\"article table:not([class])\")\n  tables.forEach(function(table) {\n    new Tablesort(table)\n  })\n})\n</code></pre> <pre><code>extra_javascript:\n  - https://unpkg.com/tablesort@5.3.0/dist/tablesort.min.js\n  - javascripts/tablesort.js\n</code></pre> <p>After applying the customization, data tables can be sorted by clicking on a column:</p> Data table, columns sortable<pre><code>| Method      | Description                          |\n| ----------- | ------------------------------------ |\n| `GET`       | :material-check:     Fetch resource  |\n| `PUT`       | :material-check-all: Update resource |\n| `DELETE`    | :material-close:     Delete resource |\n</code></pre> Method Description <code>GET</code>      Fetch resource <code>PUT</code>  Update resource <code>DELETE</code>      Delete resource <p>Note that tablesort provides alternative comparison implementations like numbers, filesizes, dates and month names. See the tablesort documentation for more information.</p>"},{"location":"reference/data-tables/#import-table-from-file","title":"Import table from file","text":"<p>The plugin mkdocs-table-reader-plugin allows you to import data from a CSV or Excel file.</p>"},{"location":"reference/diagrams/","title":"Diagrams","text":"<p>Diagrams help to communicate complex relationships and interconnections between different technical components, and are a great addition to project documentation. Material for MkDocs integrates with Mermaid.js, a very popular and flexible solution for drawing diagrams.</p>"},{"location":"reference/diagrams/#configuration","title":"Configuration","text":"<p>8.2.0</p> <p>This configuration enables native support for Mermaid.js diagrams. Material for MkDocs will automatically initialize the JavaScript runtime when a page  includes a <code>mermaid</code> code block:</p> <pre><code>markdown_extensions:\n  - pymdownx.superfences:\n      custom_fences:\n        - name: mermaid\n          class: mermaid\n          format: !!python/name:pymdownx.superfences.fence_code_format\n</code></pre> <p>No further configuration is necessary. Advantages over a custom integration:</p> <ul> <li> Works with instant loading without any additional effort</li> <li> Diagrams automatically use fonts and colors defined in <code>mkdocs.yml</code><sup>1</sup></li> <li> Fonts and colors can be customized with additional style sheets</li> <li> Support for both, light and dark color schemes \u2013 try it on this page!</li> </ul>"},{"location":"reference/diagrams/#usage","title":"Usage","text":""},{"location":"reference/diagrams/#using-flowcharts","title":"Using flowcharts","text":"<p>Flowcharts are diagrams that represent workflows or processes. The steps are rendered as nodes of various kinds and are connected by edges, describing the necessary order of steps:</p> Flow chart<pre><code>``` mermaid\ngraph LR\n  A[Start] --&gt; B{Error?};\n  B --&gt;|Yes| C[Hmm...];\n  C --&gt; D[Debug];\n  D --&gt; B;\n  B ----&gt;|No| E[Yay!];\n```\n</code></pre> <pre><code>graph LR\n  A[Start] --&gt; B{Error?};\n  B --&gt;|Yes| C[Hmm...];\n  C --&gt; D[Debug];\n  D --&gt; B;\n  B ----&gt;|No| E[Yay!];</code></pre>"},{"location":"reference/diagrams/#using-sequence-diagrams","title":"Using sequence diagrams","text":"<p>Sequence diagrams describe a specific scenario as sequential interactions  between multiple objects or actors, including the messages that are exchanged between those actors:</p> Sequence diagram<pre><code>``` mermaid\nsequenceDiagram\n  autonumber\n  Alice-&gt;&gt;John: Hello John, how are you?\n  loop Healthcheck\n      John-&gt;&gt;John: Fight against hypochondria\n  end\n  Note right of John: Rational thoughts!\n  John--&gt;&gt;Alice: Great!\n  John-&gt;&gt;Bob: How about you?\n  Bob--&gt;&gt;John: Jolly good!\n```\n</code></pre> <pre><code>sequenceDiagram\n  autonumber\n  Alice-&gt;&gt;John: Hello John, how are you?\n  loop Healthcheck\n      John-&gt;&gt;John: Fight against hypochondria\n  end\n  Note right of John: Rational thoughts!\n  John--&gt;&gt;Alice: Great!\n  John-&gt;&gt;Bob: How about you?\n  Bob--&gt;&gt;John: Jolly good!</code></pre>"},{"location":"reference/diagrams/#using-state-diagrams","title":"Using state diagrams","text":"<p>State diagrams are a great tool to describe the behavior of a system, decomposing it into a finite number of states, and transitions between those states:</p> State diagram<pre><code>``` mermaid\nstateDiagram-v2\n  state fork_state &lt;&lt;fork&gt;&gt;\n    [*] --&gt; fork_state\n    fork_state --&gt; State2\n    fork_state --&gt; State3\n\n    state join_state &lt;&lt;join&gt;&gt;\n    State2 --&gt; join_state\n    State3 --&gt; join_state\n    join_state --&gt; State4\n    State4 --&gt; [*]\n```\n</code></pre> <pre><code>stateDiagram-v2\n  state fork_state &lt;&lt;fork&gt;&gt;\n    [*] --&gt; fork_state\n    fork_state --&gt; State2\n    fork_state --&gt; State3\n\n    state join_state &lt;&lt;join&gt;&gt;\n    State2 --&gt; join_state\n    State3 --&gt; join_state\n    join_state --&gt; State4\n    State4 --&gt; [*]</code></pre>"},{"location":"reference/diagrams/#using-class-diagrams","title":"Using class diagrams","text":"<p>Class diagrams are central to object oriented programming, describing the structure of a system by modelling entities as classes and relationships between them:</p> Class diagram<pre><code>``` mermaid\nclassDiagram\n  Person &lt;|-- Student\n  Person &lt;|-- Professor\n  Person : +String name\n  Person : +String phoneNumber\n  Person : +String emailAddress\n  Person: +purchaseParkingPass()\n  Address \"1\" &lt;-- \"0..1\" Person:lives at\n  class Student{\n    +int studentNumber\n    +int averageMark\n    +isEligibleToEnrol()\n    +getSeminarsTaken()\n  }\n  class Professor{\n    +int salary\n  }\n  class Address{\n    +String street\n    +String city\n    +String state\n    +int postalCode\n    +String country\n    -validate()\n    +outputAsLabel()  \n  }\n```\n</code></pre> <pre><code>classDiagram\n  Person &lt;|-- Student\n  Person &lt;|-- Professor\n  Person : +String name\n  Person : +String phoneNumber\n  Person : +String emailAddress\n  Person: +purchaseParkingPass()\n  Address \"1\" &lt;-- \"0..1\" Person:lives at\n  class Student{\n    +int studentNumber\n    +int averageMark\n    +isEligibleToEnrol()\n    +getSeminarsTaken()\n  }\n  class Professor{\n    +int salary\n  }\n  class Address{\n    +String street\n    +String city\n    +String state\n    +int postalCode\n    +String country\n    -validate()\n    +outputAsLabel()  \n  }</code></pre>"},{"location":"reference/diagrams/#using-entity-relationship-diagrams","title":"Using entity-relationship diagrams","text":"<p>An entity-relationship diagram is composed of entity types and specifies relationships that exist between entities. It describes inter-related things in a specific domain of knowledge:</p> Entity-relationship diagram<pre><code>``` mermaid\nerDiagram\n  CUSTOMER ||--o{ ORDER : places\n  ORDER ||--|{ LINE-ITEM : contains\n  LINE-ITEM {\n    string name\n    int pricePerUnit\n  }\n  CUSTOMER }|..|{ DELIVERY-ADDRESS : uses\n```\n</code></pre> <pre><code>erDiagram\n  CUSTOMER ||--o{ ORDER : places\n  ORDER ||--|{ LINE-ITEM : contains\n  LINE-ITEM {\n    string name\n    int pricePerUnit\n  }\n  CUSTOMER }|..|{ DELIVERY-ADDRESS : uses</code></pre>"},{"location":"reference/diagrams/#other-diagram-types","title":"Other diagram types","text":"<p>Besides the diagram types listed above, Mermaid.js provides support for pie charts, gantt charts, user journeys, git graphs and requirement diagrams, all of which are not officially supported by Material for MkDocs. Those diagrams should still work as advertised by Mermaid.js, but we don't consider them a good choice, mostly as they don't work well on mobile.</p> <ol> <li> <p>While all Mermaid.js features should work out-of-the-box, Material for MkDocs will currently only adjust the fonts and colors for flowcharts, sequence diagrams, class diagrams, state diagrams and entity relationship  diagrams. See the section on other diagrams for more information why this is currently not implemented for all diagrams.\u00a0\u21a9</p> </li> </ol>"},{"location":"reference/footnotes/","title":"Footnotes","text":"<p>Footnotes are a great way to add supplemental or additional information to a specific word, phrase or sentence without interrupting the flow of a document. Material for MkDocs provides the ability to define, reference and render footnotes.</p>"},{"location":"reference/footnotes/#configuration","title":"Configuration","text":"<p>This configuration adds the ability to define inline footnotes, which are then rendered below all Markdown content of a document. Add the following lines to <code>mkdocs.yml</code>:</p> <pre><code>markdown_extensions:\n  - footnotes\n</code></pre> <p>See additional configuration options:</p> <ul> <li>Footnotes</li> </ul>"},{"location":"reference/footnotes/#footnote-tooltips","title":"Footnote tooltips","text":"<p> insiders-4.51.0 </p> <p>Insiders allows to render footnotes as inline tooltips, so the user can read the footnote without leaving the context of the document. Footnote tooltips can be enabled in <code>mkdocs.yml</code> with:</p> <pre><code>theme:\n  features:\n    - content.footnote.tooltips\n</code></pre> <p>Footnote tooltips are enabled on our documentation, so to try it out, you can just hover or focus any footnote on this page or any other page of our documentation.</p>"},{"location":"reference/footnotes/#usage","title":"Usage","text":""},{"location":"reference/footnotes/#adding-footnote-references","title":"Adding footnote references","text":"<p>A footnote reference must be enclosed in square brackets and must start with a caret <code>^</code>, directly followed by an arbitrary identifier, which is similar to the standard Markdown link syntax.</p> Text with footnote references<pre><code>Lorem ipsum[^1] dolor sit amet, consectetur adipiscing elit.[^2]\n</code></pre> <p>Lorem ipsum<sup>1</sup> dolor sit amet, consectetur adipiscing elit.<sup>2</sup></p>"},{"location":"reference/footnotes/#adding-footnote-content","title":"Adding footnote content","text":"<p>The footnote content must be declared with the same identifier as the reference. It can be inserted at an arbitrary position in the document and is always rendered at the bottom of the page. Furthermore, a backlink to the footnote reference is automatically added.</p>"},{"location":"reference/footnotes/#on-a-single-line","title":"on a single line","text":"<p>Short footnotes can be written on the same line:</p> Footnote<pre><code>[^1]: Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n</code></pre> <p> Jump to footnote</p>"},{"location":"reference/footnotes/#on-multiple-lines","title":"on multiple lines","text":"<p>Paragraphs can be written on the next line and must be indented by four spaces:</p> Footnote<pre><code>[^2]:\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.\n</code></pre> <p> Jump to footnote</p> <ol> <li> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.\u00a0\u21a9</p> </li> <li> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.\u00a0\u21a9</p> </li> </ol>"},{"location":"reference/formatting/","title":"Formatting","text":"<p>Material for MkDocs provides support for several HTML elements that can be used to highlight sections of a document or apply specific formatting. Additionally, Critic Markup is supported, adding the ability to display suggested changes for a document.</p>"},{"location":"reference/formatting/#configuration","title":"Configuration","text":"<p>This configuration enables support for keyboard keys, tracking changes in documents, defining sub- and superscript and highlighting text. Add the following lines to <code>mkdocs.yml</code>:</p> <pre><code>markdown_extensions:\n  - pymdownx.critic\n  - pymdownx.caret\n  - pymdownx.keys\n  - pymdownx.mark\n  - pymdownx.tilde\n</code></pre> <p>See additional configuration options:</p> <ul> <li>Critic</li> <li>Caret, Mark &amp; Tilde</li> <li>Keys</li> </ul>"},{"location":"reference/formatting/#usage","title":"Usage","text":""},{"location":"reference/formatting/#highlighting-changes","title":"Highlighting changes","text":"<p>When Critic is enabled, Critic Markup can be used, which adds the ability to highlight suggested changes, as well as add inline comments to a document:</p> Text with suggested changes<pre><code>Text can be {--deleted--} and replacement text {++added++}. This can also be\ncombined into {~~one~&gt;a single~~} operation. {==Highlighting==} is also\npossible {&gt;&gt;and comments can be added inline&lt;&lt;}.\n\n{==\n\nFormatting can also be applied to blocks by putting the opening and closing\ntags on separate lines and adding new lines between the tags and the content.\n\n==}\n</code></pre> <p>Text can be deleted and replacement text added. This can also be combined into onea single operation. Highlighting is also possible and comments can be added inline.</p> <p>       Formatting can also be applied to blocks by putting the opening and       closing tags on separate lines and adding new lines between the tags and       the content.     </p>"},{"location":"reference/formatting/#highlighting-text","title":"Highlighting text","text":"<p>When Caret, Mark &amp; Tilde are enabled, text can be highlighted with a simple syntax, which is more convenient that directly using the corresponding <code>mark</code>, <code>ins</code> and <code>del</code> HTML tags:</p> Text with highlighting<pre><code>- ==This was marked (highlight)==\n- ^^This was inserted (underline)^^\n- ~~This was deleted (strikethrough)~~\n</code></pre> <ul> <li>This was marked (highlight)</li> <li>This was inserted (underline)</li> <li>This was deleted (strikethrough)</li> </ul>"},{"location":"reference/formatting/#sub-and-superscripts","title":"Sub- and superscripts","text":"<p>When Caret &amp; Tilde are enabled, text can be sub- and superscripted with a simple syntax, which is more convenient than directly using the corresponding <code>sub</code> and <code>sup</code> HTML tags:</p> Text with sub- and superscripts<pre><code>- H~2~O\n- A^T^A\n</code></pre> <ul> <li>H<sub>2</sub>O</li> <li>A<sup>T</sup>A</li> </ul>"},{"location":"reference/formatting/#adding-keyboard-keys","title":"Adding keyboard keys","text":"<p>When Keys is enabled, keyboard keys can be rendered with a simple syntax. Consult the Python Markdown Extensions documentation to learn about all available shortcodes:</p> Keyboard keys<pre><code>++ctrl+alt+del++\n</code></pre> <p>Ctrl+Alt+Del</p>"},{"location":"reference/grids/","title":"Grids","text":"<p>Material for MkDocs makes it easy to arrange sections into grids, grouping blocks that convey similar meaning or are of equal importance. Grids are just perfect for building index pages that show a brief overview of a large section of your documentation.</p>"},{"location":"reference/grids/#configuration","title":"Configuration","text":"<p>This configuration enables the use of grids, allowing to bring blocks of identical or different types into a rectangular shape. Add the following lines to <code>mkdocs.yml</code>:</p> <pre><code>markdown_extensions: # (1)!\n  - attr_list\n  - md_in_html\n</code></pre> <ol> <li>Note that some of the examples listed below use icons and emojis, which     have to be configured separately.</li> </ol> <p>See additional configuration options:</p> <ul> <li>Attribute Lists</li> <li>Markdown in HTML</li> </ul>"},{"location":"reference/grids/#usage","title":"Usage","text":"<p>Grids come in two flavors: card grids, which wrap each element in a card that levitates on hover, and generic grids, which allow to arrange arbitrary block elements in a rectangular shape.</p>"},{"location":"reference/grids/#using-card-grids","title":"Using card grids","text":"<p>9.5.0 </p> <p>Card grids wrap each grid item with a beautiful hover card that levitates on hover. They come in two slightly different syntaxes: list and block syntax, adding support for distinct use cases.</p>"},{"location":"reference/grids/#list-syntax","title":"List syntax","text":"<p>The list syntax is essentially a shortcut for card grids, and consists of an unordered (or ordered) list wrapped by a <code>div</code> with both, the <code>grid</code> and <code>cards</code> classes:</p> Card grid<pre><code>&lt;div class=\"grid cards\" markdown&gt;\n\n- :fontawesome-brands-html5: __HTML__ for content and structure\n- :fontawesome-brands-js: __JavaScript__ for interactivity\n- :fontawesome-brands-css3: __CSS__ for text running out of boxes\n- :fontawesome-brands-internet-explorer: __Internet Explorer__ ... huh?\n\n&lt;/div&gt;\n</code></pre> <ul> <li> HTML for content and structure</li> <li> JavaScript for interactivity</li> <li> CSS for text running out of boxes</li> <li> Internet Explorer ... huh?</li> </ul> <p>List elements can contain arbitrary Markdown, as long as the surrounding <code>div</code> defines the <code>markdown</code> attribute. Following is a more complex example, which includes icons and links:</p> Card grid, complex example<pre><code>&lt;div class=\"grid cards\" markdown&gt;\n\n-   :material-clock-fast:{ .lg .middle } __Set up in 5 minutes__\n\n    ---\n\n    Install [`mkdocs-material`](#) with [`pip`](#) and get up\n    and running in minutes\n\n    [:octicons-arrow-right-24: Getting started](#)\n\n-   :fontawesome-brands-markdown:{ .lg .middle } __It's just Markdown__\n\n    ---\n\n    Focus on your content and generate a responsive and searchable static site\n\n    [:octicons-arrow-right-24: Reference](#)\n\n-   :material-format-font:{ .lg .middle } __Made to measure__\n\n    ---\n\n    Change the colors, fonts, language, icons, logo and more with a few lines\n\n    [:octicons-arrow-right-24: Customization](#)\n\n-   :material-scale-balance:{ .lg .middle } __Open Source, MIT__\n\n    ---\n\n    Material for MkDocs is licensed under MIT and available on [GitHub]\n\n    [:octicons-arrow-right-24: License](#)\n\n&lt;/div&gt;\n</code></pre> <ul> <li> <p> Set up in 5 minutes</p> <p>Install <code>mkdocs-material</code> with <code>pip</code> and get up and running in minutes</p> <p> Getting started</p> </li> <li> <p> It's just Markdown</p> <p>Focus on your content and generate a responsive and searchable static site</p> <p> Reference</p> </li> <li> <p> Made to measure</p> <p>Change the colors, fonts, language, icons, logo and more with a few lines</p> <p> Customization</p> </li> <li> <p> Open Source, MIT</p> <p>Material for MkDocs is licensed under MIT and available on GitHub</p> <p> License</p> </li> </ul> <p>If there's insufficient space to render grid items next to each other, the items will stretch to the full width of the viewport, e.g. on mobile viewports. If there's more space available, grids will render in items of 3 and more, e.g. when hiding both sidebars.</p>"},{"location":"reference/grids/#block-syntax","title":"Block syntax","text":"<p>The block syntax allows for arranging cards in grids together with other elements, as explained in the section on generic grids. Just add the <code>card</code> class to any block element inside a <code>grid</code>:</p> Card grid, blocks<pre><code>&lt;div class=\"grid\" markdown&gt;\n\n:fontawesome-brands-html5: __HTML__ for content and structure\n{ .card }\n\n:fontawesome-brands-js: __JavaScript__ for interactivity\n{ .card }\n\n:fontawesome-brands-css3: __CSS__ for text running out of boxes\n{ .card }\n\n&gt; :fontawesome-brands-internet-explorer: __Internet Explorer__ ... huh?\n\n&lt;/div&gt;\n</code></pre> <p> HTML for content and structure</p> <p> JavaScript for interactivity</p> <p> CSS for text running out of boxes</p> <p> Internet Explorer ... huh?</p> <p>While this syntax may seem unnecessarily verbose at first, the previous example shows how card grids can now be mixed with other elements that will also stretch to the grid.</p>"},{"location":"reference/grids/#using-generic-grids","title":"Using generic grids","text":"<p>9.5.0 </p> <p>Generic grids allow for arranging arbitrary block elements in a grid, including admonitions, code blocks, content tabs and more. Just wrap a set of blocks by using a <code>div</code> with the <code>grid</code> class:</p> Generic grid<pre><code>&lt;div class=\"grid\" markdown&gt;\n\n=== \"Unordered list\"\n\n    * Sed sagittis eleifend rutrum\n    * Donec vitae suscipit est\n    * Nulla tempor lobortis orci\n\n=== \"Ordered list\"\n\n    1. Sed sagittis eleifend rutrum\n    2. Donec vitae suscipit est\n    3. Nulla tempor lobortis orci\n\n``` title=\"Content tabs\"\n=== \"Unordered list\"\n\n    * Sed sagittis eleifend rutrum\n    * Donec vitae suscipit est\n    * Nulla tempor lobortis orci\n\n=== \"Ordered list\"\n\n    1. Sed sagittis eleifend rutrum\n    2. Donec vitae suscipit est\n    3. Nulla tempor lobortis orci\n```\n\n&lt;/div&gt;\n</code></pre> Unordered listOrdered list <ul> <li>Sed sagittis eleifend rutrum</li> <li>Donec vitae suscipit est</li> <li>Nulla tempor lobortis orci</li> </ul> <ol> <li>Sed sagittis eleifend rutrum</li> <li>Donec vitae suscipit est</li> <li>Nulla tempor lobortis orci</li> </ol> Content tabs<pre><code>=== \"Unordered list\"\n\n    * Sed sagittis eleifend rutrum\n    * Donec vitae suscipit est\n    * Nulla tempor lobortis orci\n\n=== \"Ordered list\"\n\n    1. Sed sagittis eleifend rutrum\n    2. Donec vitae suscipit est\n    3. Nulla tempor lobortis orci\n</code></pre>"},{"location":"reference/icons-emojis/","title":"Icons, Emojis","text":"<p>One of the best features of Material for MkDocs is the possibility to use more than 10,000 icons and thousands of emojis in your project documentation with practically zero additional effort. Moreover, custom icons can be added and used in <code>mkdocs.yml</code>, documents and templates.</p>"},{"location":"reference/icons-emojis/#search","title":"Search","text":"All Icons Emojis <p> Tip: Enter some keywords to find icons and emojis and click on the   shortcode to copy it to your clipboard. </p>"},{"location":"reference/icons-emojis/#configuration","title":"Configuration","text":"<p>This configuration enables the use of icons and emojis by using simple shortcodes which can be discovered through the icon search. Add the following lines to <code>mkdocs.yml</code>:</p> <pre><code>markdown_extensions:\n  - attr_list\n  - pymdownx.emoji:\n      emoji_index: !!python/name:material.extensions.emoji.twemoji\n      emoji_generator: !!python/name:material.extensions.emoji.to_svg\n</code></pre> <p>The following icon sets are bundled with Material for MkDocs:</p> <ul> <li> \u2013 Material Design</li> <li> \u2013 FontAwesome</li> <li> \u2013 Octicons</li> <li> \u2013 Simple Icons</li> </ul> <p>See additional configuration options:</p> <ul> <li>Attribute Lists</li> <li>Emoji</li> <li>Emoji with custom icons</li> </ul>"},{"location":"reference/icons-emojis/#usage","title":"Usage","text":""},{"location":"reference/icons-emojis/#using-emojis","title":"Using emojis","text":"<p>Emojis can be integrated in Markdown by putting the shortcode of the emoji between two colons. If you're using Twemoji (recommended), you can look up the shortcodes at Emojipedia:</p> Emoji<pre><code>:smile:\n</code></pre> <p></p>"},{"location":"reference/icons-emojis/#using-icons","title":"Using icons","text":"<p>When Emoji is enabled, icons can be used similar to emojis, by referencing a valid path to any icon bundled with the theme, which are located in the <code>.icons</code> directory, and replacing <code>/</code> with <code>-</code>:</p> Icon<pre><code>:fontawesome-regular-face-laugh-wink:\n</code></pre> <p></p>"},{"location":"reference/icons-emojis/#with-colors","title":"with colors","text":"<p>When Attribute Lists is enabled, custom CSS classes can be added to icons by suffixing the icon with a special syntax. While HTML allows to use inline styles, it's always recommended to add an additional style sheet and move declarations into dedicated CSS classes:</p> <code>docs/stylesheets/extra.css</code> <code>mkdocs.yml</code> <pre><code>.youtube {\n  color: #EE0F0F;\n}\n</code></pre> <pre><code>extra_css:\n  - stylesheets/extra.css\n</code></pre> <p>After applying the customization, add the CSS class to the icon shortcode:</p> Icon with color<pre><code>:fontawesome-brands-youtube:{ .youtube }\n</code></pre> <p></p>"},{"location":"reference/icons-emojis/#with-animations","title":"with animations","text":"<p>Similar to adding colors, it's just as easy to add animations to icons by using an additional style sheet, defining a <code>@keyframes</code> rule and adding a dedicated CSS class to the icon:</p> <code>docs/stylesheets/extra.css</code> <code>mkdocs.yml</code> <pre><code>@keyframes heart {\n  0%, 40%, 80%, 100% {\n    transform: scale(1);\n  }\n  20%, 60% {\n    transform: scale(1.15);\n  }\n}\n.heart {\n  animation: heart 1000ms infinite;\n}\n</code></pre> <pre><code>extra_css:\n  - stylesheets/extra.css\n</code></pre> <p>After applying the customization, add the CSS class to the icon shortcode:</p> Icon with animation<pre><code>:octicons-heart-fill-24:{ .heart }\n</code></pre> <p></p>"},{"location":"reference/icons-emojis/#icons-emojis-in-sidebars","title":"Icons, emojis in sidebars","text":"<p>With the help of the built-in typeset plugin, you can use icons and emojis in headings, which will then be rendered in the sidebars. The plugin preserves Markdown and HTML formatting.</p>"},{"location":"reference/icons-emojis/#customization","title":"Customization","text":""},{"location":"reference/icons-emojis/#using-icons-in-templates","title":"Using icons in templates","text":"<p>When you're extending the theme with partials or blocks, you can simply reference any icon that's bundled with the theme with Jinja's <code>include</code> function and wrap it with the <code>.twemoji</code> CSS class:</p> <pre><code>&lt;span class=\"twemoji\"&gt;\n  {% include \".icons/fontawesome/brands/youtube.svg\" %} &lt;!-- (1)! --&gt;\n&lt;/span&gt;\n</code></pre> <ol> <li> <p>Enter a few keywords to find the perfect icon using our icon search and     click on the shortcode to copy it to your clipboard:</p> <p> <ol></ol> </p> </li> </ol> <p>This is exactly what Material for MkDocs does in its templates.</p>"},{"location":"reference/images/","title":"Images","text":"<p>While images are first-class citizens of Markdown and part of the core syntax, it can be difficult to work with them. Material for MkDocs makes working with images more comfortable, providing styles for image alignment and image captions.</p>"},{"location":"reference/images/#configuration","title":"Configuration","text":"<p>This configuration adds the ability to align images, add captions to images (rendering them as figures), and mark large images for lazy-loading. Add the following lines to <code>mkdocs.yml</code>:</p> <pre><code>markdown_extensions:\n  - attr_list\n  - md_in_html\n  - pymdownx.blocks.caption\n</code></pre> <p>See additional configuration options:</p> <ul> <li>Attribute Lists</li> <li>Markdown in HTML</li> <li>Caption</li> </ul>"},{"location":"reference/images/#lightbox","title":"Lightbox","text":"<p>0.1.0 glightbox</p> <p>If you want to add image zoom functionality to your documentation, the glightbox plugin is an excellent choice, as it integrates perfectly with Material for MkDocs. Install it with <code>pip</code>:</p> <pre><code>pip install mkdocs-glightbox\n</code></pre> <p>Then, add the following lines to <code>mkdocs.yml</code>:</p> <pre><code>plugins:\n  - glightbox\n</code></pre> <p>We recommend checking out the available configuration options.</p>"},{"location":"reference/images/#usage","title":"Usage","text":""},{"location":"reference/images/#image-alignment","title":"Image alignment","text":"<p>When Attribute Lists is enabled, images can be aligned by adding the respective alignment directions via the <code>align</code> attribute, i.e. <code>align=left</code> or <code>align=right</code>:</p> LeftRight Image, aligned to left<pre><code>![Image title](https://dummyimage.com/600x400/eee/aaa){ align=left }\n</code></pre> <p></p> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> Image, aligned to right<pre><code>![Image title](https://dummyimage.com/600x400/eee/aaa){ align=right }\n</code></pre> <p></p> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> <p>If there's insufficient space to render the text next to the image, the image will stretch to the full width of the viewport, e.g. on mobile viewports.</p> Why is there no centered alignment? <p>The <code>align</code> attribute doesn't allow for centered alignment, which is why this option is not supported by Material for MkDocs.<sup>1</sup> Instead, the image captions syntax can be used, as captions are optional.</p>"},{"location":"reference/images/#image-captions","title":"Image captions","text":"<p>Sadly, the Markdown syntax doesn't provide native support for image captions, but it's always possible to use the Markdown in HTML extension with literal <code>figure</code> and <code>figcaption</code> tags:</p> Image with caption<pre><code>&lt;figure markdown=\"span\"&gt;\n  ![Image title](https://dummyimage.com/600x400/){ width=\"300\" }\n  &lt;figcaption&gt;Image caption&lt;/figcaption&gt;\n&lt;/figure&gt;\n</code></pre> Image caption <p>However, Caption provides an alternative syntax to add captions to any Markdown block element, including images:</p> Image with caption<pre><code>![Image title](https://dummyimage.com/600x400/){ width=\"300\" }\n/// caption\nImage caption\n///\n</code></pre>"},{"location":"reference/images/#image-lazy-loading","title":"Image lazy-loading","text":"<p>Modern browsers provide native support for lazy-loading images through the <code>loading=lazy</code> directive, which degrades to eager-loading in browsers without support:</p> Image, lazy-loaded<pre><code>![Image title](https://dummyimage.com/600x400/){ loading=lazy }\n</code></pre> <p></p>"},{"location":"reference/images/#light-and-dark-mode","title":"Light and dark mode","text":"<p>8.1.1</p> <p>If you added a color palette toggle and want to show different images for light and dark color schemes, you can append a <code>#only-light</code> or <code>#only-dark</code> hash fragment to the image URL:</p> Image, different for light and dark mode<pre><code>![Image title](https://dummyimage.com/600x400/f5f5f5/aaaaaa#only-light)\n![Image title](https://dummyimage.com/600x400/21222c/d5d7e2#only-dark)\n</code></pre> <p> </p> <p>Requirements when using custom color schemes</p> <p>The built-in color schemes define the aforementioned hash fragments, but if you're using custom color schemes, you'll also have to add the following selectors to your scheme, depending on whether it's a light or dark scheme:</p> Custom light schemeCustom dark scheme <pre><code>[data-md-color-scheme=\"custom-light\"] img[src$=\"#only-dark\"],\n[data-md-color-scheme=\"custom-light\"] img[src$=\"#gh-dark-mode-only\"] {\n  display: none; /* Hide dark images in light mode */\n}\n</code></pre> <pre><code>[data-md-color-scheme=\"custom-dark\"] img[src$=\"#only-light\"],\n[data-md-color-scheme=\"custom-dark\"] img[src$=\"#gh-light-mode-only\"] {\n  display: none; /* Hide light images in dark mode */\n}\n</code></pre> <p>Remember to change <code>\"custom-light\"</code> and <code>\"custom-dark\"</code> to the name of your scheme.</p> <ol> <li> <p>You might also realize that the <code>align</code> attribute has been deprecated as of HTML5, so why use it anyways? The main reason is portability \u2013 it's still supported by all browsers and clients, and is very unlikely to be completely removed, as many older websites still use it. This ensures a consistent appearance when a Markdown file with these attributes is viewed outside of a website generated by Material for MkDocs.\u00a0\u21a9</p> </li> </ol>"},{"location":"reference/lists/","title":"Lists","text":"<p>Material for MkDocs supports several flavors of lists that cater to different use cases, including unordered lists and ordered lists, which are supported through standard Markdown, as well as definition lists and task lists, which are supported through extensions.</p>"},{"location":"reference/lists/#configuration","title":"Configuration","text":"<p>This configuration enables the use of definition lists and tasks lists, which are both not part of the standard Markdown syntax. Add the following lines to <code>mkdocs.yml</code>:</p> <pre><code>markdown_extensions:\n  - def_list\n  - pymdownx.tasklist:\n      custom_checkbox: true\n</code></pre> <p>See additional configuration options:</p> <ul> <li>Definition Lists</li> <li>Tasklist</li> </ul>"},{"location":"reference/lists/#usage","title":"Usage","text":""},{"location":"reference/lists/#using-unordered-lists","title":"Using unordered lists","text":"<p>Unordered lists can be written by prefixing a line with a <code>-</code>, <code>*</code> or <code>+</code> list marker, all of which can be used interchangeably. Furthermore, all flavors of lists can be nested inside each other:</p> List, unordered<pre><code>- Nulla et rhoncus turpis. Mauris ultricies elementum leo. Duis efficitur\n  accumsan nibh eu mattis. Vivamus tempus velit eros, porttitor placerat nibh\n  lacinia sed. Aenean in finibus diam.\n\n    * Duis mollis est eget nibh volutpat, fermentum aliquet dui mollis.\n    * Nam vulputate tincidunt fringilla.\n    * Nullam dignissim ultrices urna non auctor.\n</code></pre> <ul> <li> <p>Nulla et rhoncus turpis. Mauris ultricies elementum leo. Duis efficitur   accumsan nibh eu mattis. Vivamus tempus velit eros, porttitor placerat nibh   lacinia sed. Aenean in finibus diam.</p> <ul> <li>Duis mollis est eget nibh volutpat, fermentum aliquet dui mollis.</li> <li>Nam vulputate tincidunt fringilla.</li> <li>Nullam dignissim ultrices urna non auctor.</li> </ul> </li> </ul>"},{"location":"reference/lists/#using-ordered-lists","title":"Using ordered lists","text":"<p>Ordered lists must start with a number immediately followed by a dot. The numbers do not need to be consecutive and can be all set to <code>1.</code>, as they will be re-numbered when rendered:</p> List, ordered<pre><code>1.  Vivamus id mi enim. Integer id turpis sapien. Ut condimentum lobortis\n    sagittis. Aliquam purus tellus, faucibus eget urna at, iaculis venenatis\n    nulla. Vivamus a pharetra leo.\n\n    1.  Vivamus venenatis porttitor tortor sit amet rutrum. Pellentesque aliquet\n        quam enim, eu volutpat urna rutrum a. Nam vehicula nunc mauris, a\n        ultricies libero efficitur sed.\n\n    2.  Morbi eget dapibus felis. Vivamus venenatis porttitor tortor sit amet\n        rutrum. Pellentesque aliquet quam enim, eu volutpat urna rutrum a.\n\n        1.  Mauris dictum mi lacus\n        2.  Ut sit amet placerat ante\n        3.  Suspendisse ac eros arcu\n</code></pre> <ol> <li> <p>Vivamus id mi enim. Integer id turpis sapien. Ut condimentum lobortis     sagittis. Aliquam purus tellus, faucibus eget urna at, iaculis venenatis     nulla. Vivamus a pharetra leo.</p> <ol> <li> <p>Vivamus venenatis porttitor tortor sit amet rutrum. Pellentesque aliquet     quam enim, eu volutpat urna rutrum a. Nam vehicula nunc mauris, a     ultricies libero efficitur sed.</p> </li> <li> <p>Morbi eget dapibus felis. Vivamus venenatis porttitor tortor sit amet     rutrum. Pellentesque aliquet quam enim, eu volutpat urna rutrum a.</p> <ol> <li>Mauris dictum mi lacus</li> <li>Ut sit amet placerat ante</li> <li>Suspendisse ac eros arcu</li> </ol> </li> </ol> </li> </ol>"},{"location":"reference/lists/#using-definition-lists","title":"Using definition lists","text":"<p>When Definition Lists is enabled, lists of arbitrary key-value pairs, e.g. the parameters of functions or modules, can be enumerated with a simple syntax:</p> Definition list<pre><code>`Lorem ipsum dolor sit amet`\n\n:   Sed sagittis eleifend rutrum. Donec vitae suscipit est. Nullam tempus\n    tellus non sem sollicitudin, quis rutrum leo facilisis.\n\n`Cras arcu libero`\n\n:   Aliquam metus eros, pretium sed nulla venenatis, faucibus auctor ex. Proin\n    ut eros sed sapien ullamcorper consequat. Nunc ligula ante.\n\n    Duis mollis est eget nibh volutpat, fermentum aliquet dui mollis.\n    Nam vulputate tincidunt fringilla.\n    Nullam dignissim ultrices urna non auctor.\n</code></pre> <code>Lorem ipsum dolor sit amet</code> <p>Sed sagittis eleifend rutrum. Donec vitae suscipit est. Nullam tempus tellus non sem sollicitudin, quis rutrum leo facilisis.</p> <code>Cras arcu libero</code> <p>Aliquam metus eros, pretium sed nulla venenatis, faucibus auctor ex. Proin ut eros sed sapien ullamcorper consequat. Nunc ligula ante.</p> <p>Duis mollis est eget nibh volutpat, fermentum aliquet dui mollis. Nam vulputate tincidunt fringilla. Nullam dignissim ultrices urna non auctor.</p>"},{"location":"reference/lists/#using-task-lists","title":"Using task lists","text":"<p>When Tasklist is enabled, unordered list items can be prefixed with <code>[ ]</code> to render an unchecked checkbox or <code>[x]</code> to render a checked checkbox, allowing for the definition of task lists:</p> Task list<pre><code>- [x] Lorem ipsum dolor sit amet, consectetur adipiscing elit\n- [ ] Vestibulum convallis sit amet nisi a tincidunt\n    * [x] In hac habitasse platea dictumst\n    * [x] In scelerisque nibh non dolor mollis congue sed et metus\n    * [ ] Praesent sed risus massa\n- [ ] Aenean pretium efficitur erat, donec pharetra, ligula non scelerisque\n</code></pre> <ul> <li> Lorem ipsum dolor sit amet, consectetur adipiscing elit</li> <li> Vestibulum convallis sit amet nisi a tincidunt<ul> <li> In hac habitasse platea dictumst</li> <li> In scelerisque nibh non dolor mollis congue sed et metus</li> <li> Praesent sed risus massa</li> </ul> </li> <li> Aenean pretium efficitur erat, donec pharetra, ligula non scelerisque</li> </ul>"},{"location":"reference/math/","title":"Math","text":"<p>MathJax and KaTeX are two popular libraries for displaying mathematical content in browsers. Although both libraries offer similar functionality, they use different syntaxes and have different configuration options. This documentation site provides information on how to integrate them with Material for MkDocs easily.</p>"},{"location":"reference/math/#configuration","title":"Configuration","text":"<p>The following configuration enables support for rendering block and inline block equations using MathJax and KaTeX.</p>"},{"location":"reference/math/#mathjax","title":"MathJax","text":"<p>MathJax is a powerful and flexible library that supports multiple input formats, such as LaTeX, MathML, AsciiMath, as well as various output formats like HTML, SVG, MathML. To use MathJax within your project, add the following lines to your <code>mkdocs.yml</code>.</p> <code>docs/javascripts/mathjax.js</code> <code>mkdocs.yml</code> <pre><code>window.MathJax = {\n  tex: {\n    inlineMath: [[\"\\\\(\", \"\\\\)\"]],\n    displayMath: [[\"\\\\[\", \"\\\\]\"]],\n    processEscapes: true,\n    processEnvironments: true\n  },\n  options: {\n    ignoreHtmlClass: \".*|\",\n    processHtmlClass: \"arithmatex\"\n  }\n};\n\ndocument$.subscribe(() =&gt; { // (1)!\n  MathJax.startup.output.clearCache()\n  MathJax.typesetClear()\n  MathJax.texReset()\n  MathJax.typesetPromise()\n})\n</code></pre> <ol> <li>This integrates MathJax with instant loading.</li> </ol> <pre><code>markdown_extensions:\n  - pymdownx.arithmatex:\n      generic: true\n\nextra_javascript:\n  - javascripts/mathjax.js\n  - https://unpkg.com/mathjax@3/es5/tex-mml-chtml.js\n</code></pre> <p>See additional configuration options:</p> <ul> <li>Arithmatex</li> </ul>"},{"location":"reference/math/#katex","title":"KaTeX","text":"<p>KaTeX is a lightweight library that focuses on speed and simplicity. It supports a subset of LaTeX syntax and can render math to HTML and SVG. To use KaTeX within your project, add the following lines to your <code>mkdocs.yml</code>.</p> <code>docs/javascripts/katex.js</code> <code>mkdocs.yml</code> <pre><code>document$.subscribe(({ body }) =&gt; { // (1)!\n  renderMathInElement(body, {\n    delimiters: [\n      { left: \"$$\",  right: \"$$\",  display: true },\n      { left: \"$\",   right: \"$\",   display: false },\n      { left: \"\\\\(\", right: \"\\\\)\", display: false },\n      { left: \"\\\\[\", right: \"\\\\]\", display: true }\n    ],\n  })\n})\n</code></pre> <ol> <li>This integrates KaTeX with instant loading.</li> </ol> <pre><code>markdown_extensions:\n  - pymdownx.arithmatex:\n      generic: true\n\nextra_javascript:\n  - javascripts/katex.js\n  - https://unpkg.com/katex@0/dist/katex.min.js\n  - https://unpkg.com/katex@0/dist/contrib/auto-render.min.js\n\nextra_css:\n  - https://unpkg.com/katex@0/dist/katex.min.css\n</code></pre>"},{"location":"reference/math/#usage","title":"Usage","text":""},{"location":"reference/math/#using-block-syntax","title":"Using block syntax","text":"<p>Blocks must be enclosed in <code>$$...$$</code> or <code>\\[...\\]</code> on separate lines:</p> block syntax<pre><code>$$\n\\cos x=\\sum_{k=0}^{\\infty}\\frac{(-1)^k}{(2k)!}x^{2k}\n$$\n</code></pre> \\[ \\cos x=\\sum_{k=0}^{\\infty}\\frac{(-1)^k}{(2k)!}x^{2k} \\]"},{"location":"reference/math/#using-inline-block-syntax","title":"Using inline block syntax","text":"<p>Inline blocks must be enclosed in <code>$...$</code> or <code>\\(...\\)</code>:</p> inline syntax<pre><code>The homomorphism $f$ is injective if and only if its kernel is only the\nsingleton set $e_G$, because otherwise $\\exists a,b\\in G$ with $a\\neq b$ such\nthat $f(a)=f(b)$.\n</code></pre> <p>The homomorphism \\(f\\) is injective if and only if its kernel is only the singleton set \\(e_G\\), because otherwise \\(\\exists a,b\\in G\\) with \\(a\\neq b\\) such that \\(f(a)=f(b)\\).</p>"},{"location":"reference/math/#comparing-mathjax-and-katex","title":"Comparing MathJax and KaTeX","text":"<p>When deciding between MathJax and KaTeX, there are several key factors to consider:</p> <ul> <li> <p>Speed: KaTeX is generally faster than MathJax. If your site requires   rendering large quantities of complex equations quickly, KaTeX may be the   better choice.</p> </li> <li> <p>Syntax Support: MathJax supports a wider array of LaTeX commands and can   process a variety of mathematical markup languages (like AsciiMath and MathML).   If you need advanced LaTeX features, MathJax may be more suitable.</p> </li> <li> <p>Output Format: Both libraries support HTML and SVG outputs. However,   MathJax also offers MathML output, which can be essential for accessibility,   as it is readable by screen readers.</p> </li> <li> <p>Configurability: MathJax provides a range of configuration options,   allowing for more precise control over its behavior. If you have specific   rendering requirements, MathJax might be a more flexible choice.</p> </li> <li> <p>Browser Support: While both libraries work well in modern browsers,   MathJax has broader compatibility with older browsers. If your audience uses a   variety of browsers, including older ones, MathJax might be a safer option.</p> </li> </ul> <p>In summary, KaTeX shines with its speed and simplicity, whereas MathJax offers more features and better compatibility at the expense of speed. The choice between the two will largely depend on your specific needs and constraints.</p>"},{"location":"reference/tooltips/","title":"Tooltips","text":"<p>Technical documentation often incurs the usage of many acronyms, which may need additional explanation, especially for new user of your project. For these matters, Material for MkDocs uses a combination of Markdown extensions to enable site-wide glossaries.</p>"},{"location":"reference/tooltips/#configuration","title":"Configuration","text":"<p>This configuration enables abbreviations and allows to build a simple project-wide glossary, sourcing definitions from a central location. Add the following line to <code>mkdocs.yml</code>:</p> <pre><code>markdown_extensions:\n  - abbr\n  - attr_list\n  - pymdownx.snippets\n</code></pre> <p>See additional configuration options:</p> <ul> <li>Abbreviations</li> <li>Attribute Lists</li> <li>Snippets</li> </ul>"},{"location":"reference/tooltips/#improved-tooltips","title":"Improved tooltips","text":"<p>9.5.0 </p> <p>When improved tooltips are enabled, Material for MkDocs replaces the browser's rendering logic for <code>title</code> attribute with beautiful little tooltips. Add the following lines to <code>mkdocs.yml</code>:</p> <pre><code>theme:\n  features:\n    - content.tooltips\n</code></pre> <p>Now, tooltips will be rendered for the following elements:</p> <ul> <li>Content \u2013 elements with a <code>title</code>, permalinks and code copy button</li> <li>Header \u2013 home button, header title, color palette switch and repository link</li> <li>Navigation \u2013 links that are shortened with ellipsis, i.e. <code>...</code></li> </ul>"},{"location":"reference/tooltips/#usage","title":"Usage","text":""},{"location":"reference/tooltips/#adding-tooltips","title":"Adding tooltips","text":"<p>The Markdown syntax allows to specify a <code>title</code> for each link, which will render as a beautiful tooltip when improved tooltips are enabled. Add a tooltip to a link with the following lines:</p> Link with tooltip, inline syntax<pre><code>[Hover me](https://example.com \"I'm a tooltip!\")\n</code></pre> <p>Hover me</p> <p>Tooltips can also be added to link references:</p> Link with tooltip, reference syntax<pre><code>[Hover me][example]\n\n  [example]: https://example.com \"I'm a tooltip!\"\n</code></pre> <p>Hover me</p> <p>For all other elements, a <code>title</code> can be added by using the Attribute Lists extension:</p> Icon with tooltip<pre><code>:material-information-outline:{ title=\"Important information\" }\n</code></pre> <p></p>"},{"location":"reference/tooltips/#adding-abbreviations","title":"Adding abbreviations","text":"<p>Abbreviations can be defined by using a special syntax similar to URLs and footnotes, starting with a <code>*</code> and immediately followed by the term or acronym to be associated in square brackets:</p> Text with abbreviations<pre><code>The HTML specification is maintained by the W3C.\n\n*[HTML]: Hyper Text Markup Language\n*[W3C]: World Wide Web Consortium\n</code></pre> <p>The HTML specification is maintained by the W3C.</p>"},{"location":"reference/tooltips/#adding-a-glossary","title":"Adding a glossary","text":"<p>The Snippets extension can be used to implement a simple glossary by moving all abbreviations in a dedicated file<sup>1</sup>, and auto-append this file to all pages with the following configuration:</p> <code>includes/abbreviations.md</code> <code>mkdocs.yml</code> <pre><code>*[HTML]: Hyper Text Markup Language\n*[W3C]: World Wide Web Consortium\n</code></pre> <pre><code>markdown_extensions:\n  - pymdownx.snippets:\n      auto_append:\n        - includes/abbreviations.md\n</code></pre> <p>Tip</p> <p>When using a dedicated file outside of the <code>docs</code> folder, add the parent directory to the list of <code>watch</code> folders so that when the glossary file is updated, the project is automatically reloaded when running <code>mkdocs serve</code>.</p> <pre><code>watch:\n  - includes\n</code></pre> <ol> <li> <p>It's highly recommended to put the Markdown file containing the abbreviations outside of the <code>docs</code> folder (here, a folder with the name <code>includes</code> is used), as MkDocs might otherwise complain about an unreferenced file.\u00a0\u21a9</p> </li> </ol>"},{"location":"tutorials/","title":"Tutorials","text":"<p>In addition to the basic getting started guides, we offer tutorials that aim to show how you can use Material for MkDocs in different use cases. In contrast to the getting started guides or the reference documentation, the tutorials show the breadth of features available in Material for MkDocs but also within the wider MkDocs ecosystem.</p> <p>The tutorials guide you through worked examples, so by following them you should gain not only an understanding of how to use Material for MkDocs, but also a template for your own projects. For convenience, these templates are also available as template repositories on GitHub.</p> <p>The tutorials assume that you have installed either the public version or the Insiders edition of Material for MkDocs and that you have worked through the creating your site setup guide.</p> <p>Note that where the features we use require the Insiders edition, we mark these with the heart icon:  If you are using the public version then you can skip these steps. Sometimes there will be ways of achieving the same goal that differ between the public version and the Insider edition. In that case, we will show them in a tabbed view so you can see one or the other.</p> <p>Feedback wanted!</p> <p>The tutorials are a recent addition to our documentation and we are still working out what shape they should have in the end. Please provide any feedback you might have in this discussion thread.</p> <p>Note, however, that suggestions should be specific and feasible. We want to focus on creating more content at the moment, instead of developing a specific styling or behaviour for the tutorials. If there are worthwhile improvements that we can make through simple customization then we are happy to consider those.</p>"},{"location":"tutorials/#blogs","title":"Blogs","text":"<ul> <li>Basics (20 min)    covers the basics of setting up a blog, including post metadata.</li> <li>Navigation, pagination, multiple authors (30 min)   describes how to make it easier for your readers to find content.</li> <li>Engagement and dissemination (30 min)   walks you through ways of increasing engagement with your content.</li> </ul> <p> Template Repository</p>"},{"location":"tutorials/#social-cards","title":"Social cards","text":"<ul> <li>Basics (20 min)    shows you how to configure Material for MkDocs to create social cards for   your content.</li> <li>Custom cards (15 min)   shows you how to design your own custom social cards.</li> </ul> <p> Template Repository</p>"},{"location":"tutorials/blogs/basic/","title":"Basic blogs","text":"<p>Blogs are a great way to engage with your audience. Software developers can use a blog to announce new features, demonstrate their usage and provide background information. You can demonstrate competence by commenting on the state of the art or document your own work as best practice. Posts on current topics can help draw in visitors for your main website and can keep your audience engaged. Of course, you can blog about any topics close to your heart.</p> <p>The blog plugin makes running a blog alongside your other content easy but you can also configure it to run a stand-alone blog if posts are the only kind of content you need.</p> <p>After a brief overview of the basic concepts of a blog, this tutorial guides you through the process of configuring the blog plugin, setting up your blog, creating posts, and defining post metadata.</p> <p>Time required: typically 20 minutes</p>"},{"location":"tutorials/blogs/basic/#key-concepts","title":"Key concepts","text":"<p>Post, excerpt: a blog consists of a number of self-contained posts (often called articles) and an index page that shows the posts in reverse chronological order, with the most recent post at the top. The index page usually shows only a short excerpt and a link that the user can click to navigate to the full post.</p> <p>Metadata: both the index page and the post itself list information such as when you published the post, when you updated it, who the author is, and what the expected reading time is.</p> <p>Slug: since the blog posts are primarily arranged by time and not into a hierarchy, their URLs do not reflect such a structure. Instead, each post's URL contains a shortened description, the slug, which is usually derived from the first heading in the post.</p> <p>Navigation: the main navigation structure is the timeline, which you can subdivide into categories. The main index page shows the more recent posts while an archive section allows access to older ones, organized by year. In addition, posts can be tagged and tag index pages provide an additional navigation structure based on content.</p> <p>You can see all these elements on the Material for MkDocs blog.</p>"},{"location":"tutorials/blogs/basic/#setting-up-your-blog","title":"Setting up your blog","text":"<p>The blog plugin is part of Material for MkDocs but you need to configure it in the <code>mkdocs.yml</code>.</p> <p>Set up a blog</p> <p>If you have not done so already, create a project for your blog, then edit the <code>mkdocs.yml</code> file to make sure it has the following content:</p> <pre><code>site_name: Blog Tutorial\nsite_description: an example blog set up following the tutorial\nsite_url: http://www.example.com\n\ntheme:\n  name: material\n\nplugins:\n  - search\n  - blog\n</code></pre> <p>The blog plugin will create a directory structure for your blog posts if it does not exist, so simply run <code>mkdocs serve</code> to get:</p> <pre><code>docs\n\u251c\u2500\u2500 blog\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 index.md\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 posts\n\u2514\u2500\u2500 index.md\n</code></pre> <p>Now create your first blog post in <code>docs/blog/posts</code>. You can use any naming convention and directory structure you like for your posts, as long as they are inside <code>docs/blog/posts</code>.</p> <p>Each post must have a page header, which appears at the top of the Markdown code between lines with three dashes. Within this header, you need to have at least a <code>date</code> entry but you can add other data, as you will see below. Following the header comes the page content. Note that it is important to have a level one heading as the plugin uses it to produce the slug. Also, by adding <code>&lt;!-- more --&gt;</code> to the page, you can define where the excerpt will end that the index page shows.</p> <p>Write your first post</p> <p>Create a file <code>docs/blog/posts/myfirst.md</code> with the following contents:</p> <pre><code>---\ndate:\n  created: 2023-12-31\n---\n\n# Happy new years eve!\n\nWe hope you are all having fun and wish you all the best for the new year!\n&lt;!-- more --&gt;\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod\ntempor incididunt ut labore et dolore magna aliqua.\n</code></pre> <p>Then, run <code>mkdocs serve</code> and point your web browser at <code>http://localhost:8000/blog</code>.</p> <p>The blog plugin automatically creates navigation elements for the blog. The index page shows only the extract. When you select the \"Continue reading\" link, you will get to the full blog post. Note how it has a URL generated from the first-level heading.</p> <p>Navigation</p> <p>We also have a tutorial on navigation that shows you how to change the automatically created navigation and integrate the blog into your existing navigation structure. It shows how to create secondary navigation, produce author pages, and control pagination.</p>"},{"location":"tutorials/blogs/basic/#post-metadata","title":"Post metadata","text":"<p>In addition to the date, you can provide other metadata and give the plugin instructions, such as to treat a post as a draft or to pin it.</p>"},{"location":"tutorials/blogs/basic/#drafts","title":"Drafts","text":"<p>You may want to produce a draft of a blog post and work with it locally but exclude it from the build that you publish. Simply add a field to the page header to indicate that a post is still in draft form.</p> <p>Create a draft</p> <p>Create a second blog post in <code>docs/blogs/posts/draft.md</code> with the following contents:</p> <pre><code>---\ndate:\n  created: 2024-01-01\ndraft: true\n---\n\n# Happy new year!\n\nHappy 2024 to everyone. Wishing you all the best!\n&lt;!-- more --&gt;\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod\ntempor incididunt ut labore et dolore magna aliqua.\n</code></pre> <p>Now, note how the draft appears on the index page but with a label that indicates that it is a draft. When you run <code>mkdocs build</code>, the draft will not appear in the output:</p> <pre><code>$ mkdocs build\n$ ls site/blog\nsite/blog\n\u251c\u2500\u2500 2023\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 12\n\u2502\u00a0\u00a0     \u2514\u2500\u2500 31\n\u2502\u00a0\u00a0         \u2514\u2500\u2500 happy-new-years-eve\n\u2502\u00a0\u00a0             \u2514\u2500\u2500 index.html\n...\n</code></pre> <p>The first blog post for 2024 is not there yet because it is still in draft stage. Remember to remove the <code>draft</code> setting in the header when it is time to publish it.</p> <p>If you are using the Insiders Edition, you can also create a folder to keep your drafts in and use the Meta plugin to add the <code>draft</code> header setting to all the posts in that folder. This has the advantage that it is easier to see which posts are still in draft form. We will cover the Meta plugin later on.</p>"},{"location":"tutorials/blogs/basic/#edits","title":"Edits","text":"<p>Sometimes, bloggers need to update a post. This might happen when you make a mistake or when something changes that you need to reflect in the post. To indicate you have edited a post, you can include an <code>updated</code> date in the page header.</p> <p>Editing a post</p> <p>Make a change to your first blog post, then add an edit date to the header:</p> <pre><code>---\ndate:\n  created: 2023-12-31\n  updated: 2024-01-02\n---\n</code></pre> <p>The Metadata section of the blog post itself will contain the edit date, though the index page omits this detail by default.</p>"},{"location":"tutorials/blogs/basic/#reading-time","title":"Reading time","text":"<p>To give the reader some idea of how long it might take them to read a post, a read time is automatically calculated. If you want to override this, you can do so in the page header by specifying the number of minutes you estimate your readers will take the read the post.</p> <p>Overriding the reading time</p> <p>Add a reading time override to your first blog post:</p> <pre><code>---\ndate:\n  created: 2023-12-31\n  updated: 2024-01-02\nreadtime: 15\n---\n</code></pre>"},{"location":"tutorials/blogs/basic/#pinning","title":"Pinning","text":"<p>Sometimes, blog authors want to 'pin' a specific post so that it will always appear at the top of the index page, no matter what else gets published. If you are using the Insiders Edition, you can achieve this by adding the <code>pin</code> attribute in the page header:</p> <p>Pin a post </p> <p>Add the <code>pin</code> attribute to your first blog post:</p> <pre><code>---\ndate:\n  created: 2023-12-31\n  updated: 2024-01-02\nreadtime: 15\npin: true\n---\n</code></pre> <p>Observe how this makes the post appear on top of the index page even though its publication date is prior to other posts. A small pin icon shows that the post has been pinned.</p>"},{"location":"tutorials/blogs/basic/#related-links","title":"Related links","text":"<p>When your blog is part of a wider site such as technical documentation, you will want to provide links from blog posts into your other content. One way you can do this is to have a related links section. The blog plugin can create one for you if you provide link targets in your page header:</p> <p>Add a related links section </p> <p>Add the following to a blog post:</p> <pre><code>---\ndate:\n  created: 2023-12-31\n...\nlinks:\n  - index.md\n  - blog/index.md\n---\n</code></pre> <p>The related links appear underneath the Metadata section.</p> <p>The nice thing here is that you do not need to provide a page title. The plugin will deduce the link text by applying the same logic that MkDocs uses for the main navigation. In fact, the syntax is the same as that of the <code>nav</code> section in the <code>mkdocs.yml</code>, so you can override the title if you want and even define subsections:</p> <p>Override the page titles</p> <p>Change the link section to override the page titles:</p> <pre><code>---\ndate:\n  created: 2023-12-31\n...\nlinks:\n  - Homepage: index.md\n  - Blog index: blog/index.md\n  - External links:\n    - Material documentation: https://squidfunk.github.io/mkdocs-material\n---\n</code></pre> <p>The plugin renders related links in the left sidebar on screens that are wide enough and at the bottom of the post on narrow screens. Change the size of your browser window to see this in action.</p>"},{"location":"tutorials/blogs/basic/#meta-plugin","title":"Meta plugin","text":"<p>The Meta plugin helps simplify the management of metadata that is common to a group of files in the same subdirectory. Instead of having to repeat the same metadata in the page headers of a number of files, you can add a <code>.meta.yml</code> file in the directory and the Meta plugin will merge its contents into the headers of all the pages contained. Settings from the page header take precedence, so you can always override settings by adding them to a post's header.</p> <p>For example, you may want to manage drafts by keeping them in a directory together so that they are not only flagged as drafts but also easier to find. (Otherwise, you would need to inspect the page headers or trace back from the output to the files to figure out which posts are drafts.)</p> <p>Drafts using the Meta plugin </p> <p>You first need to activate the plugin in your <code>mkdocs.yaml</code>:</p> <pre><code>plugins:\n  - search\n  - blog\n  - meta\n</code></pre> <p>Now create the folder for the drafts:</p> MacOS/LinuxWindows <pre><code>$ mkdir docs/blog/posts/drafts\n</code></pre> <pre><code>$ mkdir docs\\blog\\posts\\drafts\n</code></pre> <p>Now, within this folder, crate a file <code>.meta.yml</code> that contains:</p> <pre><code>draft: true\n</code></pre> <p>Add another blog post and store it in <code>docs/blog/posts/drafts</code>. When you look at it locally, you will see the label that identifies it as a draft, while in the version built for publication it does not appear. To move a post from draft status to published, simply move it outside <code>drafts/</code>.</p>"},{"location":"tutorials/blogs/basic/#whats-next","title":"What's next?","text":"<p>You should now have a working blog. However, as it accumulates content, you may want to make sure that people can find posts they are interested in, so you may want to add secondary navigation with tags and categories. You may have more than one author and want to attribute posts to them as well as generate author pages for them. We have a tutorial on navigation, pagination, and authors that covers these topics.</p> <p>You may want to increase engagement with your blog by allowing people to subscribe to an RSS feed or by setting up a comment system. The engagement and dissemination tutorial walks you through setting these up.</p>"},{"location":"tutorials/blogs/engage/","title":"Engagement and dissemination","text":"<p>You can foster reader engagement and improve the dissemination of content on your blog by providing an RSS feed that people can subscribe to and by integrating a discussion system. To learn more about who is or is not reading your posts, you may want to integrate an analytics system. You may also want to post on social media when you publish a new blog post. This tutorial gives you a leg up on all of these topics.</p> <p>Time required: typically 30 minutes</p>"},{"location":"tutorials/blogs/engage/#rss-feeds","title":"RSS feeds","text":"<p>An RSS feed allows users to subscribe to a blog so that they get notified when you publish new posts. RSS Feed readers are often used to access blogs that a user follows. They usually support downloading the blog content for offline consumption.</p> <p>An easy way to create an RSS feed for your blog is to use the MkDocs RSS Plugin, which is well integrated with Material for MkDocs. Since it is a third-party plugin, you need to install it before using it.</p> <p>Add an RSS feed</p> <p>Install the RSS plugin into your project:</p> <pre><code>$ pip install mkdocs-rss-plugin\n</code></pre> <p>It is important that have the <code>site_name</code>, <code>site_description</code> and <code>site_url</code> settings configured as instructed in the basic blog tutorial. The RSS plugin makes use of this information to construct the feed, so make sure you have configured them.</p> <p>Now, configure the plugin in the <code>mkdocs.yml</code>. The options provided restrict the pages that RSS entries are created for to the blog posts, which is probably what you want. Also note the configuration of the date fields to match the format that Material for MkDocs uses to accommodate both a creation date and a date for updates.</p> <pre><code>plugins:\n    - ...\n    - rss:\n        match_path: \"blog/posts/.*\"\n        date_from_meta:\n          as_creation: date.created\n          as_update: date.updated\n</code></pre> <p>Have a look at http://localhost:8000/feed_rss_created.xml to see the RSS feed in all its XML glory. You can use a browser like Firefox or Chrome that can display the raw RSS feed or use <code>curl</code> to get the feed and <code>xmllint</code> to format it. (You may need to install these tools.)</p> <pre><code>curl -s http://localhost:8000/feed_rss_created.xml | xmllint --format -\n</code></pre> <p>You may also want to try your feed with a feed reader. There are various desktop and mobile apps as well as online services. Of course, to use the latter you will need to deploy your project somewhere that is accessible to them.</p> <p>This minimal configuration should work well if you have not made any changes to the default configuration of the blog plugin. For more information on adapting the feed to your needs, see the RSS plugin's documentation.</p>"},{"location":"tutorials/blogs/engage/#social-media-buttons","title":"Social media buttons","text":"<p>Social media buttons can serve two purposes: to allow your readers to navigate to your social media profiles or to share content you have published via their own accounts.</p>"},{"location":"tutorials/blogs/engage/#profile-links","title":"Profile links","text":"<p>Links to social media profiles a usually provided in the footer of pages and Material for MkDocs makes this easy. All you need to do is to provide the necessary links and define the icons to use.</p> <p>Adding social media profile links</p> <p>Add an <code>extra</code> section to your <code>mkdocs.yml</code> and, within it, a <code>social</code> section to contain a list of link definitions. These consist of the logo to use and the link to the profile.</p> <pre><code>extra:\n  social:\n    - icon: fontawesome/brands/mastodon\n      name: squidfunk on Mastodon\n      link: https://fosstodon.org/@squidfunk\n</code></pre> <p>For the <code>icon</code>, you can choose any valid path to an icon bundled with the theme. The <code>name</code> will be used as the title attribute for the icon and including this improves accessibility. For popular social media systems, the link needs to be absolute and needs to include the scheme, most likely <code>https://</code>.</p> <p>You can also use other schemes. For example, to cerate an icon that allows people to create an email, add this:</p> <pre><code>extra:\n  social:\n  - icon: /fontawesome/regular/envelope\n    name: send me an email\n    link: mailto:&lt;email-address&gt;\n</code></pre> <p>Finally, you can specify a URL within your site, such as to your contact page. It is possible to specify only the path to the page:</p> <pre><code>extra:\n  social:\n  - icon: /material/mailbox\n    name: contact us\n    link: /contact\n</code></pre>"},{"location":"tutorials/blogs/engage/#share-and-like-buttons","title":"Share and like buttons","text":"<p>Adding buttons that let people share your content on social media is a bit more involved, which is why there are companies offering components for this.</p> <p>Data Protection</p> <p>\"Share\" and \"Like\" buttons that use integrations provided by social media companies often leave copious data traces even when the user does not interact with these buttons. If you choose to integate such feature on your site please be aware of the data protection implications and your duties as a provider to ensure that processing occurs only once the user has granted consent.</p> <p>This implementation of share buttons deliberately does not use third party code. It supports sharing to Twitter/X and Facebook without causing a data flow to these companies whenever someone views the pages. Only when someone clicks a share button will there be interactions with those companies' servers.</p> <p>Add share buttons</p> <p>In order to add the share buttons, you can add a hook that appends buttons for sharing the current page.</p> <p>Create a directory <code>hooks</code> in your project root and configure it in your <code>mkdocs.yml</code>:</p> <pre><code>hooks:\n  - hooks/socialmedia.py\n</code></pre> <p>Add the file <code>hooks/socialmedia.py</code> with the following Python code:</p> <pre><code>from textwrap import dedent\nimport urllib.parse\nimport re\n\nx_intent = \"https://x.com/intent/tweet\"\nfb_sharer = \"https://www.facebook.com/sharer/sharer.php\"\ninclude = re.compile(r\"blog/[1-9].*\")\n\ndef on_page_markdown(markdown, **kwargs):\n    page = kwargs['page']\n    config = kwargs['config']\n    if not include.match(page.url):\n        return markdown\n\n    page_url = config.site_url+page.url\n    page_title = urllib.parse.quote(page.title+'\\n')\n\n    return markdown + dedent(f\"\"\"\n    [Share on :simple-x:]({x_intent}?text={page_title}&amp;url={page_url}){{ .md-button }}\n    [Share on :simple-facebook:]({fb_sharer}?u={page_url}){{ .md-button }}\n    \"\"\")\n</code></pre> <p>The hook first checks if the current page is a blog post and then appends Markdown code for the share buttons. The buttons use icons, so you also need to configure the following markdown extensions:</p> <pre><code>markdown_extensions:\n  - attr_list\n  - pymdownx.emoji:\n      emoji_index: !!python/name:material.extensions.emoji.twemoji\n      emoji_generator: !!python/name:material.extensions.emoji.to_svg\n</code></pre>"},{"location":"tutorials/blogs/engage/#add-a-discussion-system","title":"Add a discussion system","text":"<p>Allowing your readers to comment on your posts is a great way of receiving feedback, learning something, as well as giving readers the opportunity to discuss the content and the topic it is about.</p> <p>There are plenty of discussion system out there and you will need to consider your audience when choosing one appropriate for your blog. Likewise, you will also need to consider existing commitments to communication channels. If you are a heavy user Slack, for example, you may have a string preference for this system. Consider that when you add a communication channel, you will need to be prepared to use it regularly and to moderate discussions.</p>"},{"location":"tutorials/blogs/engage/#giscus-integration","title":"Giscus integration","text":"<p>In this tutorial, we will be using Giscus because it is free, open source, and uses GitHub Discussions as a backend. Because a lot of users of Material for MkDocs use GitHub, this seems like an obvious choice.</p> <p>To add Giscuss to your blog you will need to go through a number of steps:</p> <ol> <li>Create a GitHub repository if there is not already one</li> <li>Turn on discussions and install the Giscus app</li> <li>Configure the code needed to embed Giscus into your blog</li> <li>Add the code to your MkDocs project</li> </ol> <p>You may want to create a test repository for this tutorial that you can scrap later on. The instructions below assume that you are user \"example\" and that you create a repository \"giscus-test.\" The repository will need to be public for people to be able to use the discussions.</p> <p>In the instructions given below, you will need to replace at least the username but also the repository name if you chose another name such as when you want to work directly on an existing repository.</p> <p>Turn on discussions and install the Giscus app</p> <p>Once the repository is set up, go to its settings page and find <code>Features</code> in the <code>General</code> section. Tick the checkbox for <code>Discussions</code>. You will see that <code>Discussions</code> appears in the top navigation for the repository. If you are using a live repository then you may want to add some minimal content to the dicussions section at this point and come back to the tutorial.</p> <p>Next, you need to install the Giscus app by following the link in this sentence, and choosing <code>Install</code>, then following the instructions to choose where the Giscus app is to be installed:</p> <ol> <li>Choose the account or organization for the repository you want to use.</li> <li>Choose to install only on select repositories and select the one you    want to use. Note that you can choose more than one repository here.</li> <li>Select <code>Install</code> at the end. You may need to authenticate to give    permission for this to happen.</li> <li>You will end up on the <code>Applications</code> page in your settings, where you    can control the Gicsus app and uninstall it if so desired.</li> </ol> <p>That is all the preparation you will need for the repository. Next, it is time to generate a piece of code that embeds Giscuss in your site. The resulting code snippet will look something like this:</p> <pre><code>&lt;script src=\"https://giscus.app/client.js\"\n        data-repo=\"&lt;username&gt;/&lt;repository&gt;\"\n        data-repo-id=\"...\"\n        data-category=\"Announcements\"\n        data-category-id=\"...\"\n        data-mapping=\"title\"\n        data-strict=\"1\"\n        data-reactions-enabled=\"1\"\n        data-emit-metadata=\"1\"\n        data-input-position=\"top\"\n        data-theme=\"preferred_color_scheme\"\n        data-lang=\"en\"\n        data-loading=\"lazy\"\n        crossorigin=\"anonymous\"\n        async&gt;\n&lt;/script&gt;\n</code></pre> <p>Configure the code needed to embed Giscus into your blog</p> <p>Go to the Giscus homepage and configure the embedding code. There are a number of settings:</p> <ol> <li>Choose the language</li> <li>Enter the username / organization name and repository name</li> <li>Choose how the discussions are to be mapped to the page on your blog.    Because for a blog post the title is the basis of the URL, it makes    sense to use the <code>Discussion title contains page &lt;title&gt;</code> option.</li> <li>Under <code>Discussion Category</code> choose <code>Announcements</code> to limit the creation    of new discussions to Giscuss and people with maintainer or admin    permissions.</li> <li>Under <code>Features</code>, select the following:<ol> <li>Enable reactions for the main post</li> <li>Emit discussion metadata</li> <li>Place the comment box above the comments</li> </ol> </li> <li>Under <code>Theme</code>, select <code>Preferred color scheme</code> so that Giscus matches    the color scheme selected by the user for your site.</li> </ol> <p>With these settings in place, you now need to integrate the code into your site. There is a partial <code>partials/comments.html</code> that exists for this purpose and is empty be default. It is included by the <code>content.html</code> partial, so will be included for every page on your site. You may or may not want this. In this tutorial, you will limit the Giscus integration to only blog posts but it is easy enough to leave out the code that achieves this if you want to have Giscus discussions active for every page.</p> <p>Add Giscus integration code</p> <p>First, you need to create an <code>overrides</code> directory that will contain the templates and partials you want to override.</p> <pre><code>mkdir -p overrides/partials\n</code></pre> <p>You need to declare it in your <code>mkdocs.yaml</code>:</p> <pre><code>theme:\n  name: material\n  custom_dir: overrides\n</code></pre> <p>Now add a file <code>overrides/partials/comments.html</code> and paste in the code snippet you obtained from the Giscus homepage. Look at the result locally and you will see that the integration is active on all pages of the site. If you want to restrict it to your blog posts, you need to add a conditional around the Giscus script that tests if comments should be included. A simple way of doing this is to test for a metadata flag:</p> <pre><code>{% if page.meta.comments %}\n&lt;script&gt;...&lt;/script&gt;\n{% endif %}\n</code></pre> <p>The disadvantage is that you now need to manually turn on comments for each blog post - unless you want to turn them off on some. To get the comments section on all blog posts, use code like this:</p> <pre><code>{% if page.file.src_uri.startswith('blog/posts') %}\n&lt;script&gt;...&lt;/script&gt;\n{% endif %}\n</code></pre> <p>You should see now that the Giscus comments are added at the bottom of your blog posts but not on other pages.</p>"},{"location":"tutorials/blogs/engage/#whats-next","title":"What's next?","text":"<p>This is the end of the blog tutorial. We hope you have enjoyed it and manage to set up your blog the way you like it. There are numerous other features and options that we have not been able to cover here. The blog plugin reference provides comprehensive documentation for the plugin. You may also want to look at the social plugin tutorial to generate social cards for your blog posts that get displayed when you post links to social media systems.</p>"},{"location":"tutorials/blogs/navigation/","title":"Navigation, authors, and pagination","text":"<p>The Blog plugin provides blog-style navigation with a reverse-chronological index page and an archive organized by year by default. This tutorial shows how you can configure details of the default navigation, configure authors, and add more navigation options using categories and the Tags plugin.</p> <p>Time required: typically 30 minutes</p>"},{"location":"tutorials/blogs/navigation/#integrating-navigation","title":"Integrating navigation","text":"<p>So far, you have let the Blog plugin and MkDocs worry about navigation. For some use cases, this might be enough and it is simply sufficient to not declare a <code>nav</code> section in the <code>mkdocs.yml</code>.</p> <p>However, you may want to integrate a blog with other content and a navigation structure that you have defined in the <code>nav</code> section of the configuration. In such cases, you need to provide a place where the Blog plugin should attach the blog navigation to the rest of the navigation structure.</p> <p>Integrate with site navigation</p> <p>Add the following to your <code>mkdocs.yml</code> to see how the Blog plugin can integrate the blog navigation with the overall navigation structure. Note that the only thing you need to specify at this point is the index page for the blog and its path must match the <code>blog_dir</code> setting, which is <code>blog</code> by default:</p> <pre><code>nav:\n  - Home: index.md\n  - Install: install.md\n  - Usage: usage.md\n  - Blog:\n     - blog/index.md\n</code></pre> <p>You will notice that \"Blog\" is duplicated in the navigation structure. To avoid this, you can use the <code>navigation.indexes</code> feature to make the blog index the section index page for the blog:</p> <pre><code>theme:\n  name: material\n  features:\n    - navigation.indexes\n</code></pre> <p>Stand-alone blog</p> <p>If what you need is a stand-alone blog instead of one that is integrated with a larger site, this can be done by using the <code>blog_dir</code> configuration option. To see how this is done, see setting up a blog. The rest of the tutorial assumes that you are integrating the blog with a wider site.</p> <p>Adding pages</p> <p>You can add additional pages to the blog section by putting them into <code>docs/blog</code> (and adding them to the navigation). The blog archive will be added to the navigation after these pages.</p>"},{"location":"tutorials/blogs/navigation/#configuring-the-archive","title":"Configuring the archive","text":"<p>By default, the blog archive lists posts by year only. If you want to add listings by month, you can configure the date format for the archive.</p> <p>Organize posts by month</p> <p>Add the following to your <code>mkdocs.yml</code> to get a listing with the month name (in the language selected in the theme options):</p> <pre><code>- blog:\n    archive_date_format: MMMM yyyy\n</code></pre> <p>If you do not want the full month name, you can make the date configuration <code>MM/yyyy</code>, for example.</p> <p>If you want to add the day, you can add a placeholder for them. For example, to get an American-style output, make it <code>MM/dd/yyyy</code>. For the plugin to sort the blog posts by the full date, you will also need to set the <code>archive_url_date_format</code> to include the month and day, so make it <code>MM/dd/yyyy</code> as well.</p>"},{"location":"tutorials/blogs/navigation/#using-categories","title":"Using categories","text":"<p>Categories are a way to make blog posts accessible by topic while retaining the navigation structure based on chronology within each category listing. Use them when there is a limited set of non-overlapping categories that you can sort your posts into.</p> <p>Categories appear in the main navigation, so are directly accessible from there. This implies that there are relatively few categories as otherwise the <code>categories</code> section in your main navigation will become too crowded.</p> <p>Add a category</p> <p>Add a category to your first blog post by adding it to the page header:</p> <pre><code>---\ndate: 2023-12-31\nupdated: 2024-01-02\ncategories:\n  - Holidays\n---\n</code></pre> <p>Now that the blog post has been categorised, <code>Holidays</code> appears under <code>Categories</code> in the main navigation and the blog post appears in the index page for this category.</p> <p>Single or multiple categories?</p> <p>While it is traditionally the case that a blog post would belong to only one category, Material for MkDocs actually allows you to assign more than one. While this gives you a degree of freedom, you should probably not use this too much, not least because you can use tags to deal with multiple classifications. We will cover them in the next step.</p> <p>Material allows you to control which categories blog authors can use. You declare them in the <code>mkdocs.yml</code>. This way you can make sure everyone sticks to agreed categories and that the plugin detects typos.</p> <p>Control your categories</p> <p>Add a <code>categories_allowed</code> entry to the configuration of the Blog plugin with the entries \"Holidays\" and \"News\":</p> <pre><code>plugins:\n  - search\n  - blog:\n      archive_date_format: MMMM yyyy\n      categories_allowed:\n        - Holidays\n        - News\n</code></pre> <p>Now, when you add a category to a blog post that does not match one of these two, you should get a build error.</p>"},{"location":"tutorials/blogs/navigation/#using-tags","title":"Using tags","text":"<p>The Tags plugin provides another way to classify blog posts and to make them accessible independently of the main navigation structure. Tags are useful for making related content easily discoverable even if it is in different parts of the navigation hierarchy.</p> <p>You may have a tutorial like this one as well as a more comprehensive setup guide and reference documentation. Adding the same tag to all three shows that they are related. As you will see, it is possible to navigate from a tagged page to the tag index and, from there, to other pages that carry the same tag.</p> <p>Enable the plugin and add tags</p> <p>First, you need to add the plugin to your <code>mkdocs.yml</code>:</p> <pre><code>plugins:\n  - search\n  - blog:\n      archive_date_format: MMMM yyyy\n      categories_allowed:\n        - Holidays\n        - News\n  - tags\n</code></pre> <p>Once this is done, you can add tags to posts in the page header:</p> <pre><code>---\ndate:\n  created: 2023-12-31\n  updated: 2024-01-02\nauthors:\n  - material\ncategories:\n  - Holidays\ntags:\n  - new year\n  - hogmanay\n  - festive season\n---\n</code></pre> <p>You should see the tags that you defined at the top of the post. However, at the moment that is it. While the blog plugin automatically creates an index page for categories, the tags plugin does not do the same for tags. This is because the tags plugin is not specific for blogs. You can use it for any site content, so it is not obvious were the tag index should go.</p> <p>You can configure a basic tag index using the public version of Material for MkDocs. The Insider Edition supports this as well, of course, but also provides an alternative index mechanism that allows for an arbitrary number of tag indexes, scoped listings, shadow tags, nested tags, and much more.</p> <p>Adding a tags index</p> Basic tag indexInsider Edition <p>To configure a tag index using the public version, add a <code>tags_file</code> entry to your configuration of the tags plugin and configure it in your <code>nav</code> section. Remember to add a colon at the end of the existing <code>tags</code> entry.</p> <pre><code>plugins:\n    - search\n    - blog:\n        archive_date_format: MMMM yyyy\n        categories_allowed:\n            - Holidays\n            - News\n    - tags:\n        tags_file: blog/tags.md\n\nnav:\n    - Home: index.md\n    - Install: install.md\n    - Usage: usage.md\n    - Blog:\n        - blog/index.md\n        - Tags: blog/tags.md\n</code></pre> <p>The tag index will be appended to the configured page, which you should now create at the location specified.</p> <p>Note that you can put the tag index page anywhere in your primary navigation, so if you are using tags elsewhere instead of just in your blog then you may want to have the tag index outside the blog section of the navigation.</p> <p>To add a tag index, you add a placeholder in a Markdown file to tell the plugin to insert an index at that point. This means that you can add content before and after the index. Crucially, you can add placeholders in multiple pages, each with a configuration of what subset of tags should be displayed in the index.</p> <p>The simplest index page looks like this. Create it under <code>docs/tags.md</code>.</p> <pre><code># Tag index\n&lt;!-- material/tags --&gt;\n</code></pre> <p>Now, you may want to keep the tags for your blog separate from tags you use in the rest of your page. You can achieve this by assigning the tag index a scope. Put the following under <code>docs/blog/tags.md</code>:</p> <pre><code># Tag index  for the blog\n&lt;!-- material/tags { scope: true } --&gt;\n</code></pre> <p>You now have two index pages: one covers the whole site and one covers only the blog. Add both to the navigation:</p> <pre><code>nav:\n    - Home: index.md\n    - Tags: tags.md\n    - Blog:\n        - blog/index.md\n        - blog/tags.md\n</code></pre> <p>The tags plugin in the Insider Edition is an incredibly powerful tool and we can only scratch the surface of what is possible with it. If you want to explore more after you have worked for this part of the tutorial, have a look at the tags plugin reference.</p>"},{"location":"tutorials/blogs/navigation/#defining-authors","title":"Defining authors","text":"<p>If your blog has more than one author then you may want to identify the author for each blog post. The blog plugin allows you to create a file that contains the author information and to then reference the authors of a particular post in the page header.</p> <p>Create author info</p> <p>Create a file <code>docs/blog/.authors.yml</code> with this content:</p> <pre><code>authors:\n  team:\n    name: Team\n    description: Creator\n    avatar: https://simpleicons.org/icons/materialformkdocs.svg\n  squidfunk:\n    name: Martin Donath\n    description: Creator\n    avatar: https://github.com/squidfunk.png\n</code></pre> <p>and then add a line to the header of the first post:</p> <pre><code>---\ndate:\n  created: 2023-12-31\n  updated: 2024-01-02\nauthors:\n  - team\n---\n</code></pre> <p>Note that <code>authors</code> is a list, so you can specify multiple authors.</p> <p>With the Insiders edition, you can create custom author index pages that can highlight the contributions of an author as well as provide additional information about them.</p> <p>Add author page </p> <p>First, you need to enable author profiles in the <code>mkdocs.yml</code>:</p> <pre><code>plugins:\n  - search\n  - blog:\n      archive_date_format: MMMM yyyy\n      categories_allowed:\n          - Holidays\n          - News\n      authors_profiles: true\n</code></pre> <p>Check your blog to see that there is now an extra entry in the main navigation next to <code>archive</code> and <code>categories</code> that lists the authors and their contributions.</p> <p>To customize the author page, you can create a page that overrides the one generated by default. First, create the <code>author</code> directory that the profile pages will live in:</p> <pre><code>docs\n\u251c\u2500\u2500 blog\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 author\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 index.md\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 posts\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 draft.md\n\u2502\u00a0\u00a0     \u2514\u2500\u2500 myfirst.md\n\u2514\u2500\u2500 index.md\n</code></pre> <p>Then create a page <code>docs/blog/author/team.md</code>:</p> <pre><code># The Material Team\n\nA small group of people dedicated to making writing documentation easy, if\nnot outright fun! Here are some of the things we have blogged about:\n</code></pre> <p>As you can see, the author index gets appended to the content you have written in the Markdown file.</p>"},{"location":"tutorials/blogs/navigation/#pagination","title":"Pagination","text":"<p>Once your blog starts growing, you may not want to pay attention to the number of posts displayed per page. By default, the plugin displays up to 10 posts on the index pages. You can change this number separately for the main index, the archive index pages, and the category index pages.</p> <p>Changing pagination</p> <p>Add five more blog posts, then set the pagination setting to show five per page only:</p> <pre><code>- blog:\n    archive_date_format: MMMM yyyy\n    categories_allowed:\n        - Holidays\n        - News\n    authors_profiles: true\n    pagination_per_page: 5\n</code></pre> <p>You will see that the pagination setting for archive and category pages are inherited from the setting you added. If you want to have different settings for the different index pages, you can specify each setting separately:</p> <pre><code>- blog:\n    archive_date_format: MMMM yyyy\n    categories_allowed:\n        - Holidays\n        - News\n    authors_profiles: true\n    pagination_per_page: 5\n    archive_pagination_per_page: 10\n    categories_pagination_per_page: 10\n</code></pre>"},{"location":"tutorials/blogs/navigation/#blog-table-of-contents","title":"Blog table of contents","text":"<p>Another thing you may want to do once you have a large enough number of posts is to turn on the function that produces a table of contents for the blog index pages, giving your readers the opportunity to quickly scan the content of each page for something that interests them without having to scroll (assuming that the number of post per page is not too big).</p> <p>Turn on the table of contents feature</p> <p>To produce a table of contents for the blog index pages, add the following to the configuration of the blog plugin:</p> <pre><code>- blog:\n    blog_toc: true\n    archive_date_format: MMMM yyyy\n    # ...\n</code></pre>"},{"location":"tutorials/blogs/navigation/#custom-slugs","title":"Custom slugs","text":"<p>If, for some reason, you are not happy with the way that Material for MkDocs turns headings into slugs, you can create your own slugify function or you can manually define a slug for a specific post.</p> <p>Slugify function</p> <p>To define your own slugify function, you need to write a Python function that converts text into a slug given additional arguments from the configuration. You also need to write a function that returns that function.</p> <p>Say you want to define two slugify functions that you can switch between. The first one returns a slug similar to what the default slugify function produces. The second one cuts the result of that up into words and returns a slug based on a maximum of five of them:</p> <p><pre><code>import re, functools, unicodedata\n\nRE_HTML_TAGS = re.compile(r'&lt;/?[^&gt;]*&gt;', re.UNICODE)\nRE_INVALID_SLUG_CHAR = re.compile(r'[^\\w\\- ]', re.UNICODE)\nRE_WHITESPACE = re.compile(r'\\s', re.UNICODE)\n\ndef _make_slug(text, sep, **kwargs):\n    slug = unicodedata.normalize('NFC', text)\n    slug = RE_HTML_TAGS.sub('', slug)\n    slug = RE_INVALID_SLUG_CHAR.sub('', slug)\n    slug = slug.strip().lower()\n    slug = RE_WHITESPACE.sub(sep, slug)\n    return slug\n\ndef _make_slug_short(text, sep, **kwargs):\n    words = _make_slug(text, sep, **kwargs).split(sep)\n    return sep.join(words[:5])\n\ndef slugify(**kwargs):\n    if 'short' in kwargs and kwargs['short']:\n        return functools.partial(_make_slug_short, **kwargs)\n    return functools.partial(_make_slug, **kwargs)\n</code></pre> Save this code in <code>ext/slugs.py</code> and also add an (empty) <code>__init__.py</code> file to indicate that the directory is a module. Now you can configure your custom slugify code like this:</p> <pre><code>plugins:\n- blog:\n    # other entries omitted\n    post_slugify: !!python/object/apply:ext.slugs.slugify\n      kwds:\n        short: true\n</code></pre> <p>Change the heading of a blog post to be longer than five words and observe how the slugify function shortens the URL. Change the <code>short</code> attribute to <code>false</code> and you can turn this off again.</p> <p>If you want to influence the slug only for a single blog post, you can define it manually by specifying it in the header of the post. Note that this is meant as a last resort option. Specifying a custom slug manually for every post would be tedious.</p> <p>Manually define slug</p> <p>If, for example, you wanted the slug to be 'ny-eve'  instead of the somewhat lengthy 'happy-new-years-eve', you could add the following:</p> <pre><code>---\ndate:\n  created: 2023-12-31\n  updated: 2024-01-02\nreadtime: 15\npin: true\nslug: ny-eve\n---\n</code></pre> <p>The URL for this post should now be <code>http://localhost:8000/blog/2023/01/31/ny-eve/</code>.</p>"},{"location":"tutorials/blogs/navigation/#whats-next","title":"What's next?","text":"<p>You may want to increase engagement with your blog by allowing people to subscribe to an RSS feed, by providing links to your social media profiles, by providing share and like buttons, or by setting up a comment system. The engagement and dissemination tutorial walks you through setting these up.</p>"},{"location":"tutorials/social/basic/","title":"Basic social cards","text":"<p>Social cards are images that other systems such as social media can display as a preview for content linked to. It is easy to get started with the social plugin, true to the motto of Material with MkDocs: \"batteries included.\"</p>"},{"location":"tutorials/social/basic/#basics","title":"Basics","text":"<p>Before you start, there are just a couple of dependencies to install. These are libraries for image processing that the plugin needs to produce the social cards, as well as their Python bindings.</p> <p>With those prerequisites met, it is simply a matter of activating the plugin, which will:</p> <ul> <li>produce the social cards as PNG images for each page in your site;</li> <li>create meta data in the headers of your site's pages that will provide   social media systems with key information and tell them how to find the   social card image.</li> </ul> <p>Add social cards</p> <p>Simply add the social plugin to your list of plugins:</p> <pre><code>    plugins:\n        - search\n        - social\n        - ...\n</code></pre> <p>Now, when you run <code>mkdocs build</code> and look at the <code>site</code> directory, you will see that it contains subfolders under <code>assets/images/social</code> that reflect the structure of your Markdown files. Each page has a corresponding PNG file that contains the social card image.</p> <p>Have a look at the generated HTML and you will see the metadata produced in the <code>head</code> element, including one entry that points to the image.</p>"},{"location":"tutorials/social/basic/#background-color","title":"Background color","text":"<p>The social plugin has configuration options for changing aspects such as colors, images, fonts, logos, the title, even the description. You can configure them for all social cards in the <code>mkdocs.yml</code> and, in the Insiders Edition, they can be overridden in the page header for individual pages.</p> <p>Change the background color</p> <p>To change the background color to an attention-grabbing hot pink, you might add:</p> <pre><code>plugins:\n...\n- social:\n    cards_layout_options:\n        background_color: \"#ff1493\"\n</code></pre>"},{"location":"tutorials/social/basic/#logos","title":"Logos","text":"<p>By default, the plugin uses the logo that you set for the whole site, either through the <code>theme.logo</code> or the <code>theme.icon.logo</code> setting. The difference between the two is that the <code>theme.icon.logo</code> version will directly embed the logo's SVG code into the HTML, allowing it to inherit CSS color settings. When you use <code>theme.logo</code>, the Material includes the logo as an image.</p> <p>You can set your own logo specific for the social cards as well. The path used is relative to your project root and needs to point to an SVG file or a pixel image. It should be rectangular and have a transparent background.</p> <p>Set your own logo</p> <pre><code>plugins:\n- social:\n    cards_layout_options:\n      logo: docs/assets/images/ourlogo.png\n</code></pre>"},{"location":"tutorials/social/basic/#background-images","title":"Background images","text":"<p>In addition to adding your own logo, the most impactful way to personalize your social cards is to add a background image instead of the default solid color background. Make sure you choose one that will contrast well with the other elements of the card.</p> <p>Also, the background color gets rendered on top of the background image, allowing you to use a transparent color to tint an image. To use just the image, use the color value <code>transparent</code>.</p> <p>Add background image</p> <pre><code>plugins:\n- social:\n    cards_layout_options:\n      background_image: layouts/background.png\n      background_color: transparent\n</code></pre> <p>The path to the background image is resolved from the root of your project, so this is where you should make the <code>layouts</code> directory and place the background image. The default site of the social cards included with the plugin is 1200x630 pixels, so choose an image that size or one that scales well to it.</p>"},{"location":"tutorials/social/basic/#additional-layouts-and-styles","title":"Additional layouts and styles","text":"<p>The Insiders Edition provides additional layouts as well as the option to configure different styles for different (kinds of) pages.</p> <p>The Insiders Edition comes with a number of additional layouts for the social cards. For example, the <code>default/variant</code> layout adds a page icon to the card. You can use this to distinguish social cards visually, depending on what kind of page you are sharing.</p> <p>For example, imagine you have a set of pages that advertise events and you want to include a calendar icon as a visual indication that a card advertises an event. In the following, you will set up a directory for event pages and use the meta plugin to assign them a calendar icon.</p> <p>Social cards for event pages</p> <p>First, create a directory in your <code>docs</code> directory to hold the event pages:</p> <pre><code>$ mkdir docs/events\n</code></pre> <p>Then, add a file <code>.meta.yml</code> inside this new directory with settings for the page icon and a hot pink background color that will stand out on social media. Note that you can override the background image by setting it to <code>null</code> here since it is not visible anyway because of the opaque coloring.</p> <pre><code>---\nicon: material/calendar-plus\nsocial:\n  cards_layout_options:\n    background_image: null\n    background_color: \"#ff1493\"\n---\n</code></pre> <p>Now add a page within the <code>docs/events</code> directoy. It does not need to have any special content, just a top level header.</p> <p>To turn on the <code>default/variant</code> layout in <code>mkdocs.yml</code>, add the <code>cards_layout</code> option and also add the meta plugin:</p> <pre><code>plugins:\n  - meta\n  - social:\n      cards_layout: default/variant\n</code></pre> <p>After running <code>mkdocs build</code>, you can see that the social card at <code>site/assets/images/social/events/index.png</code> features the page icon.</p> <p>Note that the icon will also appear next to the navigation element for the page. If that is not what you want then you will need to modify the social card template to gets its icons from another source. You can learn how to do this in the custom social cards tutorial.</p>"},{"location":"tutorials/social/basic/#per-page-settings","title":"Per-page settings","text":"<p>With the Insiders Edition, you can customize the card layout for each page by adding settings to the page header. You have effectively done this in the previous exercise, but using the meta plugin to affect a whole set of pages.</p> <p>Say that in addition to regular events you also have the odd webinar and for this you want to set a different icon and also set the description to indicate that the event is part of the webinar series.</p> <p>Override card style in page header</p> <p>Add the following to the top of the page in <code>docs/events</code> or create a new one:</p> <pre><code>---\nicon: material/web\nsocial:\n  cards_layout_options:\n    description: Our Webinar Series\n---\n</code></pre>"},{"location":"tutorials/social/basic/#whats-next","title":"What's next?","text":"<p>With the Insiders Edition, you can also define custom layouts if the configuration options introduced above as not enough to meet your needs. Continue to the custom social cards tutorial if you want to find out how to do this.</p> <p>Social cards are particularly useful for blog posts. If you have a blog, you need to do nothing more than to turn on both plugins to create social cards to advertise your latest blog posts. If you do not have one yet but would like to, why not check out the blog tutorials?</p>"},{"location":"tutorials/social/custom/","title":"Custom cards","text":"<p>The Insiders Edition allows you to define custom layouts for your social cards to suit your specific needs if the configuration options are not enough. For example, you may want to define a social card to advertise a new release of your product. It should have an icon indicating a launch announcement as well as the version number of the release on the card.</p>"},{"location":"tutorials/social/custom/#setup","title":"Setup","text":"<p>You can either design a custom layout from scratch or use an existing layout as the basis that you add to or otherwise modify. In this tutorial, you will use the default layout as the basis.</p> <p>Copy default layout to customize </p> <p>Copy the default social card layout from your installation of Material for MkDocs to a new directory <code>layouts</code>. The instructions below assume you are in your project root and have a virtual environment within this. The path on your machine, of course, may differ.</p> <pre><code>$ mkdir layouts\n$ cp venv/lib/python3.12/site-packages/material/plugins/social/templates/default/variant.yml \\\n  layouts/release.yml\n</code></pre> <p>Before customizing the social cards, you need to tell the plugin where to find them as well as tell MkDocs to watch for any changes. Add the following to the plugin configuration in your <code>mkdocs.yml</code>:</p> <pre><code>plugins:\n  - social:\n      cards_layout_dir: layouts\n\nwatch:\n  - layouts\n</code></pre> <p>Have a look at the contents of <code>release.yml</code>. You will see that there are:</p> <ul> <li>a number of definitions of content pulled from the site,</li> <li>definitions of tags that end up in the <code>meta</code> elements in the page header   of each page,</li> <li>a specification that consists of a number of layers that the social plugin   applies on top of each other in the order in which they are defined.</li> </ul>"},{"location":"tutorials/social/custom/#define-page-metadata","title":"Define page metadata","text":"<p>In the following, you will add a version number to the social card. This assumes you have a changelog page with information about each release. Add the version number of the latest version to the page header (so it does not need to be parsed out of the Markdown content):</p> <p>Defining the release data </p> <p>Create a page <code>docs/changelog.md</code> with the following content:</p> <pre><code>---\nicon: material/rocket-launch-outline\nsocial:\n  cards_layout: release\n  cards_layout_options:\n    title: New release!\nlatest: 1.2.3\n---\n\n# Releases\n</code></pre>"},{"location":"tutorials/social/custom/#extract-page-metadata","title":"Extract page metadata","text":"<p>With the data defined in the page header, you can now add code to the layout that pulls it out and makes it available to render later on. This is to separate the data manipulation from the actual layout instructions and so make the layout file easier to read.</p> <p>Adding data definitions</p> <p>Add the following at the top of the layout file:</p> <pre><code>definitions:\n  - &amp;latest &gt;-\n    {%- if 'latest' in page.meta %}\n        {{ page.meta['latest']}}\n    {%- else -%}\n        No release version data defined!\n    {%- endif -%}\n</code></pre> <p>The code presented here checks whether the page header contains the necessary entries and spits out a message to the social card if not. Unfortunately, there is no straightforward way to raise an exception or log an error, so the messages merely appear in the social card produced.</p>"},{"location":"tutorials/social/custom/#add-release-version-layer","title":"Add release version layer","text":"<p>The next step is to use these data definitions in a new layer and add it to the ones already present.</p> <p>Render release version</p> <p>Finally, add the following to end of the custom layout:</p> <pre><code>  - size: { width: 990, height: 50 }\n    offset: { x: 50, y: 360 }\n    typography:\n      content: *latest\n      align: start\n      color: *color\n</code></pre> <p>You should now see the social plugin use the custom layout on the changelog page you set up.</p>"},{"location":"tutorials/social/custom/#adjust-layout","title":"Adjust layout","text":"<p>Finally, the rocket icon used for the changelog page is not quite in the right position. Find the please where the <code>page_icon</code> variable is used to create the page icon layer and adjust the horizontal position to 600 instead of 800.</p> <p>Debugging layout files</p> <p>Should you find that your layouts are causing your MkDocs build to fail, there are a number of things you can do:</p> <ol> <li>Run Mkdocs with the <code>--verbose</code> option to get more detailed reporting.</li> <li>Comment out things you recently added or that you suspect are the cause</li> <li>Install the <code>jinja2</code> command-line tool with <code>pip install Jinja2</code> and    run it over your layout file, for example: <code>jinja2 event.yml</code>.</li> </ol>"},{"location":"tutorials/social/custom/#whats-next","title":"What's next?","text":"<p>If you do not have a blog yet, why not check out the blog tutorials and learn how to set one up? The social plugin will help you draw attention to your posts on social media.</p> <p>Check out the other tutorials we have prepared for you.</p>"},{"location":"works/","title":"My essays","text":"<p>This collection of Oleh Shynkarenko's essays spans a wide array of topics, showcasing a dynamic interplay between literature, cinema, culture, and sociopolitical discourse. The works delve into critical examinations of global and Ukrainian cultural phenomena, blending literary analysis with sharp social commentary.</p> <p>The essays range from explorations of classic and contemporary literature, such as Alfred D\u00f6blin's Berlin Alexanderplatz and Paul Auster's New York Trilogy, to reflections on modern filmmaking trends, including Quentin Dupieux\u2019s absurdist cinema and Marina Stepanska\u2019s poignant storytelling. </p> <p>The collection also ventures into the intersections of art, politics, and identity, discussing issues such as feminist literature, the challenges of intellectual independence, and the socio-cultural implications of historical narratives. Through critical pieces on Ukrainian literature and the global literary canon, the collection sheds light on the evolution of storytelling and its role in shaping collective memory.</p> <p>Essays on societal trends, such as the shifting paradigms of reality in the digital age and the influence of metamodern philosophy, add a thought-provoking dimension to the work. </p> <p>Thematically diverse and intellectually stimulating, these essays reflect a deep engagement with the complexities of human expression and cultural transformation, offering readers a rich tapestry of ideas to explore and ponder.</p>"},{"location":"works/adding-translations/","title":"Translations","text":"<p>It's unbelievable \u2013 with the help of international community contributions, Material for MkDocs has been translated into 60+ languages. As you can imagine, it's impossible for us maintainers to keep all languages up-to-date, and new features sometimes require new translations.</p> <p>If you would like to help us to make Material for MkDocs even more globally accessible and have noticed a missing translation in your language, or would like to add a new language, you can help us by following the steps of the guide below.</p>"},{"location":"works/adding-translations/#before-creating-an-issue","title":"Before creating an issue","text":"<p>Translations change frequently, which is why we want to make sure that you don't invest your time in duplicating work. Before adding translations, please check the following things:</p>"},{"location":"works/adding-translations/#check-language-availability","title":"Check language availability","text":"<p>With more than 60 languages, the chances are good that your language is already supported by Material for MkDocs. You can check if your language is available, or needs improvements or additional translations by inspecting the list of supported languages:</p> <ul> <li> <p>Your language is already supported \u2013 in this case, you can check if there   are translations missing, and click the link underneath your language to add them, which takes 5 minutes.</p> </li> <li> <p>Your language is missing \u2013 in that case, you can help us add support   for your language to Material for MkDocs! Read on, to learn how to do this.</p> </li> </ul>"},{"location":"works/adding-translations/#search-our-issue-tracker","title":"Search our issue tracker","text":"<p>Another user might have already created an issue supplying the missing translations for your language that still needs to be integrated by us maintainers. To avoid investing your time in duplicated work, please search the issue tracker beforehand.</p> <p>At this point, when you have made sure that Material for MkDocs doesn't already support your language, you can add new translations for it by following the issue template.</p>"},{"location":"works/adding-translations/#issue-template","title":"Issue template","text":"<p>We have created an issue template that makes contributing translations as simple as possible. It is the result of our experience with 60+ language contributions and updates over the last couple of years, and consists of the following parts:</p> <ul> <li>Title</li> <li>Translations</li> <li>Country flag optional</li> <li>Checklist</li> </ul>"},{"location":"works/adding-translations/#title","title":"Title","text":"<p>When you update an already existing language, you can just leave the title as it is. Adding support for a new language, replace the <code>...</code> in the pre-filled title with the name of your language.</p> Example Clear Add translations for German Unclear Add translations ... Useless Help"},{"location":"works/adding-translations/#translations_1","title":"Translations","text":"<p>If a translation contains an  icon on the right side, it is missing. You can translate this line and remove the  icon. If you don't know how to translate specific lines, simply leave them for other contributors to complete. To ensure the accuracy of your translation, consider double-checking the context of the words by looking at our English translations.</p>"},{"location":"works/adding-translations/#country-flag","title":"Country flag optional","text":"<p>For a better overview, our list of supported languages includes country flags next to the language names. You can help us select a flag for your language by adding the shortcode for the country flag to this field. Go to our emoji search and enter <code>flag</code> to find all available shortcodes.</p> <p>What if my flag is not available?</p> <p>Twemoji provides flag emojis for 260 countries \u2013 subdivisions of countries, such as states, provinces, or regions, are not supported. If you're adding translations for a subdivision, please choose the most appropriate available flag.</p> <p>Why this might be helpful: adding a country flag next to the country name can be helpful for you and for others to find the language in the list of supported languages faster and easier. If your country's flag is not supported by Twemoji, you can help us choose an alternative.</p>"},{"location":"works/adding-translations/#checklist","title":"Checklist","text":"<p>Thanks for following the guide and helping us to add new translations to Material for MkDocs \u2013 you are almost done. The checklist ensures that you have read this guide and have worked to your best knowledge to provide us with everything we need to integrate your contribution.</p> <p>We'll take it from here.</p>"},{"location":"works/adding-translations/#attribution","title":"Attribution","text":"<p>If you submit a translation using the template above, you will be credited as a co-author in the commit, so you don't need to open a pull request. You have done a significant contribution to the project, making Material for MkDocs accessible to more people around the world. Thank you!</p>"},{"location":"works/faces-of-war/","title":"The Faces of War: How Cinema Shapes and Distorts Historical Memory in Ukraine","text":"<p>(Article for \"Kino-Kolo\" magazine, 24 1 (39) \"Ukraine on Fire\") </p> <p> </p> <p>Every war has its own face, formed by millions of faces of its participants. All of them eventually become the faces of characters in films about war, and the expressions of these faces\u2014emotions, gazes, gestures\u2014personify these tragic events in history for us. No one knows how everything actually happened, so acting becomes a substitute for real memories. If an actor possesses an expressive appearance and performs convincingly, their portrayal can overshadow the memories of real events and create a \"real\" reality, which can be used for propaganda if the film's producers so desire.  </p> <p>This assertion is best illustrated by the performance of Semen Svashenko (Tymosh) in Oleksandr Dovzhenko's film \u201cZvenyhora\u201d (1928). Dovzhenko, a committed communist and Russian imperialist who adapted his views to save his life and win favor with the Moscow leadership, discarded the typical red propaganda poster that aimed to brand \u201cUkrainian bourgeois nationalism,\u201d ridicule the Ukrainian People\u2019s Republic, and forever unite thoroughly Russified Ukrainians with Moscow Bolshevism. This stance led to a conflict with the scriptwriters, Mykola (Mike) Johansen and Yuriy Tyutyunnyk.  </p> <p>Dovzhenko recounted their reaction in his 1939 autobiography:  </p> <p>\u201cThe script contained a lot of nonsense and clear nationalist tendencies. That\u2019s why I revised it by 90 percent, resulting in the authors demonstratively \u2018removing their names,\u2019 marking the start of my disagreement with the Kharkiv writers.\u201d  </p> <p>At the meeting of Ukrainian writers convened by VUFKU (All-Ukrainian Photo Cinema Administration) on September 13\u201314, 1928, Johansen also expressed his position of disagreement with the production of films saturated with propagandistic communist undertones:  </p> <p>\u201cOf course, we need to produce more films with our Soviet content, but of the type that American films were. And in this regard, there are none. It\u2019s not for me to tell you which films the proletariat loves the most, but this gap is not only remaining unfilled, but there is even an avoidance of it, and there is a danger of the demise of artistic films.\u201d  </p> <p>Consequently, the authors of the \"wrong\" script, Johansen and Tyutyunnyk, were executed, while Dovzhenko received the Order of Lenin, two Stalin Prizes, and one Lenin Prize.  </p> <p>In this film, Semen Svashenko plays the role of communist Tymosh, whose brother Pavlo, a petlyurivets<sup>1</sup>, flees to Prague after the collapse of the Ukrainian People's Republic, leading a miserable and absurd life, constantly attempting suicide.  </p> <p> Tymosh commands his own execution. Screenshot from Oleksandr Dovzhenko's film \u201cZvenyhora\u201d (1928). </p> <p>Dovzhenko clearly mocks the UPR, striving to trample its legacy into the dirt. Interestingly, there was a significant diplomatic presence of the UPR in Prague at that time, which likely bothered loyal Leninists.  </p> <p> \u201cAnd in emigration, in Prague, sweeping the street with his wide trousers, walks a cossack\u2026\u201d A screenshot from Oleksandr Dovzhenko's film \u201cZvenyhora\u201d (1928). </p> <p>Since the film is silent, the actors must compensate for the lack of dialogue with emphatic theatrical expressions and strike poster-like, even comical poses. Semen Svashenko frequently flashes his eyes and makes tense gestures with his hands, reminiscent of a worker on a modern automobile assembly line.  </p> <p>This is particularly evident in scenes depicting World War I, when he ventures into German trenches with his bare hands or commands his own execution.  </p> <p>The talented actor Amvrosiy Buchma also devoted his talent to Moscow propaganda. In one of his early films, McDonald, he ridiculed the \"decaying West,\" and in The Feat of a Scout, which greatly pleased Stalin, he portrayed a submissive Little Russian, agronomist Leshchuk.  </p> <p>After his arrest, an enraged German occupier interrogates him:  </p> <p>\u201cUkrainian or Russian?\u201d \u201cIn this case, it doesn\u2019t matter... Well, a Ukrainian,\u201d he replies.  </p> <p>Buchma was a leading actor in the famous \"Berezil\" theater, an agent of the Cheka<sup>2</sup>, and received the Order of Lenin and two Stalin Prizes.  </p> <p>However, it is important to note that Buchma occasionally displayed vivid human emotions. Notably, his three-minute role as a gasping German soldier in Dovzhenko\u2019s powerful expressionist film \u201cArsenal\u201d is striking. This crazed, dying laughter, with an open mouth where half the teeth are missing, appears grotesque and especially haunting in context: it seems that death itself is mocking.  </p> <p> Amvrosiy Buchma as a German soldier in Dovzhenko\u2019s film \u201cArsenal\u201d (1929). </p> <p>Nataliya Uzhviy received the Order of Lenin for her role as partisan Olena Kostiuk in Mark Donskoy's film \u201cThe Rainbow\u201d (1943). Once captured by the enemy, she faces a harrowing choice:  </p> <p>The Nazis will either execute her newborn child or she must betray her fellow partisans.  </p> <p>as a partisan Olena Kostiuk  Nataliya Uzhviy as a partisan Olena Kostiuk in Mark Donskoy's film \u201cThe Rainbow\u201d (1943). </p> <p>Olena chooses loyalty to her comrades. Was it really like that? How did real women behave in such situations? We don\u2019t learn this from \u201cThe Rainbow\u201d, yet Nataliya Uzhviy's portrayal is so convincing\u2014full of pathos and emotion\u2014that viewers instantly believe her dedication to Lenin.  </p> <p>In this film, the Germans are caricatured as cruel, speaking Russian with a comical German accent, while Olena Kostiuk\u2019s Russian is always flawless. We are led to believe that she is prepared to sacrifice her child for the USSR's victory in World War II.  </p> <p>In his book \u201cCinema and Radio Propaganda in the Second World War\u201d, researcher Kenneth Short noted that \u201cThe Rainbow\u201d became:  </p> <p>\u201cThe most potent and effective example of Soviet propaganda throughout the war.\u201d  </p> <p>The American ambassador in Moscow personally recommended the film to US President Franklin Roosevelt for viewing. Consequently, it was honored with:  </p> <ul> <li>The Grand Prize from the Association of Film Critics of the United States </li> <li>The Supreme Award from the Daily News for the best foreign film at the American box office in 1944 </li> <li>A prize from the National Council of Film Critics </li> </ul> <p>Ivan Mykolaichuk not only starred as Petro, the son of the musician Dzvonar, in Yuriy Illenko's film \u201cThe White Bird Marked with Black\u201d (1971), but also co-authored the screenplay for this remarkable film.  </p> <p>The story unfolds from 1937 to 1947 in Bukovina, during which Romania lost this territory to Soviet Ukraine. Illenko's film stands out from most other films of its time, not only for its complex and original imagery but also for employing the Ukrainian language in its dialogues.  </p> <p>However, the language retains a strong local West-Ukrainian accent, making parts difficult to understand. It avoids the simplistic slogans typical of propaganda. Yet, political themes do permeate the film.  </p> <p>Petro (Ivan Mykolaichuk) fights with a Hutsul-UPA<sup>3</sup> member because the latter supports Hitler, while Petro\u2019s father has kissed the hand of a Soviet commander.  </p> <p> Ivan Mykolaichuk (in profile) as Petro, the son of the musician Dzvonar in Yuriy Illenko's film \u201cThe White Bird Marked with Black\u201d (1971). </p> <p>Unsurprisingly, the son of the Dzvonar soon enlists in the Red Army, albeit not out of communist zeal; rather, his choice stems from a premonition of Nazi defeat. Meanwhile, Petro\u2019s brother, Orest, has joined the UPA, leading to a tragic conflict within the Dzvonar family.  </p> <p>Mykolaichuk successfully crafts a complex and contradictory character, making this film timeless, unlike Mykolaichuk's brief appearance in the TV series \u201cLiberation\u201d (artilleryman Savchuk, part one \u201cThe Arc of Fire\u201d, 1968).  </p> <p>In a brief scene, Ivan Mykolaichuk takes aim at advancing German tanks but is shot in the head and collapses. Russian captain Serhiy Tsvetaev (Mykola Olyalin) quickly takes his place, and a moment later, the tank destroys the artillery unit.  </p> <p>A dazed Savchuk then cries out with an obvious Ukrainian accent:  </p> <p>\u201cComrade captain, there are five shells left!\u201d  </p> <p>Later, a nurse in love with Tsvetaev rushes onto the battlefield. And where is Savchuk?  </p> <p>This no longer concerns anyone; he has merely served as an inconspicuous backdrop for the heroic Russian captain.  </p> <p>Interestingly, Russian actor Mykola Olyalin, who portrayed Tsvetaev, transitioned into a Ukrainian actor that same year.  </p> <p> Ivan Mykolaichuk as artilleryman Savchuk in Yuri Ozerov\u2019s TV series \u201cLiberation\u201d (1968). </p> <p>Though he spoke no Ukrainian, he starred in Dovzhenko Film Studio projects, performed at Ukrainian cultural venues, received the Order of Prince Yaroslav the Wise, earned the title of People\u2019s Artist of Ukraine, was awarded a lifetime scholarship from President Viktor Yushchenko and buried at the Baikove cemetery<sup>4</sup> in Kyiv.  </p> <p>However, \"Ukrainization\" did not stop Olyalin from participating in the chauvinistic series \u201cRussian Project\u201d (even acting alongside Nikita Mikhalkov, who holds a deep-seated hatred for Ukraine), which contributed to the rise of revanchism and militarism in Russian society, ultimately culminating in war.  </p> <p>Leonid Bykov's role as Captain Oleksiy Tytarenko, nicknamed Maestro\u2014the commander of the second squadron\u2014in the Soviet cinematic masterpiece \u201cOnly Old Men Are Going to Battle\u201d (1974) occupies a special place among Ukrainian film actors.  </p> <p>Bykov also directed this film, allowing himself liberties that might not have been well-received even in the USSR of 1974.  </p> <p> Leonid Bykov portrays Captain Oleksiy \u201cMaestro\u201d Tytarenko in \u201cOnly Old Men Are Going to Battle\u201d (1974). </p> <p>His monologue:  </p> <p>\u201cHow did you not notice? We fought over my Ukraine today!\u201d </p> <p>marks a pivotal moment\u2014for the first time in Soviet cinema, Bykov portrays an active, charismatic, witty, and even cheeky Ukrainian in a way that is difficult for us to appreciate today.  </p> <p>Notice how he responds with:  </p> <p>\u201cYou are welcome!\u201d </p> <p>in Ukrainian instead of Russian.  </p> <p>In this context, these Ukrainian words do not convey gratitude but sound almost like an insult.  </p> <p>Unfortunately, this talented film has become one of the brightest examples of the so-called \u201cSoviet heroic narrative\u201d, which eventually paved the way for Russian aggression against Ukraine.  </p> <p>Underneath this film\u2019s YouTube postings, many comments echo sentiments like:  </p> <p>\u201cHow clearly the unity of Soviet soldiers from different nationalities is depicted in the fight against fascism.\u201d </p> <p>Moreover, it is worth noting that the Ministry of Culture of the Ukrainian SSR attempted to ban the film.  </p> <p>Hleb Shandybin, the acting director of the Dovzhenko Film Studio, convinced the Head of State Cinema of the Ukrainian SSR, Vasyl Bolshak, not to create a Ukrainian dubbing for this picture (which was very unusual, because it was typically done), claiming:  </p> <p>\u201cThe theme of internationalism would disappear.\u201d </p> <p>Indeed, genuine internationalism appears to be possible only in the Russian language! </p> <p>One should also make a separate observation. When analyzing 20<sup>th</sup>-century Ukrainian films, a palpable artificiality in restricting the Ukrainian language is evident:  </p> <p>If a film had potential for commercial success and broad distribution, it would likely exist exclusively in Russian. </p> <p>The case of \u201cAfter Two Hares\u201d (1961) is telling, as it was filmed in Ukrainian but later translated into Russian when producers recognized its commercial prospects; consequently, the Ukrainian original was \u201clost\u201d for 52 years, only to be found later in the Mariupol Film Fund.  </p> <p>This film storage, by the way, contained over 80 tons of unexamined film material, much of which was almost certainly lost forever due to destruction by Russian invaders in 2022.  </p> <p>The principle of restricting the Ukrainian language in cinema persisted well beyond the collapse of the USSR in commercial film production, only beginning to significantly decline in recent years.  </p> <p>After the USSR\u2019s disintegration, actors, liberated from Soviet censorship and the burden of Russian imperialism, began to emerge in Ukraine, yet this did not resolve complex artistic challenges.  </p> <p>Hryhoriy Gladiy managed to appear in Leonid Bykov\u2019s \u201cOnly Old Men Are Going to Battle\u201d (as an unnamed technician of the \u201cColt,\u201d Oleksandrov), but his most significant role was as Roman Shukhevych in Oles Yanchuk\u2019s \u201cUndefeated\u201d (2000).  </p> <p> Hryhoriy Gladiy as Roman Shukhevych in Oles Yanchuk\u2019s \u201cUndefeated\u201d (2000). </p> <p>Unfortunately, despite the guidance of Askold Lozynskyi, president of the World Congress of Ukrainians, this film took a close-to-Soviet \"realist\" approach, lacking vivid artistic discoveries or compelling portrayals.  </p> <p>It resembles the uninspired productions of the Dovzhenko Film Studio in the 1970s.  </p> <p>The director, Oles Yanchuk, seems either to have avoided creative exploration and unconventional directorial decisions or simply may not have been familiar with them.  </p> <p>Hryhoriy Gladiy also fails to attempt to capture the complex character of Roman Shukhevych, merely moving through scenes and delivering sterile lines as written by a far-from-ideal script of a clich\u00e9d costume drama.  </p> <p>For effective artistic representation of historical events in film, it is insufficient to merely dress actors appropriately, provide them with fitting dialogue, and start filming. </p> <p>The work of a true artist demands more; each project presents a challenging creative task without ready-made solutions, where no advice is universally valid, and no one is immune to mistakes or failures.  </p> <p>Conversely, Yevhen Lamakh, playing senior sailor Mishka in Timur Yashchenko\u2019s \u201cCherkasy\u201d (2014), achieved impressive results in understanding and portraying his character, despite his youth.  </p> <p> Yevhen Lamakh as a senior sailor Mishka in Timur Yashchenko\u2019s \u201cCherkasy\u201d (2014). </p> <p>Mishko emerged as a complex and captivating figure:  </p> <ul> <li>Initially presented as a thoughtless village hooligan drawn to the navy for its allure,  </li> <li>By the end of the film, he transforms into a tragic hero from a nation that has chosen not to defend itself against Russian aggression in 2014.  </li> </ul> <p>Mishko becomes entwined in crucial historical events that shape his character.  </p> <p>Importantly, director Timur Yashchenko sidesteps excessive pathos and propaganda by showcasing the unpleasant aspects of daily life; each character in his film possesses flaws that balance their heroic portrayals.  </p> <p>Yevhen Lamakh also takes on a more ornamental role as student Andriy Savytskyi in Oleksiy Shaparev\u2019s \u201cKruty 1918\u201d (2019), which feels too ordinarily directed\u2014akin to a costume drama where Kyiv students engage in artificial dialogues more suitable for puppet theater than for a story about Ukrainian heroes.  </p> <p> Yevhen Lamakh as a student Andriy Savytskyi in Oleksiy Shaparev\u2019s \u201cKruty 1918\u201d (2019). </p> <p>Their lines appear as clumsy and forced as the French accents of counter-spies played by Ukrainian actors.  </p> <p>Oksana Cherkashyna portrays Tetyana, a combat medic hardened by the brutality of war, in Natalia Vorozhbyt\u2019s \u201cBad Roads\u201d (2020).  </p> <p>This film captivates with its unique and unprecedented precision in capturing on-screen events.  </p> <p> Oksana Cherkashyna as a combat medic Tetyana in Natalia Vorozhbyt\u2019s \u201cBad Roads\u201d (2020). </p> <p>It feels as though the director timed every scene with a stopwatch during filming, with:  </p> <ul> <li>Intricate angles </li> <li>Carefully crafted intonations </li> <li>Every dialogue serving the purpose of engrossing the audience </li> </ul> <p>The audience almost feels submerged in the action. </p> <p>For instance, during Tetyana\u2019s poignant recollections about her deceased lover, the background of vulgar pop music makes her words feel much closer to reality.  </p> <p>It creates the impression that it is not Oksana Cherkashyna speaking, but rather, combat medic Tetyana, blurring the lines between performance and documentary.  </p> <p>A notably powerful moment occurs when she sings a banal yet melodramatic song by a Russian pop singer Tanya Bulanova\u2014its unexpected presence within a film about wartime heroism is both poignant and artistically justified.  </p> <p>Marina Klymova also delivers a strong performance in the film as journalist Yulia, taken captive by the terrorist Stas.  </p> <p>In her portrayal, every line, exclamation, whimper, and sudden fainting spell is so calculated and precise that it resonates like a symphony.  </p> <p>Natalya Polovynka, cast as the mother of missing military pilot Sofia Kulyk in Zaza Buadze\u2019s \u201cMothers of the Apostles\u201d (2020), embodies the stereotypical image of a soldier\u2019s mother at war, willing to do anything for her child.  </p> <p> Natalya Polovynka as the mother of missing military pilot Sofia Kulyk in Zaza Buadze\u2019s \u201cMothers of the Apostles\u201d (2020). </p> <p>Sofia ventures into occupied Donbas, where she encounters:  </p> <ul> <li>Stereotypical terrorists </li> <li>A stereotypical alcoholic woman </li> <li>A stereotypical journalist on television </li> </ul> <p>At one point, the viewer may feel as if they are not watching a film, but rather an engaging computer game titled \u201cSurvive and Escape from the DPR\u201d<sup>5</sup>.  </p> <p>In this film, Natalya Polovynka does not act in the traditional sense; instead, she meticulously processes the script.  </p> <p>Director Buadze, primarily known for shooting TV commercials and shows\u2014the commercial viability of which is built on rigid stereotypes\u2014employs techniques designed to captivate viewers and, by extension, drive up advertising rates.  </p> <p>It is clear that he is selling this story to the audience using well-established commercial methods, and he succeeds, even if stereotypical art lacks high artistic merit.  </p> <p>It serves as a reflection of its time and can reveal fragments of truth about reality. </p> <p>Comedian Heorhiy Deliev, in the role of terrorist Batianya (Pop) in Serhii Loznytsia\u2019s \u201cDonbas\u201d (2018), proves to be quite organic.  </p> <p> Heorhiy Deliev as terrorist Batianya (Pop) in Serhii Loznytsia\u2019s \u201cDonbas\u201d (2018). </p> <p>All the terrorists in occupied territories are, in essence, clowns, lending a circus-like atmosphere not only to this film but also to the documentary footage emerging from those regions.  </p> <p>The character of \u201ca short-haired, bald man with a gray beard\u201d, who persuades a businessman to give his car to the \u201crebels\u201d, feels authentic in Deliev\u2019s portrayal.  </p> <p>This is partly because director Loznytsia captures the tone of a tale that resembles a cruel and bloody circus staged on Ukrainian land occupied by Russians.  </p> <p>Vyacheslav Dovzhenko, as the commander of the Donetsk Airport<sup>6</sup>defense group with the call sign \"Serpen\" (August) in Akhtem Seitablaev\u2019s \u201cCyborgs\u201d (2017), faced the complex challenge of authentically representing a heroic struggle.  </p> <p> Vyacheslav Dovzhenko as the commander of the Donetsk Airport defense group in Akhtem Seitablaev\u2019s \u201cCyborgs\u201d (2017). </p>"},{"location":"works/faces-of-war/#the-challenge","title":"The challenge:","text":"<ul> <li>Avoiding cheap and clich\u00e9d pathos.  </li> <li>Portraying realistic modern combat.  </li> <li>Balancing historical accuracy and dramatic tension.  </li> </ul> <p>Timur Yashchenko successfully overcame this difficulty in the \u201cCherkasy\u201d movie by selecting the right cast and showing the characters\u2019 disadvantages.  </p> <p>In contrast, Seitablaev opted for a \u201cCounter-Strike\u201d game-like style in his film. </p> <p>This is evident in scenes featuring: - Night raids and shootouts in dark corridors. - Characters using thermal imaging to spot enemies. </p> <p>However, Vyacheslav Dovzhenko delivers an important monologue:  </p> <p>\u201cIn this war, it is not enough to simply follow orders... we must think, love, feel injustice... We are fighting not only against Russians and Kadyrovtsy<sup>7</sup> but also against our very own Ukrainians... We must study, know history, and analyze our mistakes. If we are here, then we agree to pay for the past.\u201d </p> <p>This perspective is critical following many years of obedient state film propaganda, where everything was clear from the start.  </p> <p>A true film should: \u2705 Challenge viewers\u2019 beliefs \u2705 Prompt doubt instead of blind trust \u2705 Cultivate a critical view of reality </p> <p>A scene in Seitablaev\u2019s film could not have appeared in previous patriotic works:  </p> <p>When one soldier exclaims, \u201cI love Ukraine!\u201d another laughs loudly, sensing the falseness in the sentiment, quipping, \u201cPropaganda in action!\u201d </p> <p>Previously, films could be labeled as: - \"Successful\" propaganda - \"Less successful\" propaganda </p> <p>Now, for the first time, doubt is boldly articulated on screen:  </p> <p>Love for Ukraine may not be sincere but rather the result of propaganda. </p> <p>Recognizing this marks a potential qualitative shift in the narrative of Ukrainian cinema.  </p>"},{"location":"works/faces-of-war/#reality-is-intricate-and-multifaceted","title":"Reality is intricate and multifaceted.","text":"<p>Adequately portraying it onscreen demands considerable effort, as seen in the works of the most renowned global metamodern artists.  </p> <p>We should anticipate that Ukrainian directors will also embrace this trend.  </p>"},{"location":"works/faces-of-war/#footnotes","title":"Footnotes","text":"<ol> <li> <p>A follower or supporter of Symon Petliura, a prominent Ukrainian political and military leader during the Ukrainian War of Independence (1917\u20131921). Petliura was the head of the Ukrainian People's Republic (UPR) and a key figure in the struggle for Ukrainian independence after the fall of the Russian Empire. \u21a9</p> </li> <li> <p>The Cheka (short for All-Russian Extraordinary Commission for Combating Counter-Revolution and Sabotage) was the first secret police organization established in Soviet Russia in 1917 under Vladimir Lenin. It was tasked with suppressing political opposition, counter-revolutionaries, and dissent during and after the Russian Revolution. The Cheka became infamous for its brutal tactics, including arrests, executions, and the use of forced labor camps. It was a precursor to later Soviet security organizations like the NKVD and the KGB. \u21a9</p> </li> <li> <p>The Hutsuls are an ethnic subgroup of Ukrainians living in the Carpathian Mountains, primarily in western Ukraine. They are known for their distinct traditions, vibrant folk art, music, and unique dialect. The UPA (Ukrayins\u2019ka Povstans\u2019ka Armiya) was a Ukrainian nationalist military organization formed during World War II in 1942. Its primary goal was to fight for Ukrainian independence, resisting both Nazi Germany and the Soviet Union. The UPA used guerrilla warfare tactics and is controversial for its actions, including involvement in ethnic conflicts during the war. It remains a significant symbol of Ukrainian resistance and independence for many Ukrainians. \u21a9</p> </li> <li> <p>Baikove Cemetery (Ukrainian: \u0411\u0430\u0439\u043a\u043e\u0432\u0435 \u043a\u043b\u0430\u0434\u043e\u0432\u0438\u0449\u0435) is a historic cemetery memorial in Holosiivskyi District of Kyiv, Ukraine. It is a National Historic Monument of Ukraine and is known as a necropolis of distinguished people. \u21a9</p> </li> <li> <p>Donetsk People's Republic (DPR or \u0414\u043e\u043d\u0435\u0446\u044c\u043a\u0430 \u041d\u0430\u0440\u043e\u0434\u043d\u0430 \u0420\u0435\u0441\u043f\u0443\u0431\u043b\u0456\u043a\u0430 in Ukrainian) is a self-proclaimed, unrecognized separatist entity established in 2014 in the Donetsk region of eastern Ukraine. Backed by Russia, the DPR played a central role in the war in Donbas and the ongoing conflict between Ukraine and pro-Russian forces. Ukraine and most of the international community consider the DPR an illegal entity operating under Russian occupation. \u21a9</p> </li> <li> <p>Donetsk Airport became a symbolic and strategic focal point during the Ukrainian war in 2014-2015. It was fiercely contested between Ukrainian forces and Russian-backed separatists due to its strategic location and modern infrastructure. Despite being heavily damaged, Ukrainian soldiers, nicknamed the \"Cyborgs\" for their resilience, defended it for 242 days. The intense battles highlighted the broader struggle for control in Donbas and became a symbol of Ukrainian resistance. Ultimately, separatists captured the ruins in January 2015. \u21a9</p> </li> <li> <p>The Kadyrovtsy are Chechen paramilitary forces loyal to Ramzan Kadyrov, the leader of Chechnya and an ally of Vladimir Putin. They operate as part of the Russian military and security apparatus. Known for their brutality, they have been involved in various conflicts, including the wars in Ukraine and Syria. The Kadyrovtsy are often accused of human rights abuses and are seen as enforcers of Kadyrov\u2019s and Moscow's influence in Chechnya and beyond. \u21a9</p> </li> </ol>"},{"location":"works/making-a-pull-request/","title":"Pull Requests","text":"<p>You can contribute to Material for MkDocs by making a pull request that will be reviewed by maintainers and integrated into the main repository when the changes made are approved. You can contribute bug fixes, changes to the documentation, or new functionality you have developed.</p> <p>Considering a pull request</p> <p>Before deciding to spend effort on making changes and creating a pull request, please discuss what you intend to do. If you are responding to what you think might be a bug, please issue a bug report first. If you intend to work on documentation, create a documentation issue. If you want to work on a new feature, please create a change request.</p> <p>Keep in mind the guidance given and let people advise you. It might be that there are easier solutions to the problem you perceive and want to address. It might be that what you want to achieve can already be done by configuration or customization.</p>"},{"location":"works/making-a-pull-request/#learning-about-pull-requests","title":"Learning about pull requests","text":"<p>Pull requests are a concept layered on top of Git by services that provide Git hosting. Before you consider making a pull request, you should familiarize yourself with the documentation on GitHub, the service we are using. The following articles are of particular importance:</p> <ol> <li>Forking a repository</li> <li>Creating a pull request from a fork</li> <li>Creating a pull request</li> </ol> <p>Note that they provide tailored documentation for different operating systems and different ways of interacting with GitHub. We do our best in the documentation here to describe the process as it applies to Material for MkDocs but cannot cover all possible combinations of tools and ways of doing things. It is also important that you understand the concept of a pull-request in general before continuing.</p>"},{"location":"works/making-a-pull-request/#pull-request-process","title":"Pull request process","text":"<p>In the following, we describe the general process for making pull requests. The aim here is to provide the 30k ft overview before describing details later on.</p>"},{"location":"works/making-a-pull-request/#preparing-changes-and-draft-pr","title":"Preparing changes and draft PR","text":"<p>The diagram below describes what typically happens to repositories in the process or preparing a pull request. We will be discussing the review-revise process below. It is important that you understand the overall process first before you worry about specific commands. This is why we cover this first before providing instructions below.</p> <pre><code>sequenceDiagram\n  autonumber\n\n  participant mkdocs-material\n  participant PR\n  participant fork\n  participant local\n\n  mkdocs-material -&gt;&gt; fork: fork on GitHub\n  fork -&gt;&gt; local: clone to local\n  local -&gt;&gt; local: branch\n  loop prepare\n    loop push\n      loop edit\n        local -&gt;&gt; local: commit\n      end\n      local -&gt;&gt; fork: push\n    end\n    mkdocs-material -&gt;&gt; fork: merge in any changes\n    fork -&gt;&gt;+ PR: create draft PR\n    PR -&gt;&gt; PR: review your changes\n  end</code></pre> <ol> <li> <p>The first step is that you create a fork of the Material for MkDocs    repository, either mkdocs-material or mkdocs-material-insiders    (only accessible to sponsors). This provides you with a repository that you    can push changes to. Note that it is not possible to have more than one fork    of a given repository at any point in time. So, the fork you create will be    the fork you have.</p> </li> <li> <p>Once it is made, clone it to your local machine so you can start working on    your changes.</p> </li> <li> <p>All contributions should be made through a 'topic branch' with a name that    describes the work being done. This allows you to have more than one piece    of work in progress and, if you are working with the public version, also    shows others clearly that the code contained is work in progress. The topic    branch will be relatively short-lived and will disappear at the end, when    your changes have been incorporated into the codebase.</p> </li> <li> <p>If you intend to make any code changes, as opposed to working on    documentation only, you will need to set up a development    environment.</p> </li> <li> <p>Next comes the iterative process of making edits, committing them to your     clone. Please commit in sensible chunks that constitute a piece of work     instead of committing everything in one go.</p> <p>Remember that fine-grained, incremental commits are much easier to review in than large changes all over the place and with many files involved. Try to keep your changes as small and localized as possible and keep the reviewer in mind when committing. In particular, make sure to write meaningful commit messages.</p> </li> <li> <p>Push your work up to your fork regularly.</p> </li> <li> <p>You should also keep an eye on changes in the Material for MkDocs repository    you cloned. This is especially important if you work takes a while. Please    try and merge any concurrent changes into your fork and into your branch    regularly. You must do this at least once before creating a pull request,    so make your life easier and do it more often so as to minimize the risk of    conflicting changes.</p> </li> <li> <p>Once you are happy that your changes are in a state that you can describe    them in a draft pull request, you should create this. Make sure to    reference any previous discussions or issues that gave rise to your work.    Creating a draft is a good way to get early feedback on your work from the    maintainer or others. You can explicitly request reviews at points where you    think this would be important.</p> </li> <li> <p>Review your work as if you were the reviewer and fix any issues with your     work so far. Look critically at the diffs of the files that you have changed.     In particular, pay attention to whether the changes are as small as possible     and whether you have follow the general coding style used in the project.     If you received feedback, iterate over the process so far as necessary.</p> <p>You should choose a number of projects to test your changes with. You should definitely make sure that the changes do not break the building of the documentation for Material for MkDocs, which you can find in the <code>docs</code> folder. You may also want to make sure that relevant examples from the examples repository still build fine.</p> </li> </ol>"},{"location":"works/making-a-pull-request/#finalizing","title":"Finalizing","text":"<p>Once you are happy with your changes, you can move to the next step, finalizing your pull request and asking for a more formal and detailed review. The diagram below shows the process:</p> <pre><code>sequenceDiagram\n  autonumber\n  participant mkdocs-material\n  participant PR\n  participant fork\n  participant local\n\n  activate PR\n  PR -&gt;&gt; PR : finalize PR\n  loop review\n    loop discuss\n      PR -&gt;&gt; PR: request review\n      PR -&gt;&gt; PR: discussion\n      local -&gt;&gt; fork: push further changes\n    end\n    PR -&gt;&gt; mkdocs-material: merge (and squash)\n    deactivate PR\n    fork -&gt;&gt; fork: delete branch\n    mkdocs-material -&gt;&gt; fork: pull\n    local -&gt;&gt; local: delete branch\n    fork -&gt;&gt; local: pull\n  end</code></pre> <ol> <li> <p>When you are happy that the changes you made amount to a contribution that    the maintainer(s) could integrate into the codebase, finalize the pull    request. This signals to everyone that consider the work 'done' and that it    can be reviewed with a view to accepting and integrating it.</p> </li> <li> <p>Request a review from the maintainer, <code>@squidfunk</code>.</p> </li> <li> <p>The maintainer may make comments on your code, which you should discuss with     them. Bear in mind when doing this that the maintainer may have a different     point of view compared to yours. They will often take a more long-term     perspective of maintaining the project in the years to come while you may be     more focused on the specific issue or feature that you worked on. Please keep     the discussion respectful at all times.</p> <p>It is important to note that not all pull requests get incorporated int the codebase. The reasons can vary. The work may bring to light other issues that block integration of the pull request. Sometimes it helps uncover better ways of doing things or shows that a more general approach is needed. All of this is fine and helps the project progress, even if specific changes are not, ultimately, accepted.</p> </li> <li> <p>Make any requested changes by committing them to your local clone and    pushing them up to your fork. This will automatically update the pull request.    It may well take a few iterations to get your contributions to an acceptable    state. You can help the process along by carefully reading comments made and    making changes with care.</p> </li> <li> <p>Once the reviewer is fully satisfied with the changes, they can merge them    into the main branch (or 'master'). In the process, they may 'squash' your    commits together into a smaller number of commits and may edit the messages    that describe them. Congratulations, you have now contributed to this project    and should see the changes in the main branch under your name.</p> </li> <li> <p>You can now delete the fork and your local repository and start afresh again    next time around. Alternatively, you can keep the repository and local clone    around but it is important that you keep them in sync with the upstream    repository for any subsequent work. We recommend that you start by deleting    the branch you used on your fork.</p> </li> <li> <p>To make sure you have the changes you produced, pull them from the main    repository into the main branch of your fork.</p> </li> <li> <p>Similarly, delete the topic branch from your local clone and...</p> </li> <li> <p>pull the changes to its master branch.</p> </li> </ol>"},{"location":"works/making-a-pull-request/#steps","title":"Steps","text":"<p>Now that the overall process is outlined, here are specific instructions and tips. There are many choices to be made when describing a process for contributing to a project via a pull request. In the following, we assume that you are working with the Git command-line tools. For most alternatives (such as using IDEs or using functionality provided through the GitHub web interface), the translation from the command-line instructions should be simple enough.  We will add notes only where really necessary to keep the complexity of this to a reasonable level.</p>"},{"location":"works/making-a-pull-request/#forking-the-repository","title":"Forking the repository","text":"<p>To make changes to Material for MkDocs, you would first fork one of its repositories on GitHub. This is so that you have a repository on GitHub that you can push changes to (only maintainers and collaborators have write access to the original repositories).</p> <p>Fork the repository for the public version if you want to make changes to code that is in the public version or if you want to make changes to the documentation. It is a good idea to change the name of the repository by appending <code>-fork</code> so that people who come across it know that they have found a temporary fork rather then the original or a permanent fork of the project. You may also want to add a description that clarifies what the repository is for.</p> <p>To make changes to functionality available only within the Insiders version, fork the Insiders repository. Note that the fork will be a private repository. Please respect the terms of the Insiders program and the spirit of the Sponsorware approach used to maintain and develop Material for MkDocs.</p>"},{"location":"works/making-a-pull-request/#setting-up-a-development-environment","title":"Setting up a development environment","text":"<p>From this point onwards, please follow the instructions for setting up the development environment. They will take you through the process of setting up an environment in which you can make changes and review/test them.</p>"},{"location":"works/making-a-pull-request/#making-changes","title":"Making changes","text":"<p>When you make changes to the code or the documentation please follow the established style used in the project. Doing so increases readability and also helps with making diffs easier to read for those who will review the pull request. Avoid making any large-scale style changes such as asking your IDE to re-format all code.</p> <p>Study the code that you are modifying well to ensure that you fully understand how it works before you try to change it. This will not only help you solve the problem you are trying to address but also minimize the risks of creating unintended side effects.</p>"},{"location":"works/making-a-pull-request/#committing-to-a-branch","title":"Committing to a branch","text":"<p>Development for pull requests is best done in a topic branch separate from the <code>master</code> branch. Create a new local branch with <code>git switch -c &lt;name&gt;</code> and commit your changes to this branch.</p> <p>When you want to push commits to your fork, you can do so with <code>git push -u origin &lt;name&gt;</code>. The <code>-u</code> argument is the short version of <code>--set-upstream</code>, which makes the newly created branch 'track' the branch with the same <code>&lt;name&gt;</code> in your fork. This means that then <code>pull</code> and <code>push</code> commands will work against that branch in your fork by default.</p>"},{"location":"works/making-a-pull-request/#merging-concurrent-changes","title":"Merging concurrent changes","text":"<p>If the work you do takes some time then the chances increase that changes will be made to the main repository while you work.It is probably a good idea to set up the original Material for MkDocs repository as an <code>upstream</code> repository for your local clone.</p> <p>This is what it might look like:</p> <pre><code>$ git remote -v\norigin  git@github.com:&lt;your_username&gt;/mkdocs-material-fork.git (fetch)\norigin  git@github.com:&lt;your_username&gt;/mkdocs-material-fork.git (push)\n$ git remote add upstream https://github.com/squidfunk/mkdocs-material.git\n$ git remote -v\norigin  git@github.com:alexvoss/mkdocs-material-fork.git (fetch)\norigin  git@github.com:alexvoss/mkdocs-material-fork.git (push)\nupstream    https://github.com/squidfunk/mkdocs-material.git (fetch)\nupstream    https://github.com/squidfunk/mkdocs-material.git (push)\n</code></pre> <p>After you have done this, you can pull any concurrent changes from the upstream repository directly into your clone and do any necessary merges there, then push them up to your fork. You will need to be explicit about which remote repository you want to use when you are doing a <code>pull</code>:</p> <pre><code># making and committing some local changes\npush pull upstream master\n</code></pre> <p>This fetches changes from the <code>master</code> branch into your topic branch and merges them.</p>"},{"location":"works/making-a-pull-request/#testing-and-reviewing-changes","title":"Testing and reviewing changes","text":"<p>Before you commit any changes, you should make sure that they work as expected and do not create any unintended side effects. You should test them on at least these three smoke tests:</p> <ul> <li> <p>The documentation of Material for MkDocs itself. If you set up and run the development environment as outlined in the instructions for setting up the development environment, <code>mkdocs serve</code> should be running and continuously building the documentation. Check that there are no error messages and, ideally, no (new) warnings.</p> </li> <li> <p>Test on a project that represents the problem or a test for a newly developed feature. You may already have this if you have filed a bug report and created a minimal reproduction. If you are working on a new feature then you may need to build a project to serve as a test suite. It can double as documentation that shows how your new feature is meant to work.</p> </li> <li> <p>Test with relevant examples from the Material for MkDocs Examples   repository. Note that to build all examples in one go you need the projects   plugin from Insiders but you can always build the examples individually   using the public version.</p> </li> <li> <p>Ideally, also test the examples in the examples repository. If you are working on the Insiders edition of Material for MkDocs, you can simply start a build at the top level and the projects plugin will build all of the examples for you. If you are on the public version, you will need to build each sub-project individually. We appreciate that this is a growing collection of examples and you may want to prioritize those that are most relevant to the functionality you change.</p> </li> </ul>"},{"location":"works/making-a-pull-request/#creating-the-pull-request","title":"Creating the pull request","text":"<p>Initially, create the pull request as a draft. You do this through the various interfaces that GitHub provides. Which one you use is entirely up to you. We do not provide specific instructions for using the interfaces as GitHub provide all the information that should be necessary.</p>"},{"location":"works/making-a-pull-request/#commits-messages-mistakes-and-squash","title":"Commits, messages, mistakes and 'squash'","text":""},{"location":"works/making-a-pull-request/#deleting-branches","title":"Deleting branches","text":"<p>Once the pull request has been merged into the master branch of the Material for MkDocs repository, you should remove the branch both from the fork on GitHub and from the local clone on your computer. This avoids possible confusion about the state of development.</p> <p>First, switch back to the <code>master</code> branch with <code>git switch master</code> and then delete the branch used for the PR using <code>git branch -d &lt;name&gt;</code>.</p>"},{"location":"works/making-a-pull-request/#subsequent-pull-requests","title":"Subsequent Pull Requests","text":"<p>It is important that subsequent pull requests are started from an up-to-date history of the <code>master</code> branch. One way to achieve this is to delete the fork and start with an entirely new one next time round.</p> <p>If you contribute to Material for MkDocs more often or just happen to be doing two or more pull requests in succession, you can also just make sure to sync your fork (using the GitHub UI) and pull from it into your local repository. So, just delete the topic branch you created (both locally and in your fork) and pull from the main repository's <code>master</code> branch into your <code>master</code> branch before starting work on a new pull request.</p>"},{"location":"works/making-a-pull-request/#dos-and-donts","title":"Dos and Don'ts","text":"<ol> <li> <p>Don't just create a pull request with changes that are not explained.</p> </li> <li> <p>Do discuss what you intend to do with people in the discussions so that the    rational for any changes is clear before you write or modify code.</p> </li> <li> <p>Do link to the discussion or any issues to provide the context for a pull    request.</p> </li> <li> <p>Do ask questions if you are uncertain about anything.</p> </li> <li> <p>Do ask yourself if what you are doing benefits the wider community and    makes Material for MkDocs a better product.</p> </li> <li> <p>Do ask yourself if the cost of making the changes stands in a good    relation to the benefits they will bring. Some otherwise sensible changes can    add complexity for comparatively little gain, might break existing behaviour    or might be brittle when other changes need to be made.</p> </li> <li> <p>Do merge in concurrent changes frequently to minimize the chance of    conflicting changes that may be difficult to resolve.</p> </li> </ol>"},{"location":"works/manifesto/","title":"Metamodernism Manifesto","text":""},{"location":"works/manifesto/#the-reality-has-not-become-more-complicated","title":"The reality has not become more complicated.","text":"<p>We just started to notice more than before. At some point, this complexity of impressions increased so much that it exploded even before the Technological Singularity. </p> <p>The modern man reminds a patient of Asperger\u2019s Syndrome, who notices all the smallest details of the environment at once, and this knowledge so distracts him (or her) that he (or she) is no longer able to grasp the whole. He (or she) gathers a large collection of photo cameras without any interest in photography. Such an accumulation of information leads to the emergence of a new hybrid consciousness, which combines inseparable, opposite, antagonistic phenomena and in general everything that the eyes can catch and the ears can hear. Hence, a new form of artistic method and a new metaphorical apparatus of understanding reality emerges.</p>"},{"location":"works/manifesto/#the-position-of-the-artist-and-trust-in-reality","title":"The Position of the Artist and Trust in Reality","text":"<p>Realists only trust what they can see.</p> <ul> <li>Childe Harold went on his pilgrimage to touch everything with his own hands.</li> <li>Mr. Pickwick, \u201cwith a spyglass in his coat pocket, and a notebook ready to take to his pages any discovery worthy of attention,\u201d is obsessed with observing and documenting.</li> </ul> <p>Modernists trust only what they cannot see.</p> <ul> <li>Malevich and his followers saw meaning only in reproducing a non-existent reality.</li> <li>Adolf Hitler believed in a non-existent Jewish plot, and Joseph Stalin in a mythical class struggle.</li> </ul> <p>Postmodernists trust nothing.</p> <ul> <li>Samuel Beckett, hiding from the Gestapo in Natalie Sarrot\u2019s house, wrote Watt not about fascism or anti-fascism, but about reality losing its meaning.</li> <li>Language had turned into whitening, making all words equally unconvincing.</li> </ul> <p>Metamodernists trust everything.</p> <ul> <li>In Wes Anderson\u2019s films, everything is true.</li> <li>Dogs and foxes really talk, all events are interconnected, and every object moves in a perfect symmetrical and nested fashion, and nested ninety degrees in exquisite nolling.</li> </ul> <p> </p>"},{"location":"works/manifesto/#metamodernism-is-always-counterintuitive","title":"Metamodernism is Always Counterintuitive","text":"<p>If you think you know something exactly, it is not true at all. </p> <p>This is the radical contradiction of metamodernism with romanticism, which relied entirely on intuitive insights. However, Google and the careful documentation of reality by millions of people have put an end to all insights. Everything is now verifiable, and accuracy depends on the number of checks.</p> <p>Getting stuck in romantic and modernist traditions raises many problems:</p> <ul> <li>Some countries and individuals still exist in the paradigm of romanticism or modernism.</li> <li>The modern metamodernist person will always shock the bearers of the romantic ideal.</li> <li>To exist in a situation of metamodernism is very uncomfortable.</li> </ul> <p>To acknowledge modernity and escape the sweet captivity of archaic consciousness, one must constantly make a substantial effort, which Romantics are incapable of, as it challenges their idealistic model.</p>"},{"location":"works/manifesto/#the-value-of-authorial-purity-and-the-ideal-of-metamodernism","title":"The Value of Authorial Purity and the Ideal of Metamodernism","text":"<p>The phenomenon of the value of the author\u2019s purity is very widespread among literary critics. Purity is a set of specific characteristics of the direction. An author must comply with them in order to be acclaimed by a critic. The impurity of another\u2019s paradigm is felt by the critic literally as dirt. This is the source of mutual contempt. It is similar to the caste system in ancient India.</p> <p>Each time there are different forms of purity. There are romantic-realistic, modernist, postmodern and metamodern ideals of purity.</p> <ul> <li> <p>The realistic ideal sees literature as a witty and sharp reflection of life, but it rejects naturalism and play, which are essential elements of life.</p> </li> <li> <p>The modernist ideal is directly linked to nationalism, and therefore implies the maximum homogenization and unification of the creative method. From the point of view of the modernist critic, the ideal author should be a revolutionary, but he must create a homogeneous reality: it may be, for example, a revolutionary novel about the victory of a national identity in the territory of a country and abroad. The work must necessarily be about the struggle of identities as broad representations of the mass consciousness. Individual characters should only be temporary embodiments of identities that essentially solve nothing, as opposed to a romantic-realistic ideal where individual identities always solve everything.</p> </li> <li> <p>The post-modernist ideal is based on the skillful application of the various pop-patterns that the author must possess at the highest level and construct the fabric of the work, using the irony to maintain a certain distance, so that the reader does not feel impressed with the self-sufficiency of these patterns, because they are not hands, but only gloves (or glove dolls) that are temporarily worn on the hands.</p> </li> <li> <p>The metamodern ideal is the constant oscillation of the sample, and it is very similar to post-modernism, but there is one very significant difference: for the metamodernist there is no difference between the hands and gloves (between the puppet\u2019s hand and the puppet). All previous designs \u2014 both romantic, realistic, modernist and post-modernist \u2014 have the same value for him and can exist both alternately and simultaneously. It should look like nightmarish chaos, but everyone saves snippets (formerly called interludes) into which the author simply channels the specimens to avoid confusion. In general, metamodenism is a very uncomfortable phenomenon, because it is counterintuitive, does not recognize any hierarchy, and its constant oscillation leads to the fact that it is often not clear what is happening: one wants the author to finally dwell on something alone, but in metamodernism this is simply not possible.</p> </li> </ul> <p>Metamodernism should look like nightmarish chaos, but instead, it preserves snippets, small interludes that prevent confusion.</p> <p> </p>"},{"location":"works/manifesto/#snippets-in-metamodernism","title":"Snippets in Metamodernism","text":"<p>Snippets, in Wes Anderson\u2019s Moonrise Kingdom, represent a Western cultural phenomenon:</p> <p>Suzy Bishop carries six books she borrowed but never returned:</p> <ol> <li>Shelly and the Secret Universe</li> <li>The Francine Odysseys</li> <li>The Girl from Jupiter</li> <li>Disappearance of the 6<sup>th</sup> Grade</li> <li>The Light of Seven Matchsticks</li> <li>The Return of Auntie Lorraine</li> </ol> <p> </p> <p>None of these books actually exist. Anderson came up with all these names and wrote snippets of these books to cite aloud in the movie. The artists commissioned by the director painted the covers. All of these books are fantasy novels for teenage girls. Such novels occupy a significant place in English-speaking culture, so much so that they have already begun to transcend their traditional area of existence. For example, British singer and leader of The Cure band Robert Smith used the figurative system of fantasy novel of Penelope Farmer \u201cCharlotte Sometimes\u201d for one of his songs of the same title.</p> <p>Of course, snippets have existed in art for a very long time, but only in metamodernism they are always simulated by the author, present in large numbers and characterized by excessive detailization.</p> <p> </p>"},{"location":"works/manifesto/#fast-notion-about-metamodern","title":"Fast Notion About Metamodern","text":"<p>In order to quickly get a fairly accurate idea of \u200b\u200bthe metamodern, one has to imagine the inhabitants of a certain house, who threw away all their belongings in the trash, and instructed the artist to create something of value, but necessarily with the use of each thing and so that everything would not look like a collage or an assembly, but would remind of something new and quality that had just been purchased at the store. The artist says to this, </p> <p>\u201cHave you gone mad? Who will believe that this is a new and quality thing?\u201d </p> <p>\u201cTake it easy,\u201d said the owners of the thrown things, \u201cwe will believe. You just wash there, wipe it \u2026 here, see, the rag lies? Wipe with the rag. To make it shine a little and look like new.\u201d </p> <p>\u201cBut you will recognize your things!\u201d, the artist wonders. </p> <p>\u201cWe won\u2019t recognize,\u201d the owners of the things respond, \u201cbecause we\u2019ve forgotten how they looked. There\u2019s an old man here. He remembers something. But nobody listens to him.\u201d</p>"},{"location":"works/manifesto/#triad-of-uncertainty","title":"Triad of Uncertainty","text":"<p>Much conflict in the modern world arises from a misunderstanding of its nature. The three main principles of metamodernism:</p> <ol> <li>There are no longer things that cannot be funny.</li> <li>There are no such things as are defined in such a way that they can be said to be certain.</li> <li>There are no things that can be said to be in place.</li> </ol> <p> </p>"},{"location":"works/manifesto/#this-manifesto-is-open-to-further-additions","title":"This Manifesto is Open to Further Additions","text":"<p>This manifesto can be expanded, detailed, or completely denied\u2014in full agreement with metamodernism itself.</p>"},{"location":"works/struggle-for-reality/","title":"From Counting Angels to Counting Likes: Science, Faith, and the Rise of Post-Truth","text":"<p>(Positivism\u2019s Ghost: How Science Became a New Religion in the Post-Truth Era)</p> <p>The earliest form of scientific knowledge was religion, emerging at a time when early thinkers had no formal methods and relied solely on hypotheses shaped by their desires and mystical conceptions of how the world should be structured. The earliest religious inquiries were remarkably similar to modern scientific ones in nearly every aspect\u2014except for their subject matter. For example, Thomas Aquinas, in his Summa Theologica, examines the question of whether multiple angels can simultaneously occupy the same space. (Aquinas 2006)</p> <p>This religious approach has persisted throughout history, influencing even modern scientific inquiry. Every scientific hypothesis, to some extent, carries an element of faith\u2014a legacy inherited from religious thought.</p> <p>Here are three examples of modern scientific concepts that remain unproven, relying on a form of intellectual \"faith\" or deeply intuitive reasoning, much like religious beliefs: the multiverse hypothesis, mathematical platonism and string theory. Indeed, whenever you read about Mathematical Platonism or String Theory, it's hard not to think of those medieval scholastics from old jokes, seriously debating how many angels could comfortably fit on the head of a pin. Clearly, modern scientists have inherited from the medieval monks this remarkable penchant for passionately discussing things they can neither observe nor ever prove.</p> <p>Nevertheless, since the Enlightenment, religion has gradually lost its influence in philosophy and science. A well-known anecdote illustrates this shift: when Napoleon asked the French astronomer and mathematician Pierre-Simon Laplace why God was not mentioned in his Treatise on Celestial Mechanics, Laplace famously replied, \"Je n\u2019ai pas besoin de cette hypoth\u00e8se\" (\"I have no need for that hypothesis\"). </p> <p>One of the last significant attempts at integrating religious elements into philosophy was Immanuel Kant's transcendental idealism. He developed a system of thought positioned between realism (which holds that the world exists independently of our perception) and idealism (which asserts that the world is a construct of our perception). According to Kant, human cognition is shaped by \"pure reason\", an innate framework that precedes experience and organizes knowledge into fundamental categories. He argued that through pure reason, independent of sensory experience, one could resolve synthetic problems.</p> <p>Kant\u2019s idea carried a deeply theological undertone, because the only conceivable source of knowledge prior to experience is God. This aligns with Kant\u2019s famous statement: \u201cI had to deny knowledge in order to make room for faith.\u201d Since knowledge prior to experience cannot be verified empirically, it inevitably remains a matter of faith. \u201dFurthermore, Kant introduced a \"divine\" limitation on human understanding\u2014the concept of the thing in itself (Ding an sich), which exists beyond our perception and remains fundamentally unknowable. This paradox led to criticism from his contemporaries, who mocked his reasoning by asking: If the thing in itself cannot be known, then how did Kant himself come to know about it?</p> <p>Eventually, with the Industrial Revolution, religious influences began to be seen as an obstacle to progress. Some philosophers, like Karl Marx, sought to reshape society through a materialist worldview, while others, like Auguste Comte (1798\u20131857), aimed to discard religion entirely. This shift gave rise to positivism, a philosophical approach that emphasized empirical science and rational inquiry as the only legitimate sources of knowledge (Comte 1853). Thus, Kant\u2019s concept of pure reason was ultimately dismissed, as it came to be regarded as metaphysical speculation and was deemed inadequate for scientific and philosophical inquiry. </p> <p>Comte believed the sciences form a hierarchy (mathematics at the base, then physics, chemistry, biology, and culminating in sociology) and formulated core positivist principles:  empirical observation, scientific method as guide, law-like regularities and rejection of metaphysics.</p> <p>Comte\u2019s positivism was not merely epistemological but had a progressive social vision. He believed that as societies enter the positive stage, they would achieve intellectual unity and social reform. Subsequent events demonstrated that it was merely an illusion. The rapid advancement of science, liberated from the ethical and mystical constraints of religion, contributed to the devastating First World War, where the massive loss of life was largely driven by high-tech weaponry. Subsequent events demonstrated that war itself became a powerful catalyst for technological progress.</p> <p>After the war it was obvious that Comte\u2019s ideas are obsolete and should be revitalized. Thus logical positivism (logical empiricism) of the Vienna Circle came. Logical positivism owes its birth to the final sentence of Ludwig Wittgenstein\u2019s Tractatus Logico-Philosophicus (1921): \u201eWovon man nicht sprechen kann, dar\u00fcber muss man schweigen.\u201c (What cannot be spoken about must be kept silent). This phrase defined the ideology of the movement, which became radical empiricism, formulated in the \"verification principle\": a proposition is meaningful only if it can be definitively verified by empirical observation or is analytically true (true by definition) (Ayer 1936).</p> <p>However, almost immediately, this principle encountered a problem, wittily described in his book Human Knowledge: Its Scope and Limits by the critique of positivism, the logical atomist Bertrand Russell:</p> <p>\"Our lives are full of expectations which we usually only become aware of when they fail. Suppose you see half a horse at the moment when it comes round a corner; this may interest you very little, but if the second half turns out to belong to a cow rather than a horse, you will in all likelihood experience a state of extreme surprise which will be almost boundless. It must be admitted that such an occurrence is logically quite possible.\"</p> <p>Indeed, the statement \"all swans are white\" holds meaning only as long as no black swan is found. This means that the empirical method of inductive knowledge through enumeration of observed cases cannot be considered reliable.</p> <p>Logical positivism was helped by a critical rationalist Karl Popper, who, in contrast to the verification principle, proposed the principle of falsification. He argued that a theory is scientific only if it can be tested and potentially refuted. In other words, if there is a possibility of finding a black swan, then it is meaningful to assert that all swans are white. </p> <p>This criterion also applies to entire scientific doctrines. For example, Marxism cannot be falsified because one cannot clearly imagine a scenario in which the poor definitively win the class struggle against the rich; thus, it does not meet Popper\u2019s standard of scientific falsifiability. In contrast, theories that can be tested and potentially disproven\u2014like Einstein's theory of relativity\u2014are considered genuinely scientific.</p> <p>Karl Popper proposed the principle of scientific activity by which all science operates today: if a theory passes many tests, it isn\u2019t verified, only \u201ccorroborated\u201d and held tentatively. (Popper 1959) Thus, no theory can be considered definitely true, as it can potentially be refuted.</p> <p>However, this was not the only problem of positivism, as it was impossible to verify the verification principle itself, since it was not a phenomenon of nature\u2014like the previously mentioned set of white swans\u2014but merely a philosophical claim about language (Richardson 2019).</p> <p>Moreover, the supposed rationality of the positivists was further undermined by G\u00f6del\u2019s Two Incompleteness Theorems (1931):</p> <ol> <li>First Incompleteness Theorem: In any sufficiently developed formal system, there exist true statements that cannot be proven within that system.  </li> <li>Second Incompleteness Theorem: No such system can prove its own consistency.</li> </ol> <p>Criticism of positivism continued in the 1950s when Willard Van Orman Quine, in his 1951 paper \u201cTwo Dogmas of Empiricism,\u201d formulated objections against it. The logical positivists inherited from Kant the distinction between analytic (true by definition) and synthetic (confirmed by experience) judgments. Quine rightly pointed out that any analytic judgment consists of elements that are not themselves analytic (Quine 1951). For example, to prove the widely known statement \"All bachelors are unmarried,\" one must first know from experience who bachelors are and what marriage means. Similarly, all arithmetic operations, which Kant considered analytic, are actually not, since understanding them first requires learning arithmetic. </p> <p>By the 1960s, logical positivism gradually dissolved (Thomas 1956). As historian of philosophy Michael Friedman observed, by 1970 the logical empiricist movement was \u201cpretty clearly over,\u201d even if its influence lingered (Richardson 2019). No single \u201cevent\u201d killed logical positivism; rather it was a cumulative loss of credibility as its bold claims were retracted or rebutted (Thomas 1956). Philosophers Thomas Kuhn and Paul Feyerabend not only criticized the positivist approach, they called for a reconsideration of the very attitude towards science in general.</p> <p>Thomas S. Kuhn in his book \u201cThe Structure of Scientific Revolutions\u201d (1962) noted that the scientific community is extremely conservative, profoundly influenced by social and psychological factors and does not recognize discoveries that go beyond established stereotypes. Alternative theories are not considered because they don\u2019t fit the reigning paradigm\u2019s rules (Kuhn 1970).  </p> <p>Paul Feyerabend took positivist criticism even further. In his 1975 book Against Method, he argued that science cannot have any fixed methodology and does not possess any special claim to truth (Feyerabend 1975). He advocated \"epistemological anarchism\"\u2014the idea that there are no universally valid rules of science\u2014encapsulated in his provocative slogan, \"Anything goes!\" (Feyerabend 1975). From there, postmodernism emerged in full force.</p> <p>As I mentioned at the beginning of this essay, modern science has some features of a religion.  Feyerabend claimed that science is not inherently superior to other modes of knowledge such as myth, religion, but has simply become dominant. He even argued that societies would be healthier if \u201cstate and science\u201d were separated just as we separate church and state, because \u201cscience is a most aggressive and dogmatic religious institution\u201d. (Feyerabend 1975). In books like *Science in a Free Society* (1978), he even entertained relativism, arguing that different cultures may have different truth systems and we have no absolute reason to rank science above ancient myth, except by our own parochial standards (Preston 2020).  </p> <p>In the 1980s postmodernist thinkers extended the critique of positivism and of Enlightenment rationality even further. Thinkers like Jean-Fran\u00e7ois Lyotard and Michel Foucault, among others, argued that science is not the mirror of nature or the one true path to knowledge, but rather a particular narrative or discourse that is deeply shaped by social, linguistic, and power dynamics (Lyotard 1984; Foucault 1980). Instead, they presented science as socially constructed and as one knowledge system among many, with no claim to ultimate or context-free validity (Lyotard 1984). Lyotard claims that The Enlightenment, Marxism\u2019s theory of history etc. are metanarratives that have lost their credibility. Lyotard argued that no such system can claim to possess objective truth, as all knowledge is inherently fragmented. Grand narratives are not neutral; they are employed by states, institutions, and ideologies to justify their decisions and maintain control over society. (Lyotard 1984). Specifically regarding science, he noted two major metanarratives that guided modernity: </p> <ul> <li>that knowledge (science) is progressively leading us toward total truth and human emancipation, and   </li> <li>that history is moving towards freedom and enlightenment. </li> </ul> <p>Positivism clearly partook in the first narrative\u2014the faith that accumulating empirical knowledge would eventually map reality and improve society (Comte 1853). Postmodernity, Lyotard claimed, is marked by skepticism toward such universalist claims.  He described knowledge in postmodern societies as splintered into multiple language games and contexts. Science is just one \u201clanguage game,\u201d with its own rules (e.g., what counts as a valid scientific statement), but it does not have a privileged claim to represent Truth outside those rules (Lyotard 1984). </p> <p>Michel Foucault stated: \u201cTruth isn\u2019t outside power\u2026 truth is produced by virtue of multiple constraints and induces regular effects of power\u2026 each society has its regime of truth, its \u2018general politics\u2019 of truth: the types of discourse it accepts and makes function as true\u201d (Foucault 1980). In other words, what we call \u201ctruth\u201d (including scientific truth) always bears the imprint of the social rules and institutions that endorse certain statements as true and reject others (Foucault 1980). For positivism, which held that objective observation and reason lead to truth, Foucault\u2019s perspective is a severe critique (Richardson 2019). It implies that objectivity itself is a social construct\u2014what counts as objective is defined by a community\u2019s norms and training (Foucault 1980). </p> <p>A typical example of Lyotard and Foucault's concept of power-biased postmodern science is Elon Musk's influence and activity. He uses science for his ventures (SpaceX, Tesla, Neuralink) to promote techno-utopianism, positioning science as the solution to humanity\u2019s crises\u2014a legitimizing discourse consolidating corporate and political influence. By owning X (Twitter), he controls narratives, amplifies right-wing voices, and influences political discourse. Musk's direct involvement in geopolitics surfaced in a Twitter skirmish with Polish FM Sikorski over Starlink for Ukraine. </p> <p>This meta-narrative approach has advanced to the point where, unlike positivists who claimed that a successful experiment reveals a fact of nature, constructivists now argue that the validity of an experiment depends on the authority of the experimenters. (Richardson 2019). Extreme versions even would say scientific knowledge is just the result of interests and negotiations (Lyotard 1984). This raises the question: does truth established in this way remain truth, or does it become something else entirely? The answer is obvious: everyone prefers their own version of truth and would never admit that their truth is less valid than someone else's. This essay began with religion, which gradually evolved into science, but now postmodernists argue that science itself is merely another form of religion or even self-delusion..</p> <p>One notable example highlighting how easily the academic community can be misled was the Sokal affair in 1996, when physicist Alan Sokal successfully published a deliberately absurd article, \"Transgressing the Boundaries: Towards a Transformative Hermeneutics of Quantum Gravity,\" in the humanities journal Social Text. He later revealed his hoax to expose postmodern academia\u2019s tendency to adopt meaningless scientific jargon. A similar but broader attempt, \"Sokal Squared\" (2017\u20132018), involved Peter Boghossian, James Lindsay, and Helen Pluckrose, who submitted numerous nonsensical papers to respected journals, again revealing ideological bias and vulnerability to pseudointellectual content in contemporary scholarship. It\u2019s broadly accepted that scientists are humans with biases, that scientific institutions have agendas, and that social values can shape research questions and applications (Foucault 1980). </p> <p>This devastating approach to science was not halted but slightly tempered by the post-positivist reaction. Thinkers like Popper, Kuhn, Imre Lakatos, Larry Laudan, and others can all be considered post-positivist in that they move beyond the naive verifications of early positivism but do not embrace a full relativism that denies the value of science (Popper 1959; Kuhn 1970; Lakatos 1970). Here are some of the main post-positivist principles: </p> <ul> <li>All theories could be disproven by future observations; none could be known as absolutely true; our picture of the world is always incomplete (Popper 1959).   </li> <li>A hypothesis isn\u2019t verified or falsified outright; rather, evidence raises or lowers our degree of confidence. Peer review, replication, and community consensus is crucial in warranting scientific knowledge. Debate, critique, collaboration help mitigate individual biases  (Richardson 2019).   </li> <li>Contemporary philosophy of science often treats theories as models of the world rather than one-to-one mirrors. Theoretical terms are human constructs that may only apply in certain domains or under certain approximations. (Suppe 1974).   </li> <li>Science advances by solving problems rather than approaching truth in a straightforward way (Laudan 1977).  </li> <li>Scientists work within research programs that have a \u201chard core\u201d of fundamental assumptions and a \u201cprotective belt\u201d of auxiliary hypotheses that can be adjusted. A progressive research program predicts novel facts and expands, whereas a degenerating one only patches itself to accommodate known problems (Lakatos 1970). </li> </ul> <p>After all these post-positivism observations, it was quite natural to expect a new form of knowledge\u2014and it came. We call it post-truth. Post-truth describes a cognitive state where emotions and beliefs override facts, making factual refutation nearly impossible. Philosophers have long noted this: the Duhem-Quine thesis suggests any theory can be shielded from contradiction with enough added assumptions\u2014explaining why flat-earthers in space might dismiss their experience as an AI-generated illusion.</p> <p>Classical epistemology focuses on individual knowledge, but post-truth is a societal condition. In a complex world, no one can be an expert in everything, so people rely on social knowledge shaped by groups, institutions, and shared values. Truth depends less on evidence and more on affiliations, trust, and community narratives.</p> <p>This is why certain political claims, no matter how false, are embraced by specific groups. If a public figure declares that immigrants eat cats and dogs, some will believe it\u2014not from malice, but because they trust the source. Ironically, such a figure might even run a social network called Truth, reinforcing the post-truth cycle.</p> <p>The rise of social media has dismantled the epistemic structures that once defined the \u201cnormal world\u201d of the 20<sup>th</sup> century. Previously, reputable media, universities, and research institutions shaped knowledge, refining it over time. While imperfect, this system served humanity well. Today, expertise has eroded, replaced by Twitter-like platforms where popularity, not accuracy, drives discourse, fragmenting our understanding of truth.</p> <p>As traditional institutions weaken, access to information has skyrocketed, yet truth-validation has never been shakier. This paradox challenges how societies define knowledge in the 21<sup>st</sup> century. Meanwhile, philosophy of science grapples with AI\u2019s role in discovery. Simulations in climate science or astrophysics, once considered secondary to direct observation, now yield valid data (Richardson 2019).</p> <p>By 2025, AI also raises questions about whether discovery is uniquely human and highlights biases in machine learning, where flawed data can reinforce systemic errors (O\u2019Neil 2016). While AI reshapes epistemic practices, it hasn\u2019t replaced human judgment\u2014only shifted it to designing, fine-tuning, and monitoring AI, demanding new frameworks to ensure sound knowledge production.</p> <p>And so, after centuries of chasing truth, we\u2019ve arrived at a world where AI generates scientific papers, Twitter polls decide reality, and philosophers debate whether knowledge still exists at all. Comte\u2019s positivism, Popper\u2019s falsification, and Foucault\u2019s power dynamics now compete with deepfakes and influencer \u201cresearch.\u201d Perhaps science was just another metanarrative, or maybe we\u2019ve simply upgraded from counting angels on needles to counting likes on hot takes. Either way, the post-truth era has spoken: the loudest voice wins, and reality is whatever gets the most engagement.</p>"},{"location":"works/struggle-for-reality/#references","title":"References","text":"<p>Aquinas 2006: Aquinas, Thomas. Summa Theologica. Translated by Fathers of the English Dominican Province. Edited by John Mortensen and Enrique Alarc\u00f3n. Lander, WY: Aquinas Institute, 2006.</p> <p>Ayer 1936: Ayer, A. J. Language, Truth and Logic. London: Gollancz, 1936.</p> <p>Comte 1853: Comte, Auguste. The Course in Positive Philosophy. Translated by Harriet Martineau. 2 vols. London: Chapman, 1853.</p> <p>Feyerabend 1975: Feyerabend, Paul. Against Method: Outline of an Anarchistic Theory of Knowledge. London: New Left Books, 1975.</p> <p>Foucault 1980: Foucault, Michel. \u201cTruth and Power.\u201d In Power/Knowledge: Selected Interviews and Other Writings, 1972\u20131977, edited by Colin Gordon, 109\u2013133. New York: Pantheon, 1980.</p> <p>Kuhn 1962: Kuhn, Thomas S. The Structure of Scientific Revolutions. Chicago: University of Chicago Press, 1962. (See also Kuhn 1970 for 2<sup>nd</sup> edition).</p> <p>Kuhn 1970: Kuhn, Thomas S. The Structure of Scientific Revolutions. 2<sup>nd</sup> edition. Chicago: University of Chicago Press, 1970.</p> <p>Lakatos 1970: Lakatos, Imre. \u201cFalsification and the Methodology of Scientific Research Programmes.\u201d In Criticism and the Growth of Knowledge, edited by Imre Lakatos and Alan Musgrave, 91\u2013196. Cambridge: Cambridge University Press, 1970.</p> <p>Laudan 1977: Laudan, Larry. Progress and Its Problems: Towards a Theory of Scientific Growth. Berkeley: University of California Press, 1977.</p> <p>Lyotard 1984: Lyotard, Jean-Fran\u00e7ois. The Postmodern Condition: A Report on Knowledge. Translated by Geoff Bennington and Brian Massumi. Minneapolis: University of Minnesota Press, 1984. (Originally published in French, 1979).</p> <p>O\u2019Neil 2016: O\u2019Neil, Cathy. Weapons of Math Destruction: How Big Data Increases Inequality and Threatens Democracy. New York: Crown, 2016.</p> <p>Popper 1959: Popper, Karl. The Logic of Scientific Discovery. London: Hutchinson, 1959. (Originally published in German, 1934).</p> <p>Preston 2020: Preston, John. \u201cPaul Feyerabend.\u201d Stanford Encyclopedia of Philosophy (Summer 2020 edition), edited by Edward N. Zalta.</p> <p>Quine 1951: Quine, W. V. O. \u201cTwo Dogmas of Empiricism.\u201d The Philosophical Review 60, no. 1 (1951): 20\u201343.</p> <p>Richardson 2019: Richardson, Alan. \u201cLogical Empiricism.\u201d Stanford Encyclopedia of Philosophy (Spring 2019 edition), edited by Edward N. Zalta.</p> <p>Suppe 1974: Suppe, Frederick (ed.). The Structure of Scientific Theories. Urbana: University of Illinois Press, 1974.</p> <p>Thomas 1956: Thomas, John M. \u201cThe Rise and Fall of Logical Positivism.\u201d Synthese 10, no. 1 (1956): 28\u201349.</p>"},{"location":"blog/archive/2024/","title":"2024","text":""},{"location":"blog/archive/2023/","title":"2023","text":""},{"location":"blog/archive/2022/","title":"2022","text":""},{"location":"blog/archive/2021/","title":"2021","text":""},{"location":"blog/category/general/","title":"General","text":""},{"location":"blog/category/build/","title":"Build","text":""},{"location":"blog/category/performance/","title":"Performance","text":""},{"location":"blog/category/blog/","title":"Blog","text":""},{"location":"blog/category/search/","title":"Search","text":""}]}